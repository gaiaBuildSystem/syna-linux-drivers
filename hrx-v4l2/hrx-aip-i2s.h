// SPDX-License-Identifier: GPL-2.0
/* Copyright 2021 Synaptics Incorporated */

#ifndef __HRX_AIP_I2S_H__
#define __HRX_AIP_I2S_H__

#include "hrx-drv.h"
#include "aio.h"

//HDMI Audio Rx base
#define I2S_HDMIRX_BASE			(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_MIC3)

//MIC3, input
#define I2S_MIC3_PRIAUD_CLKDIV(I2S_MIC_BASE)	((I2S_MIC_BASE) + RA_MIC3_MICCTRL + RA_PRIAUD_CLKDIV)
#define I2S_MIC3_PRIAUD_CTRL(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_MICCTRL + RA_PRIAUD_CTRL)
#define I2S_MIC3_PRIAUD_CTRL1(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_MICCTRL + RA_PRIAUD_CTRL1)

#define I2S_MIC3_RXPORT(I2S_MIC_BASE)			((I2S_MIC_BASE) + RA_MIC3_RXPORT)
#define I2S_MIC3_RXDATA(I2S_MIC_BASE)			((I2S_MIC_BASE) + RA_MIC3_RXDATA)

#define I2S_MIC3_RSD0_CTRL(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_RSD0 + RA_AUDCH_CTRL)
#define I2S_MIC3_RSD1_CTRL(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_RSD1 + RA_AUDCH_CTRL)
#define I2S_MIC3_RSD2_CTRL(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_RSD2 + RA_AUDCH_CTRL)
#define I2S_MIC3_RSD3_CTRL(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_RSD3 + RA_AUDCH_CTRL)
#define I2S_MIC3_RSD_DEBUGHI(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_DBG + RA_DBG_RX_DEBUGHI)
#define I2S_MIC3_RSD_DEBUGLO(I2S_MIC_BASE)		((I2S_MIC_BASE) + RA_MIC3_DBG + RA_DBG_RX_DEBUGLO)

#define I2S_MIC3_DBG_RX(I2S_MIC_BASE)			((I2S_MIC_BASE) + RA_MIC3_DBG)
#define I2S_MIC3_INTLMODE(I2S_MIC_BASE)			((I2S_MIC_BASE) + RA_MIC3_INTLMODE)

// Timestamp and sample count
#define I2S_SAMPINFO_CTRL	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SAMP_CTRL)
#define I2S_SAMPINFO_REQ	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SAMPINFO_REQ)
#define I2S_SAMPINFO_SCR	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR)
#define I2S_SAMPINFO_SCR1	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR1)
#define I2S_SAMPINFO_SCR2	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR2)
#define I2S_SAMPINFO_SCR3	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR3)
#define I2S_SAMPINFO_SCR4	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR4)
#define I2S_SAMPINFO_SCR5	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR5)
#define I2S_SAMPINFO_SCR6	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR6)
#define I2S_SAMPINFO_SCR7	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR7)
#define I2S_SAMPINFO_SCR8	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR8)
#define I2S_SAMPINFO_SCR9	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR9)
#define I2S_SAMPINFO_SCR10	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR10)
#define I2S_SAMPINFO_SCR11	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SCR11)

#define I2S_SAMPINFO_STR	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR)
#define I2S_SAMPINFO_STR1	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR1)
#define I2S_SAMPINFO_STR2	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR2)
#define I2S_SAMPINFO_STR3	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR3)
#define I2S_SAMPINFO_STR4	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR4)
#define I2S_SAMPINFO_STR5	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR5)
#define I2S_SAMPINFO_STR6	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR6)
#define I2S_SAMPINFO_STR7	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR7)
#define I2S_SAMPINFO_STR8	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR8)
#define I2S_SAMPINFO_STR9	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR9)
#define I2S_SAMPINFO_STR10	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR10)
#define I2S_SAMPINFO_STR11	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_STR11)

#define I2S_SAMPINFO_ATR	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_ATR)

#define I2S_SW_RESET		(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_SW_RST)
#define I2S_EARC_SEL		(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_EARC_ARC)
#define I2S_CLK_GATE_EN	(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_CLK_GATE_EN)
#define I2S_XFEED_SEL		(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_XFEED)

#define I2S_IRQENABLE		(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_IRQENABLE)
#define I2S_IRQSTS		(MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_I2S_REG_BASE + RA_AIO_IRQSTS)

//Single channel mute sw control
#define CHAN_MUTE_NONE              0
#define CHAN_MUTE_LEFT              1
#define CHAN_MUTE_RIGHT             2
#define CHAN_MUTE_BOTH              3

#define I2S_AUD_BUFF_BASE           (HEAP_BASE+HEAP_SIZE-0x1000000)  // Use last 16M of HEAP

#define MEMMAP_AVIO_BCM_REG_BASE (MEMMAP_AVIO_REG_BASE + AVIO_MEMMAP_AVIO_BCM_REG_BASE)


#define	   TCF_MANUAL_DEFAULT									 0xF
#define	   TDM_MANUAL_DEFAULT									 0xF
#define	   PRIAUD_CTRL_TDM_MANUAL								 0x7
#define	   PRIAUD_CTRL_TCF_MANUAL								 0x7
#define        PRI_AUD_CTL_TDM_HIGH_MIN                              0x0
#define        PRI_AUD_CTL_TCF_MARGIN_DEF                            0x0


typedef struct {
	//Mic3 cfg
	unsigned char Mic3LeftJfy;
	unsigned char Mic3AudTFM;			//DSP=0, Justified=1, I2S=2, MIC doesn't support DSP mode
	unsigned char Mic3AudTCF;			//bit clock cycles per frame
	unsigned char Mic3AudTDM;			//valid bits per frame
	unsigned char Mic3AudClockDiv;
	unsigned char Mic3INVFS;
	unsigned char Mic3INVCLK;
	unsigned char Mic3TDMMode;
	unsigned char Mic3TDMChCnt;
	unsigned char Mic3TLSB;
	unsigned char Mic3LRSw;
	unsigned char Mic3TDMHigh;

	//customized
	unsigned char ChanMute[2][4];

	unsigned int i2s1_fb_bck;
	unsigned int i2s1_fb_lr;
	unsigned int i2s2_fb_bck;
	unsigned int i2s2_fb_lr;
	unsigned int i2s3_fb_bck;
	unsigned int i2s3_fb_lr;

	unsigned char hdmi_tx_hd_en;
	unsigned char hdmi_rx_hd_en;
	unsigned char hdmi_earc_hd_en;
	unsigned char hdmi_fb_hd_en;

} I2SConfigType;

extern I2SConfigType i2sConfig;

void i2s_rx_mic3_flush(unsigned int regBase);

void i2s_rx_mic3_clock_gate_enable(int enable);

void i2s_rx_mic3_start(unsigned long regBase, int dbg_mode, I2SConfigType *pI2sConfig, int NumofChannel);

#endif
