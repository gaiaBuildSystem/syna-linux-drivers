//////
/// don't edit! auto-generated by docc: hdmiRxPipe.h
////////////////////////////////////////////////////////////
#ifndef __HDMIRXPIPE_H__
#define __HDMIRXPIPE_H__ (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE TG_PL                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 X                    (P)
///               %unsigned 13 start                     0x0
///               %unsigned 13 end                       0x0
///               %%        6          # Stuffing bits...
///     @ 0x00004 Y                    (P)
///               %unsigned 12 start                     0x0
///               %unsigned 12 end                       0x0
///                                    ###
///                                    * Horizontal and Vertical Start and End values for a plane
///                                    ###
///               %%        8          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:      50b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_TG_PL
#define h_TG_PL (){}

    #define     RA_TG_PL_X                                     0x0000

    #define     BA_TG_PL_X_start                               0x0000
    #define     B16TG_PL_X_start                               0x0000
    #define   LSb32TG_PL_X_start                                  0
    #define   LSb16TG_PL_X_start                                  0
    #define       bTG_PL_X_start                               13
    #define   MSK32TG_PL_X_start                                  0x00001FFF

    #define     BA_TG_PL_X_end                                 0x0001
    #define     B16TG_PL_X_end                                 0x0000
    #define   LSb32TG_PL_X_end                                    13
    #define   LSb16TG_PL_X_end                                    13
    #define       bTG_PL_X_end                                 13
    #define   MSK32TG_PL_X_end                                    0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PL_Y                                     0x0004

    #define     BA_TG_PL_Y_start                               0x0004
    #define     B16TG_PL_Y_start                               0x0004
    #define   LSb32TG_PL_Y_start                                  0
    #define   LSb16TG_PL_Y_start                                  0
    #define       bTG_PL_Y_start                               12
    #define   MSK32TG_PL_Y_start                                  0x00000FFF

    #define     BA_TG_PL_Y_end                                 0x0005
    #define     B16TG_PL_Y_end                                 0x0004
    #define   LSb32TG_PL_Y_end                                    12
    #define   LSb16TG_PL_Y_end                                    12
    #define       bTG_PL_Y_end                                 12
    #define   MSK32TG_PL_Y_end                                    0x00FFF000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_TG_PL {
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PL_X_start(r32)                          _BFGET_(r32,12, 0)
    #define   SET32TG_PL_X_start(r32,v)                        _BFSET_(r32,12, 0,v)
    #define   GET16TG_PL_X_start(r16)                          _BFGET_(r16,12, 0)
    #define   SET16TG_PL_X_start(r16,v)                        _BFSET_(r16,12, 0,v)

    #define   GET32TG_PL_X_end(r32)                            _BFGET_(r32,25,13)
    #define   SET32TG_PL_X_end(r32,v)                          _BFSET_(r32,25,13,v)

    #define     w32TG_PL_X                                     {\
            UNSG32 uX_start                                    : 13;\
            UNSG32 uX_end                                      : 13;\
            UNSG32 RSVDx0_b26                                  :  6;\
          }
    union { UNSG32 u32TG_PL_X;
            struct w32TG_PL_X;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PL_Y_start(r32)                          _BFGET_(r32,11, 0)
    #define   SET32TG_PL_Y_start(r32,v)                        _BFSET_(r32,11, 0,v)
    #define   GET16TG_PL_Y_start(r16)                          _BFGET_(r16,11, 0)
    #define   SET16TG_PL_Y_start(r16,v)                        _BFSET_(r16,11, 0,v)

    #define   GET32TG_PL_Y_end(r32)                            _BFGET_(r32,23,12)
    #define   SET32TG_PL_Y_end(r32,v)                          _BFSET_(r32,23,12,v)

    #define     w32TG_PL_Y                                     {\
            UNSG32 uY_start                                    : 12;\
            UNSG32 uY_end                                      : 12;\
            UNSG32 RSVDx4_b24                                  :  8;\
          }
    union { UNSG32 u32TG_PL_Y;
            struct w32TG_PL_Y;
          };
    ///////////////////////////////////////////////////////////
    } SIE_TG_PL;

    typedef union  T32TG_PL_X
          { UNSG32 u32;
            struct w32TG_PL_X;
                 } T32TG_PL_X;
    typedef union  T32TG_PL_Y
          { UNSG32 u32;
            struct w32TG_PL_Y;
                 } T32TG_PL_Y;
    ///////////////////////////////////////////////////////////

    typedef union  TTG_PL_X
          { UNSG32 u32[1];
            struct {
            struct w32TG_PL_X;
                   };
                 } TTG_PL_X;
    typedef union  TTG_PL_Y
          { UNSG32 u32[1];
            struct {
            struct w32TG_PL_Y;
                   };
                 } TTG_PL_Y;

    ///////////////////////////////////////////////////////////
     SIGN32 TG_PL_drvrd(SIE_TG_PL *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 TG_PL_drvwr(SIE_TG_PL *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void TG_PL_reset(SIE_TG_PL *p);
     SIGN32 TG_PL_cmp  (SIE_TG_PL *p, SIE_TG_PL *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define TG_PL_check(p,pie,pfx,hLOG) TG_PL_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define TG_PL_print(p,    pfx,hLOG) TG_PL_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: TG_PL
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE TG_PRG                                   (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL                 (P)
///               %unsigned 2  mode                      0x2
///                                    ###
///                                    * Generates the hcnt and vcnt with the sref. The different modes programmable are : 0 = free running mode, 1 = sync mode, 2= Semi sync mode
///                                    ###
///               %unsigned 8  lwin                      0xF
///                                    ###
///                                    * Used in generation of lock sync and lock active for resetting hcnt and vcnt in TG
///                                    ###
///               %unsigned 12 frst                      0x0
///                                    ###
///                                    * Position during vertical blanking time at which frame reset is generated
///                                    ###
///               %unsigned 10 freeze                    0x0
///                                    ###
///                                    * Freeze controls for TG; this register should be used by SW when it wants to modify the plane position/size registers so that HW does not pick-up the intermediate values written.
///                                    ###
///     @ 0x00004 CTRL1                (P)
///               %unsigned 2  sync_ctrl                 0x0
///                                    ###
///                                    * To provide low latency for pass-through where the latency requirement is less than one frame
///                                    * [0] : Enable Bit. For low latency pass-through, enable this bit to 1’b1. Default it is zero.
///                                    * [1] : The SW will get active video start event from Cypress and then it will program SYNC bit SYNC_CTRL[1] to 1’b1 in VPP for low latency graphics (RGB) pass through.
///                                    ###
///               %unsigned 9  res_change_en             0x0
///                                    ###
///                                    * Enable bits for dynamic resolution change of registers used for generating timing signals
///                                    * [0] – enable bit for Htotal/Vtotal programmable register
///                                    * [1] - enable bit for VX programmable register
///                                    * [2] - enable bit for Hsync (start & end) programmable register
///                                    * [3] - enable bit for Vsync (startY & endY) programmable register
///                                    * [4] - enable bit for Plane0 (startX & endX) programmable register
///                                    * [5] - enable bit for Plane0 (startY & endY) programmable register
///                                    * [6] - enable bit for Field (startX & endX) programmable register
///                                    * [7] - enable bit for Field (startY & endY) programmable register
///                                    * [8] - enable bit for Vsync (startX & endX) programmable register
///                                    ###
///               %%        21         # Stuffing bits...
///     @ 0x00008 Total                (P)
///               %unsigned 12 vertical                  0x0
///                                    ###
///                                    * Vertical Total values (in lines).
///                                    ###
///               %unsigned 13 horizontal                0x0
///                                    ###
///                                    * Horizontal Total values (in pixels)
///                                    ###
///               %%        7          # Stuffing bits...
///     @ 0x0000C Initial              (P)
///               %unsigned 13 xi                        0x0
///                                    ###
///                                    * Initial Horizontal position value
///                                    ###
///               %unsigned 12 yi                        0x0
///                                    ###
///                                    * Initial Vertical position value
///                                    ###
///               %%        7          # Stuffing bits...
///     @ 0x00010 HSYNC                (P)
///               %unsigned 13 h_start                   0x0
///                                    ###
///                                    * Horizontal Start value indicated for Hsync position
///                                    ###
///               %unsigned 13 h_end                     0x0
///                                    ###
///                                    * Horizontal End value indicated for Hsync position
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00014 VSYNC                (P)
///               %unsigned 12 v_start                   0x0
///                                    ###
///                                    * Vertical Start value indicated for Vsync position
///                                    ###
///               %unsigned 12 v_end                     0x0
///                                    ###
///                                    * Vertical End value indicated for Vsync position
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00018 VS                   (P)
///               %unsigned 13 h_start                   0x0
///                                    ###
///                                    * Horizontal Start value indicated for Vsync position
///                                    ###
///               %unsigned 13 h_end                     0x0
///                                    ###
///                                    * Horizontal End value indicated for Vsync position
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x0001C FT                   (P)
///               %unsigned 8  frame                     0x0
///                                    ###
///                                    * Frame total value
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00020 VX                   (P)
///               %unsigned 13 vx                        0x0
///                                    ###
///                                    * Horizontal positions at which vertical active data
///                                    ###
///               %%        19         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      36B, bits:     190b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_TG_PRG
#define h_TG_PRG (){}

    #define     RA_TG_PRG_CTRL                                 0x0000

    #define     BA_TG_PRG_CTRL_mode                            0x0000
    #define     B16TG_PRG_CTRL_mode                            0x0000
    #define   LSb32TG_PRG_CTRL_mode                               0
    #define   LSb16TG_PRG_CTRL_mode                               0
    #define       bTG_PRG_CTRL_mode                            2
    #define   MSK32TG_PRG_CTRL_mode                               0x00000003

    #define     BA_TG_PRG_CTRL_lwin                            0x0000
    #define     B16TG_PRG_CTRL_lwin                            0x0000
    #define   LSb32TG_PRG_CTRL_lwin                               2
    #define   LSb16TG_PRG_CTRL_lwin                               2
    #define       bTG_PRG_CTRL_lwin                            8
    #define   MSK32TG_PRG_CTRL_lwin                               0x000003FC

    #define     BA_TG_PRG_CTRL_frst                            0x0001
    #define     B16TG_PRG_CTRL_frst                            0x0000
    #define   LSb32TG_PRG_CTRL_frst                               10
    #define   LSb16TG_PRG_CTRL_frst                               10
    #define       bTG_PRG_CTRL_frst                            12
    #define   MSK32TG_PRG_CTRL_frst                               0x003FFC00

    #define     BA_TG_PRG_CTRL_freeze                          0x0002
    #define     B16TG_PRG_CTRL_freeze                          0x0002
    #define   LSb32TG_PRG_CTRL_freeze                             22
    #define   LSb16TG_PRG_CTRL_freeze                             6
    #define       bTG_PRG_CTRL_freeze                          10
    #define   MSK32TG_PRG_CTRL_freeze                             0xFFC00000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_CTRL1                                0x0004

    #define     BA_TG_PRG_CTRL1_sync_ctrl                      0x0004
    #define     B16TG_PRG_CTRL1_sync_ctrl                      0x0004
    #define   LSb32TG_PRG_CTRL1_sync_ctrl                         0
    #define   LSb16TG_PRG_CTRL1_sync_ctrl                         0
    #define       bTG_PRG_CTRL1_sync_ctrl                      2
    #define   MSK32TG_PRG_CTRL1_sync_ctrl                         0x00000003

    #define     BA_TG_PRG_CTRL1_res_change_en                  0x0004
    #define     B16TG_PRG_CTRL1_res_change_en                  0x0004
    #define   LSb32TG_PRG_CTRL1_res_change_en                     2
    #define   LSb16TG_PRG_CTRL1_res_change_en                     2
    #define       bTG_PRG_CTRL1_res_change_en                  9
    #define   MSK32TG_PRG_CTRL1_res_change_en                     0x000007FC
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_Total                                0x0008

    #define     BA_TG_PRG_Total_vertical                       0x0008
    #define     B16TG_PRG_Total_vertical                       0x0008
    #define   LSb32TG_PRG_Total_vertical                          0
    #define   LSb16TG_PRG_Total_vertical                          0
    #define       bTG_PRG_Total_vertical                       12
    #define   MSK32TG_PRG_Total_vertical                          0x00000FFF

    #define     BA_TG_PRG_Total_horizontal                     0x0009
    #define     B16TG_PRG_Total_horizontal                     0x0008
    #define   LSb32TG_PRG_Total_horizontal                        12
    #define   LSb16TG_PRG_Total_horizontal                        12
    #define       bTG_PRG_Total_horizontal                     13
    #define   MSK32TG_PRG_Total_horizontal                        0x01FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_Initial                              0x000C

    #define     BA_TG_PRG_Initial_xi                           0x000C
    #define     B16TG_PRG_Initial_xi                           0x000C
    #define   LSb32TG_PRG_Initial_xi                              0
    #define   LSb16TG_PRG_Initial_xi                              0
    #define       bTG_PRG_Initial_xi                           13
    #define   MSK32TG_PRG_Initial_xi                              0x00001FFF

    #define     BA_TG_PRG_Initial_yi                           0x000D
    #define     B16TG_PRG_Initial_yi                           0x000C
    #define   LSb32TG_PRG_Initial_yi                              13
    #define   LSb16TG_PRG_Initial_yi                              13
    #define       bTG_PRG_Initial_yi                           12
    #define   MSK32TG_PRG_Initial_yi                              0x01FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_HSYNC                                0x0010

    #define     BA_TG_PRG_HSYNC_h_start                        0x0010
    #define     B16TG_PRG_HSYNC_h_start                        0x0010
    #define   LSb32TG_PRG_HSYNC_h_start                           0
    #define   LSb16TG_PRG_HSYNC_h_start                           0
    #define       bTG_PRG_HSYNC_h_start                        13
    #define   MSK32TG_PRG_HSYNC_h_start                           0x00001FFF

    #define     BA_TG_PRG_HSYNC_h_end                          0x0011
    #define     B16TG_PRG_HSYNC_h_end                          0x0010
    #define   LSb32TG_PRG_HSYNC_h_end                             13
    #define   LSb16TG_PRG_HSYNC_h_end                             13
    #define       bTG_PRG_HSYNC_h_end                          13
    #define   MSK32TG_PRG_HSYNC_h_end                             0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_VSYNC                                0x0014

    #define     BA_TG_PRG_VSYNC_v_start                        0x0014
    #define     B16TG_PRG_VSYNC_v_start                        0x0014
    #define   LSb32TG_PRG_VSYNC_v_start                           0
    #define   LSb16TG_PRG_VSYNC_v_start                           0
    #define       bTG_PRG_VSYNC_v_start                        12
    #define   MSK32TG_PRG_VSYNC_v_start                           0x00000FFF

    #define     BA_TG_PRG_VSYNC_v_end                          0x0015
    #define     B16TG_PRG_VSYNC_v_end                          0x0014
    #define   LSb32TG_PRG_VSYNC_v_end                             12
    #define   LSb16TG_PRG_VSYNC_v_end                             12
    #define       bTG_PRG_VSYNC_v_end                          12
    #define   MSK32TG_PRG_VSYNC_v_end                             0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_VS                                   0x0018

    #define     BA_TG_PRG_VS_h_start                           0x0018
    #define     B16TG_PRG_VS_h_start                           0x0018
    #define   LSb32TG_PRG_VS_h_start                              0
    #define   LSb16TG_PRG_VS_h_start                              0
    #define       bTG_PRG_VS_h_start                           13
    #define   MSK32TG_PRG_VS_h_start                              0x00001FFF

    #define     BA_TG_PRG_VS_h_end                             0x0019
    #define     B16TG_PRG_VS_h_end                             0x0018
    #define   LSb32TG_PRG_VS_h_end                                13
    #define   LSb16TG_PRG_VS_h_end                                13
    #define       bTG_PRG_VS_h_end                             13
    #define   MSK32TG_PRG_VS_h_end                                0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_FT                                   0x001C

    #define     BA_TG_PRG_FT_frame                             0x001C
    #define     B16TG_PRG_FT_frame                             0x001C
    #define   LSb32TG_PRG_FT_frame                                0
    #define   LSb16TG_PRG_FT_frame                                0
    #define       bTG_PRG_FT_frame                             8
    #define   MSK32TG_PRG_FT_frame                                0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_TG_PRG_VX                                   0x0020

    #define     BA_TG_PRG_VX_vx                                0x0020
    #define     B16TG_PRG_VX_vx                                0x0020
    #define   LSb32TG_PRG_VX_vx                                   0
    #define   LSb16TG_PRG_VX_vx                                   0
    #define       bTG_PRG_VX_vx                                13
    #define   MSK32TG_PRG_VX_vx                                   0x00001FFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_TG_PRG {
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_CTRL_mode(r32)                       _BFGET_(r32, 1, 0)
    #define   SET32TG_PRG_CTRL_mode(r32,v)                     _BFSET_(r32, 1, 0,v)
    #define   GET16TG_PRG_CTRL_mode(r16)                       _BFGET_(r16, 1, 0)
    #define   SET16TG_PRG_CTRL_mode(r16,v)                     _BFSET_(r16, 1, 0,v)

    #define   GET32TG_PRG_CTRL_lwin(r32)                       _BFGET_(r32, 9, 2)
    #define   SET32TG_PRG_CTRL_lwin(r32,v)                     _BFSET_(r32, 9, 2,v)
    #define   GET16TG_PRG_CTRL_lwin(r16)                       _BFGET_(r16, 9, 2)
    #define   SET16TG_PRG_CTRL_lwin(r16,v)                     _BFSET_(r16, 9, 2,v)

    #define   GET32TG_PRG_CTRL_frst(r32)                       _BFGET_(r32,21,10)
    #define   SET32TG_PRG_CTRL_frst(r32,v)                     _BFSET_(r32,21,10,v)

    #define   GET32TG_PRG_CTRL_freeze(r32)                     _BFGET_(r32,31,22)
    #define   SET32TG_PRG_CTRL_freeze(r32,v)                   _BFSET_(r32,31,22,v)
    #define   GET16TG_PRG_CTRL_freeze(r16)                     _BFGET_(r16,15, 6)
    #define   SET16TG_PRG_CTRL_freeze(r16,v)                   _BFSET_(r16,15, 6,v)

    #define     w32TG_PRG_CTRL                                 {\
            UNSG32 uCTRL_mode                                  :  2;\
            UNSG32 uCTRL_lwin                                  :  8;\
            UNSG32 uCTRL_frst                                  : 12;\
            UNSG32 uCTRL_freeze                                : 10;\
          }
    union { UNSG32 u32TG_PRG_CTRL;
            struct w32TG_PRG_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_CTRL1_sync_ctrl(r32)                 _BFGET_(r32, 1, 0)
    #define   SET32TG_PRG_CTRL1_sync_ctrl(r32,v)               _BFSET_(r32, 1, 0,v)
    #define   GET16TG_PRG_CTRL1_sync_ctrl(r16)                 _BFGET_(r16, 1, 0)
    #define   SET16TG_PRG_CTRL1_sync_ctrl(r16,v)               _BFSET_(r16, 1, 0,v)

    #define   GET32TG_PRG_CTRL1_res_change_en(r32)             _BFGET_(r32,10, 2)
    #define   SET32TG_PRG_CTRL1_res_change_en(r32,v)           _BFSET_(r32,10, 2,v)
    #define   GET16TG_PRG_CTRL1_res_change_en(r16)             _BFGET_(r16,10, 2)
    #define   SET16TG_PRG_CTRL1_res_change_en(r16,v)           _BFSET_(r16,10, 2,v)

    #define     w32TG_PRG_CTRL1                                {\
            UNSG32 uCTRL1_sync_ctrl                            :  2;\
            UNSG32 uCTRL1_res_change_en                        :  9;\
            UNSG32 RSVDx4_b11                                  : 21;\
          }
    union { UNSG32 u32TG_PRG_CTRL1;
            struct w32TG_PRG_CTRL1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_Total_vertical(r32)                  _BFGET_(r32,11, 0)
    #define   SET32TG_PRG_Total_vertical(r32,v)                _BFSET_(r32,11, 0,v)
    #define   GET16TG_PRG_Total_vertical(r16)                  _BFGET_(r16,11, 0)
    #define   SET16TG_PRG_Total_vertical(r16,v)                _BFSET_(r16,11, 0,v)

    #define   GET32TG_PRG_Total_horizontal(r32)                _BFGET_(r32,24,12)
    #define   SET32TG_PRG_Total_horizontal(r32,v)              _BFSET_(r32,24,12,v)

    #define     w32TG_PRG_Total                                {\
            UNSG32 uTotal_vertical                             : 12;\
            UNSG32 uTotal_horizontal                           : 13;\
            UNSG32 RSVDx8_b25                                  :  7;\
          }
    union { UNSG32 u32TG_PRG_Total;
            struct w32TG_PRG_Total;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_Initial_xi(r32)                      _BFGET_(r32,12, 0)
    #define   SET32TG_PRG_Initial_xi(r32,v)                    _BFSET_(r32,12, 0,v)
    #define   GET16TG_PRG_Initial_xi(r16)                      _BFGET_(r16,12, 0)
    #define   SET16TG_PRG_Initial_xi(r16,v)                    _BFSET_(r16,12, 0,v)

    #define   GET32TG_PRG_Initial_yi(r32)                      _BFGET_(r32,24,13)
    #define   SET32TG_PRG_Initial_yi(r32,v)                    _BFSET_(r32,24,13,v)

    #define     w32TG_PRG_Initial                              {\
            UNSG32 uInitial_xi                                 : 13;\
            UNSG32 uInitial_yi                                 : 12;\
            UNSG32 RSVDxC_b25                                  :  7;\
          }
    union { UNSG32 u32TG_PRG_Initial;
            struct w32TG_PRG_Initial;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_HSYNC_h_start(r32)                   _BFGET_(r32,12, 0)
    #define   SET32TG_PRG_HSYNC_h_start(r32,v)                 _BFSET_(r32,12, 0,v)
    #define   GET16TG_PRG_HSYNC_h_start(r16)                   _BFGET_(r16,12, 0)
    #define   SET16TG_PRG_HSYNC_h_start(r16,v)                 _BFSET_(r16,12, 0,v)

    #define   GET32TG_PRG_HSYNC_h_end(r32)                     _BFGET_(r32,25,13)
    #define   SET32TG_PRG_HSYNC_h_end(r32,v)                   _BFSET_(r32,25,13,v)

    #define     w32TG_PRG_HSYNC                                {\
            UNSG32 uHSYNC_h_start                              : 13;\
            UNSG32 uHSYNC_h_end                                : 13;\
            UNSG32 RSVDx10_b26                                 :  6;\
          }
    union { UNSG32 u32TG_PRG_HSYNC;
            struct w32TG_PRG_HSYNC;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_VSYNC_v_start(r32)                   _BFGET_(r32,11, 0)
    #define   SET32TG_PRG_VSYNC_v_start(r32,v)                 _BFSET_(r32,11, 0,v)
    #define   GET16TG_PRG_VSYNC_v_start(r16)                   _BFGET_(r16,11, 0)
    #define   SET16TG_PRG_VSYNC_v_start(r16,v)                 _BFSET_(r16,11, 0,v)

    #define   GET32TG_PRG_VSYNC_v_end(r32)                     _BFGET_(r32,23,12)
    #define   SET32TG_PRG_VSYNC_v_end(r32,v)                   _BFSET_(r32,23,12,v)

    #define     w32TG_PRG_VSYNC                                {\
            UNSG32 uVSYNC_v_start                              : 12;\
            UNSG32 uVSYNC_v_end                                : 12;\
            UNSG32 RSVDx14_b24                                 :  8;\
          }
    union { UNSG32 u32TG_PRG_VSYNC;
            struct w32TG_PRG_VSYNC;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_VS_h_start(r32)                      _BFGET_(r32,12, 0)
    #define   SET32TG_PRG_VS_h_start(r32,v)                    _BFSET_(r32,12, 0,v)
    #define   GET16TG_PRG_VS_h_start(r16)                      _BFGET_(r16,12, 0)
    #define   SET16TG_PRG_VS_h_start(r16,v)                    _BFSET_(r16,12, 0,v)

    #define   GET32TG_PRG_VS_h_end(r32)                        _BFGET_(r32,25,13)
    #define   SET32TG_PRG_VS_h_end(r32,v)                      _BFSET_(r32,25,13,v)

    #define     w32TG_PRG_VS                                   {\
            UNSG32 uVS_h_start                                 : 13;\
            UNSG32 uVS_h_end                                   : 13;\
            UNSG32 RSVDx18_b26                                 :  6;\
          }
    union { UNSG32 u32TG_PRG_VS;
            struct w32TG_PRG_VS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_FT_frame(r32)                        _BFGET_(r32, 7, 0)
    #define   SET32TG_PRG_FT_frame(r32,v)                      _BFSET_(r32, 7, 0,v)
    #define   GET16TG_PRG_FT_frame(r16)                        _BFGET_(r16, 7, 0)
    #define   SET16TG_PRG_FT_frame(r16,v)                      _BFSET_(r16, 7, 0,v)

    #define     w32TG_PRG_FT                                   {\
            UNSG32 uFT_frame                                   :  8;\
            UNSG32 RSVDx1C_b8                                  : 24;\
          }
    union { UNSG32 u32TG_PRG_FT;
            struct w32TG_PRG_FT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_PRG_VX_vx(r32)                           _BFGET_(r32,12, 0)
    #define   SET32TG_PRG_VX_vx(r32,v)                         _BFSET_(r32,12, 0,v)
    #define   GET16TG_PRG_VX_vx(r16)                           _BFGET_(r16,12, 0)
    #define   SET16TG_PRG_VX_vx(r16,v)                         _BFSET_(r16,12, 0,v)

    #define     w32TG_PRG_VX                                   {\
            UNSG32 uVX_vx                                      : 13;\
            UNSG32 RSVDx20_b13                                 : 19;\
          }
    union { UNSG32 u32TG_PRG_VX;
            struct w32TG_PRG_VX;
          };
    ///////////////////////////////////////////////////////////
    } SIE_TG_PRG;

    typedef union  T32TG_PRG_CTRL
          { UNSG32 u32;
            struct w32TG_PRG_CTRL;
                 } T32TG_PRG_CTRL;
    typedef union  T32TG_PRG_CTRL1
          { UNSG32 u32;
            struct w32TG_PRG_CTRL1;
                 } T32TG_PRG_CTRL1;
    typedef union  T32TG_PRG_Total
          { UNSG32 u32;
            struct w32TG_PRG_Total;
                 } T32TG_PRG_Total;
    typedef union  T32TG_PRG_Initial
          { UNSG32 u32;
            struct w32TG_PRG_Initial;
                 } T32TG_PRG_Initial;
    typedef union  T32TG_PRG_HSYNC
          { UNSG32 u32;
            struct w32TG_PRG_HSYNC;
                 } T32TG_PRG_HSYNC;
    typedef union  T32TG_PRG_VSYNC
          { UNSG32 u32;
            struct w32TG_PRG_VSYNC;
                 } T32TG_PRG_VSYNC;
    typedef union  T32TG_PRG_VS
          { UNSG32 u32;
            struct w32TG_PRG_VS;
                 } T32TG_PRG_VS;
    typedef union  T32TG_PRG_FT
          { UNSG32 u32;
            struct w32TG_PRG_FT;
                 } T32TG_PRG_FT;
    typedef union  T32TG_PRG_VX
          { UNSG32 u32;
            struct w32TG_PRG_VX;
                 } T32TG_PRG_VX;
    ///////////////////////////////////////////////////////////

    typedef union  TTG_PRG_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_CTRL;
                   };
                 } TTG_PRG_CTRL;
    typedef union  TTG_PRG_CTRL1
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_CTRL1;
                   };
                 } TTG_PRG_CTRL1;
    typedef union  TTG_PRG_Total
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_Total;
                   };
                 } TTG_PRG_Total;
    typedef union  TTG_PRG_Initial
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_Initial;
                   };
                 } TTG_PRG_Initial;
    typedef union  TTG_PRG_HSYNC
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_HSYNC;
                   };
                 } TTG_PRG_HSYNC;
    typedef union  TTG_PRG_VSYNC
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_VSYNC;
                   };
                 } TTG_PRG_VSYNC;
    typedef union  TTG_PRG_VS
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_VS;
                   };
                 } TTG_PRG_VS;
    typedef union  TTG_PRG_FT
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_FT;
                   };
                 } TTG_PRG_FT;
    typedef union  TTG_PRG_VX
          { UNSG32 u32[1];
            struct {
            struct w32TG_PRG_VX;
                   };
                 } TTG_PRG_VX;

    ///////////////////////////////////////////////////////////
     SIGN32 TG_PRG_drvrd(SIE_TG_PRG *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 TG_PRG_drvwr(SIE_TG_PRG *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void TG_PRG_reset(SIE_TG_PRG *p);
     SIGN32 TG_PRG_cmp  (SIE_TG_PRG *p, SIE_TG_PRG *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define TG_PRG_check(p,pie,pfx,hLOG) TG_PRG_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define TG_PRG_print(p,    pfx,hLOG) TG_PRG_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: TG_PRG
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE TG                      biu              (4,4)
///     ###
///     * Register specification of interface Timing Generator
///     * There are two counters in the timing generator module. hCntr (from 1 to SIZE_X) and vCntr (from 1 to SIZE_Y).
///     * When start, the initial value will be loaded to the xCnt and yCnt
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 INIT                 (P)
///               %unsigned 16 Y                         0x1
///                                    ###
///                                    * Initial Y value which will be used to load Y counter when tg is enabled.
///                                    ###
///               %unsigned 16 X                         0x1
///                                    ###
///                                    * Initial X value which will be used to load X counter when tg is enabled.
///                                    * A whole frame scan size.
///                                    ###
///     @ 0x00004 SIZE                 (P)
///               %unsigned 16 Y                         0x465
///                                    ###
///                                    * Total scan lines per frame.
///                                    ###
///               %unsigned 16 X                         0x898
///                                    ###
///                                    * Total scan clock cycles per line.
///                                    * Hsync
///                                    ###
///     @ 0x00008 HS                   (P)
///               %unsigned 16 FE                        0x1
///                                    ###
///                                    * Hsync front edge. The first pixel position of hsync pulse.
///                                    ###
///               %unsigned 16 BE                        0x2C
///                                    ###
///                                    * Hsync back edge. The last pixel position of hsync pulse.
///                                    * HS = hCntr>=FE & hCntr<=BE
///                                    * HBlanking
///                                    ###
///     @ 0x0000C HB                   (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * HB = hCntr>=FE || hCntr<=BE.
///                                    ###
///     @ 0x00010 HB_CR                (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * HB_CR = hCntr>=FE || hCntr<=BE.
///                                    ###
///     @ 0x00014 HB_CR2               (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * Note : to be programmed with different value (only when cropping is required). Else to be programmed same as HB FE (above register)
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * Note : to be programmed with different value (only when cropping is required). Else to be programmed same as HB BE (above register)
///                                    * HB = hCntr>=FE || hCntr<=BE.
///                                    * VS0 defines the first first pixel position of the first VSYNC (progressive or interlace mode) pulse.
///                                    * For example
///                                    * 1080i60, the VTP is the last pixel of the last line. So set both VLCNT0 and VPCNT0 to 0.
///                                    ###
///     @ 0x00018 VS0                  (P)
///               %unsigned 16 FE                        0x1
///                                    ###
///                                    * Vsync pulse front edge.
///                                    * Vsync will be asserted at the beginning of this line.
///                                    ###
///               %unsigned 16 BE                        0x5
///                                    ###
///                                    * Vsync pulse back edge.
///                                    * Vsycn pulse will be de-asserted after the end of this line.
///                                    * Vsync = (vCntr>=FE & vCntr<=BE)
///                                    * Vsync pulse 1
///                                    * defines the first pixel position of the second vSync pulse. For example
///                                    * 1080i60, the VTP is pixel 1100 of line 563. So set both VLCNT2=563. and VPCNT2 to 1100.
///                                    ###
///     @ 0x0001C VS1                  (P)
///               %unsigned 16 FE                        0x233
///                                    ###
///                                    * Vsync pulse 1 front edge line position.
///                                    * Vsync pulse 1 will be asserted at the middle of this line.
///                                    ###
///               %unsigned 16 BE                        0x238
///                                    ###
///                                    * Vsync pulse 1 back edge line position.
///                                    * Vsync pulse 1 will be de-asserted at the middle of this line.
///                                    * Vsync1 = (vCntr>=FE & hCntr>SIZEX/2) & (vCntr<=BE & hCntr<=SIZEX/2)
///                                    * Vertical blanking.
///                                    * VB0 parameter definietion
///                                    ###
///     @ 0x00020 VB0                  (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * Vblank0 = vCntr>=FE || vCntr<=BE
///                                    ###
///     @ 0x00024 VB0_CR               (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * Vblank0_CR = vCntr>=FE || vCntr<=BE
///                                    ###
///     @ 0x00028 VB0_CR2              (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    * Note : to be programmed with different value only when cropping is required. Else to be programmed same as VB0 FE (above register)
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * Note : to be programmed with different value only when cropping is required. Else to be programmed same as VB0 BE (above register)
///                                    * Vblank0 = vCntr>=FE || vCntr<=BE
///                                    ###
///     @ 0x0002C VB1                  (P)
///               %unsigned 16 FE                        0x231
///                                    ###
///                                    * Vblank front edge line postion
///                                    * The first line number of VB1.
///                                    ###
///               %unsigned 16 BE                        0x247
///                                    ###
///                                    * Vblank back edge line postion
///                                    * the last line numer of VB1.
///                                    * VB1 = (vCntr>=FE & vCntr<=BE)
///                                    * SCAN mode
///                                    ###
///     @ 0x00030 SCAN                 (P)
///               %unsigned 1  MODE                      0x0
///                                    : PROG                      0x0
///                                    : INTER                     0x1
///                                                 ###
///                                                 * Frame done interrupt position
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00034 INTPOS               (P)
///               %unsigned 16 FRAME                     0x465
///                                    ###
///                                    * Frame interrupt status will be set at the end of this line.
///                                    * Program 0 to this register will disable frame interrupt.
///                                    ###
///               %unsigned 16 FIELD                     0x233
///                                    ###
///                                    * Field interrupt status will be set at the end of this line.
///                                    * Program 0 to this register will disable field interrupt.
///                                    * MODE
///                                    ###
///     @ 0x00038 MODE                 (P)
///               %unsigned 1  EN                        0x0
///                                    : MASTER                    0x0
///                                    : SLAVE                     0x1
///                                                 ###
///                                                 * In master mode, TG drive the control signal.
///                                                 * In slave mode, TG take the external hsync and vsync, it generate the internal sync and blank signal based on the programmed register and external hsync and vsync.
///                                                 * HREF input for slave mode.
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0003C HVREF                (P)
///               %unsigned 1  SEL                       0x0
///                                    : SYNC                      0x0
///                                    : BLANK                     0x1
///                                                 ###
///                                                 * In slave mode, tg will sync to the external tg generated HREF/VREF which could be HSYBC/VSYNC or HBLANK/VBLANK. Currently only HSYNC/VSYNC is supported.
///                                                 * HSYNC and VSYNC have to be come in pair.
///                                                 ###
///               %unsigned 1  POL                       0x0
///                                    : NEG_PULSE                 0x0
///                                    : POS_PULSE                 0x1
///                                                 ###
///                                                 * 0 : indicate the input HREF/VREF are negative pulses
///                                                 * 1: indicate the input HREF/VREFare positive pulses.
///                                                 * HREF and VREF have to be the same polarity.
///                                                 * End of TG register group
///                                                 ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      64B, bits:     420b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_TG
#define h_TG (){}

    #define     RA_TG_INIT                                     0x0000

    #define     BA_TG_INIT_Y                                   0x0000
    #define     B16TG_INIT_Y                                   0x0000
    #define   LSb32TG_INIT_Y                                      0
    #define   LSb16TG_INIT_Y                                      0
    #define       bTG_INIT_Y                                   16
    #define   MSK32TG_INIT_Y                                      0x0000FFFF

    #define     BA_TG_INIT_X                                   0x0002
    #define     B16TG_INIT_X                                   0x0002
    #define   LSb32TG_INIT_X                                      16
    #define   LSb16TG_INIT_X                                      0
    #define       bTG_INIT_X                                   16
    #define   MSK32TG_INIT_X                                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_SIZE                                     0x0004

    #define     BA_TG_SIZE_Y                                   0x0004
    #define     B16TG_SIZE_Y                                   0x0004
    #define   LSb32TG_SIZE_Y                                      0
    #define   LSb16TG_SIZE_Y                                      0
    #define       bTG_SIZE_Y                                   16
    #define   MSK32TG_SIZE_Y                                      0x0000FFFF

    #define     BA_TG_SIZE_X                                   0x0006
    #define     B16TG_SIZE_X                                   0x0006
    #define   LSb32TG_SIZE_X                                      16
    #define   LSb16TG_SIZE_X                                      0
    #define       bTG_SIZE_X                                   16
    #define   MSK32TG_SIZE_X                                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_HS                                       0x0008

    #define     BA_TG_HS_FE                                    0x0008
    #define     B16TG_HS_FE                                    0x0008
    #define   LSb32TG_HS_FE                                       0
    #define   LSb16TG_HS_FE                                       0
    #define       bTG_HS_FE                                    16
    #define   MSK32TG_HS_FE                                       0x0000FFFF

    #define     BA_TG_HS_BE                                    0x000A
    #define     B16TG_HS_BE                                    0x000A
    #define   LSb32TG_HS_BE                                       16
    #define   LSb16TG_HS_BE                                       0
    #define       bTG_HS_BE                                    16
    #define   MSK32TG_HS_BE                                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_HB                                       0x000C

    #define     BA_TG_HB_FE                                    0x000C
    #define     B16TG_HB_FE                                    0x000C
    #define   LSb32TG_HB_FE                                       0
    #define   LSb16TG_HB_FE                                       0
    #define       bTG_HB_FE                                    16
    #define   MSK32TG_HB_FE                                       0x0000FFFF

    #define     BA_TG_HB_BE                                    0x000E
    #define     B16TG_HB_BE                                    0x000E
    #define   LSb32TG_HB_BE                                       16
    #define   LSb16TG_HB_BE                                       0
    #define       bTG_HB_BE                                    16
    #define   MSK32TG_HB_BE                                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_HB_CR                                    0x0010

    #define     BA_TG_HB_CR_FE                                 0x0010
    #define     B16TG_HB_CR_FE                                 0x0010
    #define   LSb32TG_HB_CR_FE                                    0
    #define   LSb16TG_HB_CR_FE                                    0
    #define       bTG_HB_CR_FE                                 16
    #define   MSK32TG_HB_CR_FE                                    0x0000FFFF

    #define     BA_TG_HB_CR_BE                                 0x0012
    #define     B16TG_HB_CR_BE                                 0x0012
    #define   LSb32TG_HB_CR_BE                                    16
    #define   LSb16TG_HB_CR_BE                                    0
    #define       bTG_HB_CR_BE                                 16
    #define   MSK32TG_HB_CR_BE                                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_HB_CR2                                   0x0014

    #define     BA_TG_HB_CR2_FE                                0x0014
    #define     B16TG_HB_CR2_FE                                0x0014
    #define   LSb32TG_HB_CR2_FE                                   0
    #define   LSb16TG_HB_CR2_FE                                   0
    #define       bTG_HB_CR2_FE                                16
    #define   MSK32TG_HB_CR2_FE                                   0x0000FFFF

    #define     BA_TG_HB_CR2_BE                                0x0016
    #define     B16TG_HB_CR2_BE                                0x0016
    #define   LSb32TG_HB_CR2_BE                                   16
    #define   LSb16TG_HB_CR2_BE                                   0
    #define       bTG_HB_CR2_BE                                16
    #define   MSK32TG_HB_CR2_BE                                   0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_VS0                                      0x0018

    #define     BA_TG_VS0_FE                                   0x0018
    #define     B16TG_VS0_FE                                   0x0018
    #define   LSb32TG_VS0_FE                                      0
    #define   LSb16TG_VS0_FE                                      0
    #define       bTG_VS0_FE                                   16
    #define   MSK32TG_VS0_FE                                      0x0000FFFF

    #define     BA_TG_VS0_BE                                   0x001A
    #define     B16TG_VS0_BE                                   0x001A
    #define   LSb32TG_VS0_BE                                      16
    #define   LSb16TG_VS0_BE                                      0
    #define       bTG_VS0_BE                                   16
    #define   MSK32TG_VS0_BE                                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_VS1                                      0x001C

    #define     BA_TG_VS1_FE                                   0x001C
    #define     B16TG_VS1_FE                                   0x001C
    #define   LSb32TG_VS1_FE                                      0
    #define   LSb16TG_VS1_FE                                      0
    #define       bTG_VS1_FE                                   16
    #define   MSK32TG_VS1_FE                                      0x0000FFFF

    #define     BA_TG_VS1_BE                                   0x001E
    #define     B16TG_VS1_BE                                   0x001E
    #define   LSb32TG_VS1_BE                                      16
    #define   LSb16TG_VS1_BE                                      0
    #define       bTG_VS1_BE                                   16
    #define   MSK32TG_VS1_BE                                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_VB0                                      0x0020

    #define     BA_TG_VB0_FE                                   0x0020
    #define     B16TG_VB0_FE                                   0x0020
    #define   LSb32TG_VB0_FE                                      0
    #define   LSb16TG_VB0_FE                                      0
    #define       bTG_VB0_FE                                   16
    #define   MSK32TG_VB0_FE                                      0x0000FFFF

    #define     BA_TG_VB0_BE                                   0x0022
    #define     B16TG_VB0_BE                                   0x0022
    #define   LSb32TG_VB0_BE                                      16
    #define   LSb16TG_VB0_BE                                      0
    #define       bTG_VB0_BE                                   16
    #define   MSK32TG_VB0_BE                                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_VB0_CR                                   0x0024

    #define     BA_TG_VB0_CR_FE                                0x0024
    #define     B16TG_VB0_CR_FE                                0x0024
    #define   LSb32TG_VB0_CR_FE                                   0
    #define   LSb16TG_VB0_CR_FE                                   0
    #define       bTG_VB0_CR_FE                                16
    #define   MSK32TG_VB0_CR_FE                                   0x0000FFFF

    #define     BA_TG_VB0_CR_BE                                0x0026
    #define     B16TG_VB0_CR_BE                                0x0026
    #define   LSb32TG_VB0_CR_BE                                   16
    #define   LSb16TG_VB0_CR_BE                                   0
    #define       bTG_VB0_CR_BE                                16
    #define   MSK32TG_VB0_CR_BE                                   0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_VB0_CR2                                  0x0028

    #define     BA_TG_VB0_CR2_FE                               0x0028
    #define     B16TG_VB0_CR2_FE                               0x0028
    #define   LSb32TG_VB0_CR2_FE                                  0
    #define   LSb16TG_VB0_CR2_FE                                  0
    #define       bTG_VB0_CR2_FE                               16
    #define   MSK32TG_VB0_CR2_FE                                  0x0000FFFF

    #define     BA_TG_VB0_CR2_BE                               0x002A
    #define     B16TG_VB0_CR2_BE                               0x002A
    #define   LSb32TG_VB0_CR2_BE                                  16
    #define   LSb16TG_VB0_CR2_BE                                  0
    #define       bTG_VB0_CR2_BE                               16
    #define   MSK32TG_VB0_CR2_BE                                  0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_VB1                                      0x002C

    #define     BA_TG_VB1_FE                                   0x002C
    #define     B16TG_VB1_FE                                   0x002C
    #define   LSb32TG_VB1_FE                                      0
    #define   LSb16TG_VB1_FE                                      0
    #define       bTG_VB1_FE                                   16
    #define   MSK32TG_VB1_FE                                      0x0000FFFF

    #define     BA_TG_VB1_BE                                   0x002E
    #define     B16TG_VB1_BE                                   0x002E
    #define   LSb32TG_VB1_BE                                      16
    #define   LSb16TG_VB1_BE                                      0
    #define       bTG_VB1_BE                                   16
    #define   MSK32TG_VB1_BE                                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_SCAN                                     0x0030

    #define     BA_TG_SCAN_MODE                                0x0030
    #define     B16TG_SCAN_MODE                                0x0030
    #define   LSb32TG_SCAN_MODE                                   0
    #define   LSb16TG_SCAN_MODE                                   0
    #define       bTG_SCAN_MODE                                1
    #define   MSK32TG_SCAN_MODE                                   0x00000001
    #define        TG_SCAN_MODE_PROG                                        0x0
    #define        TG_SCAN_MODE_INTER                                       0x1
    ///////////////////////////////////////////////////////////
    #define     RA_TG_INTPOS                                   0x0034

    #define     BA_TG_INTPOS_FRAME                             0x0034
    #define     B16TG_INTPOS_FRAME                             0x0034
    #define   LSb32TG_INTPOS_FRAME                                0
    #define   LSb16TG_INTPOS_FRAME                                0
    #define       bTG_INTPOS_FRAME                             16
    #define   MSK32TG_INTPOS_FRAME                                0x0000FFFF

    #define     BA_TG_INTPOS_FIELD                             0x0036
    #define     B16TG_INTPOS_FIELD                             0x0036
    #define   LSb32TG_INTPOS_FIELD                                16
    #define   LSb16TG_INTPOS_FIELD                                0
    #define       bTG_INTPOS_FIELD                             16
    #define   MSK32TG_INTPOS_FIELD                                0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MODE                                     0x0038

    #define     BA_TG_MODE_EN                                  0x0038
    #define     B16TG_MODE_EN                                  0x0038
    #define   LSb32TG_MODE_EN                                     0
    #define   LSb16TG_MODE_EN                                     0
    #define       bTG_MODE_EN                                  1
    #define   MSK32TG_MODE_EN                                     0x00000001
    #define        TG_MODE_EN_MASTER                                        0x0
    #define        TG_MODE_EN_SLAVE                                         0x1
    ///////////////////////////////////////////////////////////
    #define     RA_TG_HVREF                                    0x003C

    #define     BA_TG_HVREF_SEL                                0x003C
    #define     B16TG_HVREF_SEL                                0x003C
    #define   LSb32TG_HVREF_SEL                                   0
    #define   LSb16TG_HVREF_SEL                                   0
    #define       bTG_HVREF_SEL                                1
    #define   MSK32TG_HVREF_SEL                                   0x00000001
    #define        TG_HVREF_SEL_SYNC                                        0x0
    #define        TG_HVREF_SEL_BLANK                                       0x1

    #define     BA_TG_HVREF_POL                                0x003C
    #define     B16TG_HVREF_POL                                0x003C
    #define   LSb32TG_HVREF_POL                                   1
    #define   LSb16TG_HVREF_POL                                   1
    #define       bTG_HVREF_POL                                1
    #define   MSK32TG_HVREF_POL                                   0x00000002
    #define        TG_HVREF_POL_NEG_PULSE                                   0x0
    #define        TG_HVREF_POL_POS_PULSE                                   0x1
    ///////////////////////////////////////////////////////////

    typedef struct SIE_TG {
    ///////////////////////////////////////////////////////////
    #define   GET32TG_INIT_Y(r32)                              _BFGET_(r32,15, 0)
    #define   SET32TG_INIT_Y(r32,v)                            _BFSET_(r32,15, 0,v)
    #define   GET16TG_INIT_Y(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_INIT_Y(r16,v)                            _BFSET_(r16,15, 0,v)

    #define   GET32TG_INIT_X(r32)                              _BFGET_(r32,31,16)
    #define   SET32TG_INIT_X(r32,v)                            _BFSET_(r32,31,16,v)
    #define   GET16TG_INIT_X(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_INIT_X(r16,v)                            _BFSET_(r16,15, 0,v)

    #define     w32TG_INIT                                     {\
            UNSG32 uINIT_Y                                     : 16;\
            UNSG32 uINIT_X                                     : 16;\
          }
    union { UNSG32 u32TG_INIT;
            struct w32TG_INIT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_SIZE_Y(r32)                              _BFGET_(r32,15, 0)
    #define   SET32TG_SIZE_Y(r32,v)                            _BFSET_(r32,15, 0,v)
    #define   GET16TG_SIZE_Y(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_SIZE_Y(r16,v)                            _BFSET_(r16,15, 0,v)

    #define   GET32TG_SIZE_X(r32)                              _BFGET_(r32,31,16)
    #define   SET32TG_SIZE_X(r32,v)                            _BFSET_(r32,31,16,v)
    #define   GET16TG_SIZE_X(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_SIZE_X(r16,v)                            _BFSET_(r16,15, 0,v)

    #define     w32TG_SIZE                                     {\
            UNSG32 uSIZE_Y                                     : 16;\
            UNSG32 uSIZE_X                                     : 16;\
          }
    union { UNSG32 u32TG_SIZE;
            struct w32TG_SIZE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_HS_FE(r32)                               _BFGET_(r32,15, 0)
    #define   SET32TG_HS_FE(r32,v)                             _BFSET_(r32,15, 0,v)
    #define   GET16TG_HS_FE(r16)                               _BFGET_(r16,15, 0)
    #define   SET16TG_HS_FE(r16,v)                             _BFSET_(r16,15, 0,v)

    #define   GET32TG_HS_BE(r32)                               _BFGET_(r32,31,16)
    #define   SET32TG_HS_BE(r32,v)                             _BFSET_(r32,31,16,v)
    #define   GET16TG_HS_BE(r16)                               _BFGET_(r16,15, 0)
    #define   SET16TG_HS_BE(r16,v)                             _BFSET_(r16,15, 0,v)

    #define     w32TG_HS                                       {\
            UNSG32 uHS_FE                                      : 16;\
            UNSG32 uHS_BE                                      : 16;\
          }
    union { UNSG32 u32TG_HS;
            struct w32TG_HS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_HB_FE(r32)                               _BFGET_(r32,15, 0)
    #define   SET32TG_HB_FE(r32,v)                             _BFSET_(r32,15, 0,v)
    #define   GET16TG_HB_FE(r16)                               _BFGET_(r16,15, 0)
    #define   SET16TG_HB_FE(r16,v)                             _BFSET_(r16,15, 0,v)

    #define   GET32TG_HB_BE(r32)                               _BFGET_(r32,31,16)
    #define   SET32TG_HB_BE(r32,v)                             _BFSET_(r32,31,16,v)
    #define   GET16TG_HB_BE(r16)                               _BFGET_(r16,15, 0)
    #define   SET16TG_HB_BE(r16,v)                             _BFSET_(r16,15, 0,v)

    #define     w32TG_HB                                       {\
            UNSG32 uHB_FE                                      : 16;\
            UNSG32 uHB_BE                                      : 16;\
          }
    union { UNSG32 u32TG_HB;
            struct w32TG_HB;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_HB_CR_FE(r32)                            _BFGET_(r32,15, 0)
    #define   SET32TG_HB_CR_FE(r32,v)                          _BFSET_(r32,15, 0,v)
    #define   GET16TG_HB_CR_FE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16TG_HB_CR_FE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define   GET32TG_HB_CR_BE(r32)                            _BFGET_(r32,31,16)
    #define   SET32TG_HB_CR_BE(r32,v)                          _BFSET_(r32,31,16,v)
    #define   GET16TG_HB_CR_BE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16TG_HB_CR_BE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define     w32TG_HB_CR                                    {\
            UNSG32 uHB_CR_FE                                   : 16;\
            UNSG32 uHB_CR_BE                                   : 16;\
          }
    union { UNSG32 u32TG_HB_CR;
            struct w32TG_HB_CR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_HB_CR2_FE(r32)                           _BFGET_(r32,15, 0)
    #define   SET32TG_HB_CR2_FE(r32,v)                         _BFSET_(r32,15, 0,v)
    #define   GET16TG_HB_CR2_FE(r16)                           _BFGET_(r16,15, 0)
    #define   SET16TG_HB_CR2_FE(r16,v)                         _BFSET_(r16,15, 0,v)

    #define   GET32TG_HB_CR2_BE(r32)                           _BFGET_(r32,31,16)
    #define   SET32TG_HB_CR2_BE(r32,v)                         _BFSET_(r32,31,16,v)
    #define   GET16TG_HB_CR2_BE(r16)                           _BFGET_(r16,15, 0)
    #define   SET16TG_HB_CR2_BE(r16,v)                         _BFSET_(r16,15, 0,v)

    #define     w32TG_HB_CR2                                   {\
            UNSG32 uHB_CR2_FE                                  : 16;\
            UNSG32 uHB_CR2_BE                                  : 16;\
          }
    union { UNSG32 u32TG_HB_CR2;
            struct w32TG_HB_CR2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_VS0_FE(r32)                              _BFGET_(r32,15, 0)
    #define   SET32TG_VS0_FE(r32,v)                            _BFSET_(r32,15, 0,v)
    #define   GET16TG_VS0_FE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VS0_FE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define   GET32TG_VS0_BE(r32)                              _BFGET_(r32,31,16)
    #define   SET32TG_VS0_BE(r32,v)                            _BFSET_(r32,31,16,v)
    #define   GET16TG_VS0_BE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VS0_BE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define     w32TG_VS0                                      {\
            UNSG32 uVS0_FE                                     : 16;\
            UNSG32 uVS0_BE                                     : 16;\
          }
    union { UNSG32 u32TG_VS0;
            struct w32TG_VS0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_VS1_FE(r32)                              _BFGET_(r32,15, 0)
    #define   SET32TG_VS1_FE(r32,v)                            _BFSET_(r32,15, 0,v)
    #define   GET16TG_VS1_FE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VS1_FE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define   GET32TG_VS1_BE(r32)                              _BFGET_(r32,31,16)
    #define   SET32TG_VS1_BE(r32,v)                            _BFSET_(r32,31,16,v)
    #define   GET16TG_VS1_BE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VS1_BE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define     w32TG_VS1                                      {\
            UNSG32 uVS1_FE                                     : 16;\
            UNSG32 uVS1_BE                                     : 16;\
          }
    union { UNSG32 u32TG_VS1;
            struct w32TG_VS1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_VB0_FE(r32)                              _BFGET_(r32,15, 0)
    #define   SET32TG_VB0_FE(r32,v)                            _BFSET_(r32,15, 0,v)
    #define   GET16TG_VB0_FE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VB0_FE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define   GET32TG_VB0_BE(r32)                              _BFGET_(r32,31,16)
    #define   SET32TG_VB0_BE(r32,v)                            _BFSET_(r32,31,16,v)
    #define   GET16TG_VB0_BE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VB0_BE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define     w32TG_VB0                                      {\
            UNSG32 uVB0_FE                                     : 16;\
            UNSG32 uVB0_BE                                     : 16;\
          }
    union { UNSG32 u32TG_VB0;
            struct w32TG_VB0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_VB0_CR_FE(r32)                           _BFGET_(r32,15, 0)
    #define   SET32TG_VB0_CR_FE(r32,v)                         _BFSET_(r32,15, 0,v)
    #define   GET16TG_VB0_CR_FE(r16)                           _BFGET_(r16,15, 0)
    #define   SET16TG_VB0_CR_FE(r16,v)                         _BFSET_(r16,15, 0,v)

    #define   GET32TG_VB0_CR_BE(r32)                           _BFGET_(r32,31,16)
    #define   SET32TG_VB0_CR_BE(r32,v)                         _BFSET_(r32,31,16,v)
    #define   GET16TG_VB0_CR_BE(r16)                           _BFGET_(r16,15, 0)
    #define   SET16TG_VB0_CR_BE(r16,v)                         _BFSET_(r16,15, 0,v)

    #define     w32TG_VB0_CR                                   {\
            UNSG32 uVB0_CR_FE                                  : 16;\
            UNSG32 uVB0_CR_BE                                  : 16;\
          }
    union { UNSG32 u32TG_VB0_CR;
            struct w32TG_VB0_CR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_VB0_CR2_FE(r32)                          _BFGET_(r32,15, 0)
    #define   SET32TG_VB0_CR2_FE(r32,v)                        _BFSET_(r32,15, 0,v)
    #define   GET16TG_VB0_CR2_FE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16TG_VB0_CR2_FE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define   GET32TG_VB0_CR2_BE(r32)                          _BFGET_(r32,31,16)
    #define   SET32TG_VB0_CR2_BE(r32,v)                        _BFSET_(r32,31,16,v)
    #define   GET16TG_VB0_CR2_BE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16TG_VB0_CR2_BE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define     w32TG_VB0_CR2                                  {\
            UNSG32 uVB0_CR2_FE                                 : 16;\
            UNSG32 uVB0_CR2_BE                                 : 16;\
          }
    union { UNSG32 u32TG_VB0_CR2;
            struct w32TG_VB0_CR2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_VB1_FE(r32)                              _BFGET_(r32,15, 0)
    #define   SET32TG_VB1_FE(r32,v)                            _BFSET_(r32,15, 0,v)
    #define   GET16TG_VB1_FE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VB1_FE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define   GET32TG_VB1_BE(r32)                              _BFGET_(r32,31,16)
    #define   SET32TG_VB1_BE(r32,v)                            _BFSET_(r32,31,16,v)
    #define   GET16TG_VB1_BE(r16)                              _BFGET_(r16,15, 0)
    #define   SET16TG_VB1_BE(r16,v)                            _BFSET_(r16,15, 0,v)

    #define     w32TG_VB1                                      {\
            UNSG32 uVB1_FE                                     : 16;\
            UNSG32 uVB1_BE                                     : 16;\
          }
    union { UNSG32 u32TG_VB1;
            struct w32TG_VB1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_SCAN_MODE(r32)                           _BFGET_(r32, 0, 0)
    #define   SET32TG_SCAN_MODE(r32,v)                         _BFSET_(r32, 0, 0,v)
    #define   GET16TG_SCAN_MODE(r16)                           _BFGET_(r16, 0, 0)
    #define   SET16TG_SCAN_MODE(r16,v)                         _BFSET_(r16, 0, 0,v)

    #define     w32TG_SCAN                                     {\
            UNSG32 uSCAN_MODE                                  :  1;\
            UNSG32 RSVDx30_b1                                  : 31;\
          }
    union { UNSG32 u32TG_SCAN;
            struct w32TG_SCAN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_INTPOS_FRAME(r32)                        _BFGET_(r32,15, 0)
    #define   SET32TG_INTPOS_FRAME(r32,v)                      _BFSET_(r32,15, 0,v)
    #define   GET16TG_INTPOS_FRAME(r16)                        _BFGET_(r16,15, 0)
    #define   SET16TG_INTPOS_FRAME(r16,v)                      _BFSET_(r16,15, 0,v)

    #define   GET32TG_INTPOS_FIELD(r32)                        _BFGET_(r32,31,16)
    #define   SET32TG_INTPOS_FIELD(r32,v)                      _BFSET_(r32,31,16,v)
    #define   GET16TG_INTPOS_FIELD(r16)                        _BFGET_(r16,15, 0)
    #define   SET16TG_INTPOS_FIELD(r16,v)                      _BFSET_(r16,15, 0,v)

    #define     w32TG_INTPOS                                   {\
            UNSG32 uINTPOS_FRAME                               : 16;\
            UNSG32 uINTPOS_FIELD                               : 16;\
          }
    union { UNSG32 u32TG_INTPOS;
            struct w32TG_INTPOS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MODE_EN(r32)                             _BFGET_(r32, 0, 0)
    #define   SET32TG_MODE_EN(r32,v)                           _BFSET_(r32, 0, 0,v)
    #define   GET16TG_MODE_EN(r16)                             _BFGET_(r16, 0, 0)
    #define   SET16TG_MODE_EN(r16,v)                           _BFSET_(r16, 0, 0,v)

    #define     w32TG_MODE                                     {\
            UNSG32 uMODE_EN                                    :  1;\
            UNSG32 RSVDx38_b1                                  : 31;\
          }
    union { UNSG32 u32TG_MODE;
            struct w32TG_MODE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_HVREF_SEL(r32)                           _BFGET_(r32, 0, 0)
    #define   SET32TG_HVREF_SEL(r32,v)                         _BFSET_(r32, 0, 0,v)
    #define   GET16TG_HVREF_SEL(r16)                           _BFGET_(r16, 0, 0)
    #define   SET16TG_HVREF_SEL(r16,v)                         _BFSET_(r16, 0, 0,v)

    #define   GET32TG_HVREF_POL(r32)                           _BFGET_(r32, 1, 1)
    #define   SET32TG_HVREF_POL(r32,v)                         _BFSET_(r32, 1, 1,v)
    #define   GET16TG_HVREF_POL(r16)                           _BFGET_(r16, 1, 1)
    #define   SET16TG_HVREF_POL(r16,v)                         _BFSET_(r16, 1, 1,v)

    #define     w32TG_HVREF                                    {\
            UNSG32 uHVREF_SEL                                  :  1;\
            UNSG32 uHVREF_POL                                  :  1;\
            UNSG32 RSVDx3C_b2                                  : 30;\
          }
    union { UNSG32 u32TG_HVREF;
            struct w32TG_HVREF;
          };
    ///////////////////////////////////////////////////////////
    } SIE_TG;

    typedef union  T32TG_INIT
          { UNSG32 u32;
            struct w32TG_INIT;
                 } T32TG_INIT;
    typedef union  T32TG_SIZE
          { UNSG32 u32;
            struct w32TG_SIZE;
                 } T32TG_SIZE;
    typedef union  T32TG_HS
          { UNSG32 u32;
            struct w32TG_HS;
                 } T32TG_HS;
    typedef union  T32TG_HB
          { UNSG32 u32;
            struct w32TG_HB;
                 } T32TG_HB;
    typedef union  T32TG_HB_CR
          { UNSG32 u32;
            struct w32TG_HB_CR;
                 } T32TG_HB_CR;
    typedef union  T32TG_HB_CR2
          { UNSG32 u32;
            struct w32TG_HB_CR2;
                 } T32TG_HB_CR2;
    typedef union  T32TG_VS0
          { UNSG32 u32;
            struct w32TG_VS0;
                 } T32TG_VS0;
    typedef union  T32TG_VS1
          { UNSG32 u32;
            struct w32TG_VS1;
                 } T32TG_VS1;
    typedef union  T32TG_VB0
          { UNSG32 u32;
            struct w32TG_VB0;
                 } T32TG_VB0;
    typedef union  T32TG_VB0_CR
          { UNSG32 u32;
            struct w32TG_VB0_CR;
                 } T32TG_VB0_CR;
    typedef union  T32TG_VB0_CR2
          { UNSG32 u32;
            struct w32TG_VB0_CR2;
                 } T32TG_VB0_CR2;
    typedef union  T32TG_VB1
          { UNSG32 u32;
            struct w32TG_VB1;
                 } T32TG_VB1;
    typedef union  T32TG_SCAN
          { UNSG32 u32;
            struct w32TG_SCAN;
                 } T32TG_SCAN;
    typedef union  T32TG_INTPOS
          { UNSG32 u32;
            struct w32TG_INTPOS;
                 } T32TG_INTPOS;
    typedef union  T32TG_MODE
          { UNSG32 u32;
            struct w32TG_MODE;
                 } T32TG_MODE;
    typedef union  T32TG_HVREF
          { UNSG32 u32;
            struct w32TG_HVREF;
                 } T32TG_HVREF;
    ///////////////////////////////////////////////////////////

    typedef union  TTG_INIT
          { UNSG32 u32[1];
            struct {
            struct w32TG_INIT;
                   };
                 } TTG_INIT;
    typedef union  TTG_SIZE
          { UNSG32 u32[1];
            struct {
            struct w32TG_SIZE;
                   };
                 } TTG_SIZE;
    typedef union  TTG_HS
          { UNSG32 u32[1];
            struct {
            struct w32TG_HS;
                   };
                 } TTG_HS;
    typedef union  TTG_HB
          { UNSG32 u32[1];
            struct {
            struct w32TG_HB;
                   };
                 } TTG_HB;
    typedef union  TTG_HB_CR
          { UNSG32 u32[1];
            struct {
            struct w32TG_HB_CR;
                   };
                 } TTG_HB_CR;
    typedef union  TTG_HB_CR2
          { UNSG32 u32[1];
            struct {
            struct w32TG_HB_CR2;
                   };
                 } TTG_HB_CR2;
    typedef union  TTG_VS0
          { UNSG32 u32[1];
            struct {
            struct w32TG_VS0;
                   };
                 } TTG_VS0;
    typedef union  TTG_VS1
          { UNSG32 u32[1];
            struct {
            struct w32TG_VS1;
                   };
                 } TTG_VS1;
    typedef union  TTG_VB0
          { UNSG32 u32[1];
            struct {
            struct w32TG_VB0;
                   };
                 } TTG_VB0;
    typedef union  TTG_VB0_CR
          { UNSG32 u32[1];
            struct {
            struct w32TG_VB0_CR;
                   };
                 } TTG_VB0_CR;
    typedef union  TTG_VB0_CR2
          { UNSG32 u32[1];
            struct {
            struct w32TG_VB0_CR2;
                   };
                 } TTG_VB0_CR2;
    typedef union  TTG_VB1
          { UNSG32 u32[1];
            struct {
            struct w32TG_VB1;
                   };
                 } TTG_VB1;
    typedef union  TTG_SCAN
          { UNSG32 u32[1];
            struct {
            struct w32TG_SCAN;
                   };
                 } TTG_SCAN;
    typedef union  TTG_INTPOS
          { UNSG32 u32[1];
            struct {
            struct w32TG_INTPOS;
                   };
                 } TTG_INTPOS;
    typedef union  TTG_MODE
          { UNSG32 u32[1];
            struct {
            struct w32TG_MODE;
                   };
                 } TTG_MODE;
    typedef union  TTG_HVREF
          { UNSG32 u32[1];
            struct {
            struct w32TG_HVREF;
                   };
                 } TTG_HVREF;

    ///////////////////////////////////////////////////////////
     SIGN32 TG_drvrd(SIE_TG *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 TG_drvwr(SIE_TG *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void TG_reset(SIE_TG *p);
     SIGN32 TG_cmp  (SIE_TG *p, SIE_TG *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define TG_check(p,pie,pfx,hLOG) TG_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define TG_print(p,    pfx,hLOG) TG_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: TG
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE TG_MAIN                 biu              (4,4)
///     ###
///     * Register specification of interface Timing Generator used in Main Video Plane (BL and EL)
///     * There are two counters in the timing generator module. hCntr (from 1 to SIZE_X) and vCntr (from 1 to SIZE_Y).
///     * When start, the initial value will be loaded to the xCnt and yCnt
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 INIT                 (P)
///               %unsigned 16 Y                         0x1
///                                    ###
///                                    * Initial Y value which will be used to load Y counter when tg is enabled.
///                                    ###
///               %unsigned 16 X                         0x1
///                                    ###
///                                    * Initial X value which will be used to load X counter when tg is enabled.
///                                    * A whole frame scan size.
///                                    ###
///     @ 0x00004 SIZE                 (P)
///               %unsigned 16 Y                         0x465
///                                    ###
///                                    * Total scan lines per frame.
///                                    ###
///               %unsigned 16 X                         0x898
///                                    ###
///                                    * Total scan clock cycles per line.
///                                    * Hsync
///                                    ###
///     @ 0x00008 HS                   (P)
///               %unsigned 16 FE                        0x1
///                                    ###
///                                    * Hsync front edge. The first pixel position of hsync pulse.
///                                    ###
///               %unsigned 16 BE                        0x2C
///                                    ###
///                                    * Hsync back edge. The last pixel position of hsync pulse.
///                                    * HS = hCntr>=FE & hCntr<=BE
///                                    * HBlanking
///                                    ###
///     @ 0x0000C HB                   (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * [Used for Base Plane]
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * [Used for Base Plane]
///                                    * HB = hCntr>=FE || hCntr<=BE.
///                                    ###
///     @ 0x00010 HB_Y                 (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * [Used for Luma Input Crop Plane]
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * [Used for Luma Input Crop Plane]
///                                    * HB_Y = hCntr>=FE || hCntr<=BE.
///                                    ###
///     @ 0x00014 HB_C                 (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * [Used for Croma Input Crop Plane]
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * [Used for Croma Input Crop Plane]
///                                    * HB_C = hCntr>=FE || hCntr<=BE.
///                                    ###
///     @ 0x00018 HB_OUT               (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * [Used for DETILE-UPS420 Output, downstream logic will work on this DE]
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * [Used for DETILE-UPS420 Output, downstream logic will work on this DE]
///                                    * HB_OUT = hCntr>=FE || hCntr<=BE.
///                                    * VS0 defines the first first pixel position of the first VSYNC (progressive or interlace mode) pulse.
///                                    * For example
///                                    * 1080i60, the VTP is the last pixel of the last line. So set both VLCNT0 and VPCNT0 to 0.
///                                    ###
///     @ 0x0001C VS0                  (P)
///               %unsigned 16 FE                        0x1
///                                    ###
///                                    * Vsync pulse front edge.
///                                    * Vsync will be asserted at the beginning of this line.
///                                    ###
///               %unsigned 16 BE                        0x5
///                                    ###
///                                    * Vsync pulse back edge.
///                                    * Vsycn pulse will be de-asserted after the end of this line.
///                                    * Vsync = (vCntr>=FE & vCntr<=BE)
///                                    * Vsync pulse 1
///                                    * defines the first pixel position of the second vSync pulse. For example
///                                    * 1080i60, the VTP is pixel 1100 of line 563. So set both VLCNT2=563. and VPCNT2 to 1100.
///                                    ###
///     @ 0x00020 VS1                  (P)
///               %unsigned 16 FE                        0x233
///                                    ###
///                                    * Vsync pulse 1 front edge line position.
///                                    * Vsync pulse 1 will be asserted at the middle of this line.
///                                    ###
///               %unsigned 16 BE                        0x238
///                                    ###
///                                    * Vsync pulse 1 back edge line position.
///                                    * Vsync pulse 1 will be de-asserted at the middle of this line.
///                                    * Vsync1 = (vCntr>=FE & hCntr>SIZEX/2) & (vCntr<=BE & hCntr<=SIZEX/2)
///                                    * Vertical blanking.
///                                    * VB0 parameter definietion
///                                    ###
///     @ 0x00024 VB0                  (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    * [Used for Base Plane]
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * [Used for Base Plane]
///                                    * Vblank0 = vCntr>=FE || vCntr<=BE
///                                    ###
///     @ 0x00028 VB0_Y                (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    * [Used for Luma Input Crop Plane]
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * [Used for Croma Input Crop Plane]
///                                    * Vblank0_CR = vCntr>=FE || vCntr<=BE
///                                    ###
///     @ 0x0002C VB0_C                (P)
///               %unsigned 16 FE                        0x462
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * [Used for Croma Input Crop Plane]
///                                    * Vblank0 = vCntr>=FE || vCntr<=BE
///                                    ###
///     @ 0x00030 VB0_OUT              (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    * [Used for DETILE-UPS420 Output, downstream logic will work on this DE]
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * [Used for DETILE-UPS420 Output, downstream logic will work on this DE]
///                                    * Vblank0 = vCntr>=FE || vCntr<=BE
///                                    ###
///     @ 0x00034 VB1                  (P)
///               %unsigned 16 FE                        0x231
///                                    ###
///                                    * Vblank front edge line postion
///                                    * The first line number of VB1.
///                                    ###
///               %unsigned 16 BE                        0x247
///                                    ###
///                                    * Vblank back edge line postion
///                                    * the last line numer of VB1.
///                                    * VB1 = (vCntr>=FE & vCntr<=BE)
///                                    * SCAN mode
///                                    ###
///     @ 0x00038 SCAN                 (P)
///               %unsigned 1  MODE                      0x0
///                                    : PROG                      0x0
///                                    : INTER                     0x1
///                                                 ###
///                                                 * Frame done interrupt position
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0003C INTPOS               (P)
///               %unsigned 16 FRAME                     0x465
///                                    ###
///                                    * Frame interrupt status will be set at the end of this line.
///                                    * Program 0 to this register will disable frame interrupt.
///                                    ###
///               %unsigned 16 FIELD                     0x233
///                                    ###
///                                    * Field interrupt status will be set at the end of this line.
///                                    * Program 0 to this register will disable field interrupt.
///                                    * MODE
///                                    ###
///     @ 0x00040 MODE                 (P)
///               %unsigned 1  EN                        0x0
///                                    : MASTER                    0x0
///                                    : SLAVE                     0x1
///                                                 ###
///                                                 * In master mode, TG drive the control signal.
///                                                 * In slave mode, TG take the external hsync and vsync, it generate the internal sync and blank signal based on the programmed register and external hsync and vsync.
///                                                 * HREF input for slave mode.
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00044 HVREF                (P)
///               %unsigned 1  SEL                       0x0
///                                    : SYNC                      0x0
///                                    : BLANK                     0x1
///                                                 ###
///                                                 * In slave mode, tg will sync to the external tg generated HREF/VREF which could be HSYBC/VSYNC or HBLANK/VBLANK. Currently only HSYNC/VSYNC is supported.
///                                                 * HSYNC and VSYNC have to be come in pair.
///                                                 ###
///               %unsigned 1  POL                       0x0
///                                    : NEG_PULSE                 0x0
///                                    : POS_PULSE                 0x1
///                                                 ###
///                                                 * 0 : indicate the input HREF/VREF are negative pulses
///                                                 * 1: indicate the input HREF/VREFare positive pulses.
///                                                 * HREF and VREF have to be the same polarity.
///                                                 * End of TG register group
///                                                 ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      72B, bits:     484b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_TG_MAIN
#define h_TG_MAIN (){}

    #define     RA_TG_MAIN_INIT                                0x0000

    #define     BA_TG_MAIN_INIT_Y                              0x0000
    #define     B16TG_MAIN_INIT_Y                              0x0000
    #define   LSb32TG_MAIN_INIT_Y                                 0
    #define   LSb16TG_MAIN_INIT_Y                                 0
    #define       bTG_MAIN_INIT_Y                              16
    #define   MSK32TG_MAIN_INIT_Y                                 0x0000FFFF

    #define     BA_TG_MAIN_INIT_X                              0x0002
    #define     B16TG_MAIN_INIT_X                              0x0002
    #define   LSb32TG_MAIN_INIT_X                                 16
    #define   LSb16TG_MAIN_INIT_X                                 0
    #define       bTG_MAIN_INIT_X                              16
    #define   MSK32TG_MAIN_INIT_X                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_SIZE                                0x0004

    #define     BA_TG_MAIN_SIZE_Y                              0x0004
    #define     B16TG_MAIN_SIZE_Y                              0x0004
    #define   LSb32TG_MAIN_SIZE_Y                                 0
    #define   LSb16TG_MAIN_SIZE_Y                                 0
    #define       bTG_MAIN_SIZE_Y                              16
    #define   MSK32TG_MAIN_SIZE_Y                                 0x0000FFFF

    #define     BA_TG_MAIN_SIZE_X                              0x0006
    #define     B16TG_MAIN_SIZE_X                              0x0006
    #define   LSb32TG_MAIN_SIZE_X                                 16
    #define   LSb16TG_MAIN_SIZE_X                                 0
    #define       bTG_MAIN_SIZE_X                              16
    #define   MSK32TG_MAIN_SIZE_X                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_HS                                  0x0008

    #define     BA_TG_MAIN_HS_FE                               0x0008
    #define     B16TG_MAIN_HS_FE                               0x0008
    #define   LSb32TG_MAIN_HS_FE                                  0
    #define   LSb16TG_MAIN_HS_FE                                  0
    #define       bTG_MAIN_HS_FE                               16
    #define   MSK32TG_MAIN_HS_FE                                  0x0000FFFF

    #define     BA_TG_MAIN_HS_BE                               0x000A
    #define     B16TG_MAIN_HS_BE                               0x000A
    #define   LSb32TG_MAIN_HS_BE                                  16
    #define   LSb16TG_MAIN_HS_BE                                  0
    #define       bTG_MAIN_HS_BE                               16
    #define   MSK32TG_MAIN_HS_BE                                  0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_HB                                  0x000C

    #define     BA_TG_MAIN_HB_FE                               0x000C
    #define     B16TG_MAIN_HB_FE                               0x000C
    #define   LSb32TG_MAIN_HB_FE                                  0
    #define   LSb16TG_MAIN_HB_FE                                  0
    #define       bTG_MAIN_HB_FE                               16
    #define   MSK32TG_MAIN_HB_FE                                  0x0000FFFF

    #define     BA_TG_MAIN_HB_BE                               0x000E
    #define     B16TG_MAIN_HB_BE                               0x000E
    #define   LSb32TG_MAIN_HB_BE                                  16
    #define   LSb16TG_MAIN_HB_BE                                  0
    #define       bTG_MAIN_HB_BE                               16
    #define   MSK32TG_MAIN_HB_BE                                  0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_HB_Y                                0x0010

    #define     BA_TG_MAIN_HB_Y_FE                             0x0010
    #define     B16TG_MAIN_HB_Y_FE                             0x0010
    #define   LSb32TG_MAIN_HB_Y_FE                                0
    #define   LSb16TG_MAIN_HB_Y_FE                                0
    #define       bTG_MAIN_HB_Y_FE                             16
    #define   MSK32TG_MAIN_HB_Y_FE                                0x0000FFFF

    #define     BA_TG_MAIN_HB_Y_BE                             0x0012
    #define     B16TG_MAIN_HB_Y_BE                             0x0012
    #define   LSb32TG_MAIN_HB_Y_BE                                16
    #define   LSb16TG_MAIN_HB_Y_BE                                0
    #define       bTG_MAIN_HB_Y_BE                             16
    #define   MSK32TG_MAIN_HB_Y_BE                                0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_HB_C                                0x0014

    #define     BA_TG_MAIN_HB_C_FE                             0x0014
    #define     B16TG_MAIN_HB_C_FE                             0x0014
    #define   LSb32TG_MAIN_HB_C_FE                                0
    #define   LSb16TG_MAIN_HB_C_FE                                0
    #define       bTG_MAIN_HB_C_FE                             16
    #define   MSK32TG_MAIN_HB_C_FE                                0x0000FFFF

    #define     BA_TG_MAIN_HB_C_BE                             0x0016
    #define     B16TG_MAIN_HB_C_BE                             0x0016
    #define   LSb32TG_MAIN_HB_C_BE                                16
    #define   LSb16TG_MAIN_HB_C_BE                                0
    #define       bTG_MAIN_HB_C_BE                             16
    #define   MSK32TG_MAIN_HB_C_BE                                0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_HB_OUT                              0x0018

    #define     BA_TG_MAIN_HB_OUT_FE                           0x0018
    #define     B16TG_MAIN_HB_OUT_FE                           0x0018
    #define   LSb32TG_MAIN_HB_OUT_FE                              0
    #define   LSb16TG_MAIN_HB_OUT_FE                              0
    #define       bTG_MAIN_HB_OUT_FE                           16
    #define   MSK32TG_MAIN_HB_OUT_FE                              0x0000FFFF

    #define     BA_TG_MAIN_HB_OUT_BE                           0x001A
    #define     B16TG_MAIN_HB_OUT_BE                           0x001A
    #define   LSb32TG_MAIN_HB_OUT_BE                              16
    #define   LSb16TG_MAIN_HB_OUT_BE                              0
    #define       bTG_MAIN_HB_OUT_BE                           16
    #define   MSK32TG_MAIN_HB_OUT_BE                              0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_VS0                                 0x001C

    #define     BA_TG_MAIN_VS0_FE                              0x001C
    #define     B16TG_MAIN_VS0_FE                              0x001C
    #define   LSb32TG_MAIN_VS0_FE                                 0
    #define   LSb16TG_MAIN_VS0_FE                                 0
    #define       bTG_MAIN_VS0_FE                              16
    #define   MSK32TG_MAIN_VS0_FE                                 0x0000FFFF

    #define     BA_TG_MAIN_VS0_BE                              0x001E
    #define     B16TG_MAIN_VS0_BE                              0x001E
    #define   LSb32TG_MAIN_VS0_BE                                 16
    #define   LSb16TG_MAIN_VS0_BE                                 0
    #define       bTG_MAIN_VS0_BE                              16
    #define   MSK32TG_MAIN_VS0_BE                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_VS1                                 0x0020

    #define     BA_TG_MAIN_VS1_FE                              0x0020
    #define     B16TG_MAIN_VS1_FE                              0x0020
    #define   LSb32TG_MAIN_VS1_FE                                 0
    #define   LSb16TG_MAIN_VS1_FE                                 0
    #define       bTG_MAIN_VS1_FE                              16
    #define   MSK32TG_MAIN_VS1_FE                                 0x0000FFFF

    #define     BA_TG_MAIN_VS1_BE                              0x0022
    #define     B16TG_MAIN_VS1_BE                              0x0022
    #define   LSb32TG_MAIN_VS1_BE                                 16
    #define   LSb16TG_MAIN_VS1_BE                                 0
    #define       bTG_MAIN_VS1_BE                              16
    #define   MSK32TG_MAIN_VS1_BE                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_VB0                                 0x0024

    #define     BA_TG_MAIN_VB0_FE                              0x0024
    #define     B16TG_MAIN_VB0_FE                              0x0024
    #define   LSb32TG_MAIN_VB0_FE                                 0
    #define   LSb16TG_MAIN_VB0_FE                                 0
    #define       bTG_MAIN_VB0_FE                              16
    #define   MSK32TG_MAIN_VB0_FE                                 0x0000FFFF

    #define     BA_TG_MAIN_VB0_BE                              0x0026
    #define     B16TG_MAIN_VB0_BE                              0x0026
    #define   LSb32TG_MAIN_VB0_BE                                 16
    #define   LSb16TG_MAIN_VB0_BE                                 0
    #define       bTG_MAIN_VB0_BE                              16
    #define   MSK32TG_MAIN_VB0_BE                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_VB0_Y                               0x0028

    #define     BA_TG_MAIN_VB0_Y_FE                            0x0028
    #define     B16TG_MAIN_VB0_Y_FE                            0x0028
    #define   LSb32TG_MAIN_VB0_Y_FE                               0
    #define   LSb16TG_MAIN_VB0_Y_FE                               0
    #define       bTG_MAIN_VB0_Y_FE                            16
    #define   MSK32TG_MAIN_VB0_Y_FE                               0x0000FFFF

    #define     BA_TG_MAIN_VB0_Y_BE                            0x002A
    #define     B16TG_MAIN_VB0_Y_BE                            0x002A
    #define   LSb32TG_MAIN_VB0_Y_BE                               16
    #define   LSb16TG_MAIN_VB0_Y_BE                               0
    #define       bTG_MAIN_VB0_Y_BE                            16
    #define   MSK32TG_MAIN_VB0_Y_BE                               0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_VB0_C                               0x002C

    #define     BA_TG_MAIN_VB0_C_FE                            0x002C
    #define     B16TG_MAIN_VB0_C_FE                            0x002C
    #define   LSb32TG_MAIN_VB0_C_FE                               0
    #define   LSb16TG_MAIN_VB0_C_FE                               0
    #define       bTG_MAIN_VB0_C_FE                            16
    #define   MSK32TG_MAIN_VB0_C_FE                               0x0000FFFF

    #define     BA_TG_MAIN_VB0_C_BE                            0x002E
    #define     B16TG_MAIN_VB0_C_BE                            0x002E
    #define   LSb32TG_MAIN_VB0_C_BE                               16
    #define   LSb16TG_MAIN_VB0_C_BE                               0
    #define       bTG_MAIN_VB0_C_BE                            16
    #define   MSK32TG_MAIN_VB0_C_BE                               0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_VB0_OUT                             0x0030

    #define     BA_TG_MAIN_VB0_OUT_FE                          0x0030
    #define     B16TG_MAIN_VB0_OUT_FE                          0x0030
    #define   LSb32TG_MAIN_VB0_OUT_FE                             0
    #define   LSb16TG_MAIN_VB0_OUT_FE                             0
    #define       bTG_MAIN_VB0_OUT_FE                          16
    #define   MSK32TG_MAIN_VB0_OUT_FE                             0x0000FFFF

    #define     BA_TG_MAIN_VB0_OUT_BE                          0x0032
    #define     B16TG_MAIN_VB0_OUT_BE                          0x0032
    #define   LSb32TG_MAIN_VB0_OUT_BE                             16
    #define   LSb16TG_MAIN_VB0_OUT_BE                             0
    #define       bTG_MAIN_VB0_OUT_BE                          16
    #define   MSK32TG_MAIN_VB0_OUT_BE                             0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_VB1                                 0x0034

    #define     BA_TG_MAIN_VB1_FE                              0x0034
    #define     B16TG_MAIN_VB1_FE                              0x0034
    #define   LSb32TG_MAIN_VB1_FE                                 0
    #define   LSb16TG_MAIN_VB1_FE                                 0
    #define       bTG_MAIN_VB1_FE                              16
    #define   MSK32TG_MAIN_VB1_FE                                 0x0000FFFF

    #define     BA_TG_MAIN_VB1_BE                              0x0036
    #define     B16TG_MAIN_VB1_BE                              0x0036
    #define   LSb32TG_MAIN_VB1_BE                                 16
    #define   LSb16TG_MAIN_VB1_BE                                 0
    #define       bTG_MAIN_VB1_BE                              16
    #define   MSK32TG_MAIN_VB1_BE                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_SCAN                                0x0038

    #define     BA_TG_MAIN_SCAN_MODE                           0x0038
    #define     B16TG_MAIN_SCAN_MODE                           0x0038
    #define   LSb32TG_MAIN_SCAN_MODE                              0
    #define   LSb16TG_MAIN_SCAN_MODE                              0
    #define       bTG_MAIN_SCAN_MODE                           1
    #define   MSK32TG_MAIN_SCAN_MODE                              0x00000001
    #define        TG_MAIN_SCAN_MODE_PROG                                   0x0
    #define        TG_MAIN_SCAN_MODE_INTER                                  0x1
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_INTPOS                              0x003C

    #define     BA_TG_MAIN_INTPOS_FRAME                        0x003C
    #define     B16TG_MAIN_INTPOS_FRAME                        0x003C
    #define   LSb32TG_MAIN_INTPOS_FRAME                           0
    #define   LSb16TG_MAIN_INTPOS_FRAME                           0
    #define       bTG_MAIN_INTPOS_FRAME                        16
    #define   MSK32TG_MAIN_INTPOS_FRAME                           0x0000FFFF

    #define     BA_TG_MAIN_INTPOS_FIELD                        0x003E
    #define     B16TG_MAIN_INTPOS_FIELD                        0x003E
    #define   LSb32TG_MAIN_INTPOS_FIELD                           16
    #define   LSb16TG_MAIN_INTPOS_FIELD                           0
    #define       bTG_MAIN_INTPOS_FIELD                        16
    #define   MSK32TG_MAIN_INTPOS_FIELD                           0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_MODE                                0x0040

    #define     BA_TG_MAIN_MODE_EN                             0x0040
    #define     B16TG_MAIN_MODE_EN                             0x0040
    #define   LSb32TG_MAIN_MODE_EN                                0
    #define   LSb16TG_MAIN_MODE_EN                                0
    #define       bTG_MAIN_MODE_EN                             1
    #define   MSK32TG_MAIN_MODE_EN                                0x00000001
    #define        TG_MAIN_MODE_EN_MASTER                                   0x0
    #define        TG_MAIN_MODE_EN_SLAVE                                    0x1
    ///////////////////////////////////////////////////////////
    #define     RA_TG_MAIN_HVREF                               0x0044

    #define     BA_TG_MAIN_HVREF_SEL                           0x0044
    #define     B16TG_MAIN_HVREF_SEL                           0x0044
    #define   LSb32TG_MAIN_HVREF_SEL                              0
    #define   LSb16TG_MAIN_HVREF_SEL                              0
    #define       bTG_MAIN_HVREF_SEL                           1
    #define   MSK32TG_MAIN_HVREF_SEL                              0x00000001
    #define        TG_MAIN_HVREF_SEL_SYNC                                   0x0
    #define        TG_MAIN_HVREF_SEL_BLANK                                  0x1

    #define     BA_TG_MAIN_HVREF_POL                           0x0044
    #define     B16TG_MAIN_HVREF_POL                           0x0044
    #define   LSb32TG_MAIN_HVREF_POL                              1
    #define   LSb16TG_MAIN_HVREF_POL                              1
    #define       bTG_MAIN_HVREF_POL                           1
    #define   MSK32TG_MAIN_HVREF_POL                              0x00000002
    #define        TG_MAIN_HVREF_POL_NEG_PULSE                              0x0
    #define        TG_MAIN_HVREF_POL_POS_PULSE                              0x1
    ///////////////////////////////////////////////////////////

    typedef struct SIE_TG_MAIN {
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_INIT_Y(r32)                         _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_INIT_Y(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_INIT_Y(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_INIT_Y(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_INIT_X(r32)                         _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_INIT_X(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_INIT_X(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_INIT_X(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_INIT                                {\
            UNSG32 uINIT_Y                                     : 16;\
            UNSG32 uINIT_X                                     : 16;\
          }
    union { UNSG32 u32TG_MAIN_INIT;
            struct w32TG_MAIN_INIT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_SIZE_Y(r32)                         _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_SIZE_Y(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_SIZE_Y(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_SIZE_Y(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_SIZE_X(r32)                         _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_SIZE_X(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_SIZE_X(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_SIZE_X(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_SIZE                                {\
            UNSG32 uSIZE_Y                                     : 16;\
            UNSG32 uSIZE_X                                     : 16;\
          }
    union { UNSG32 u32TG_MAIN_SIZE;
            struct w32TG_MAIN_SIZE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_HS_FE(r32)                          _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_HS_FE(r32,v)                        _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_HS_FE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HS_FE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_HS_BE(r32)                          _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_HS_BE(r32,v)                        _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_HS_BE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HS_BE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_HS                                  {\
            UNSG32 uHS_FE                                      : 16;\
            UNSG32 uHS_BE                                      : 16;\
          }
    union { UNSG32 u32TG_MAIN_HS;
            struct w32TG_MAIN_HS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_HB_FE(r32)                          _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_HB_FE(r32,v)                        _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_HB_FE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_FE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_HB_BE(r32)                          _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_HB_BE(r32,v)                        _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_HB_BE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_BE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_HB                                  {\
            UNSG32 uHB_FE                                      : 16;\
            UNSG32 uHB_BE                                      : 16;\
          }
    union { UNSG32 u32TG_MAIN_HB;
            struct w32TG_MAIN_HB;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_HB_Y_FE(r32)                        _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_HB_Y_FE(r32,v)                      _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_HB_Y_FE(r16)                        _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_Y_FE(r16,v)                      _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_HB_Y_BE(r32)                        _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_HB_Y_BE(r32,v)                      _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_HB_Y_BE(r16)                        _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_Y_BE(r16,v)                      _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_HB_Y                                {\
            UNSG32 uHB_Y_FE                                    : 16;\
            UNSG32 uHB_Y_BE                                    : 16;\
          }
    union { UNSG32 u32TG_MAIN_HB_Y;
            struct w32TG_MAIN_HB_Y;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_HB_C_FE(r32)                        _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_HB_C_FE(r32,v)                      _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_HB_C_FE(r16)                        _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_C_FE(r16,v)                      _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_HB_C_BE(r32)                        _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_HB_C_BE(r32,v)                      _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_HB_C_BE(r16)                        _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_C_BE(r16,v)                      _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_HB_C                                {\
            UNSG32 uHB_C_FE                                    : 16;\
            UNSG32 uHB_C_BE                                    : 16;\
          }
    union { UNSG32 u32TG_MAIN_HB_C;
            struct w32TG_MAIN_HB_C;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_HB_OUT_FE(r32)                      _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_HB_OUT_FE(r32,v)                    _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_HB_OUT_FE(r16)                      _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_OUT_FE(r16,v)                    _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_HB_OUT_BE(r32)                      _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_HB_OUT_BE(r32,v)                    _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_HB_OUT_BE(r16)                      _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_HB_OUT_BE(r16,v)                    _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_HB_OUT                              {\
            UNSG32 uHB_OUT_FE                                  : 16;\
            UNSG32 uHB_OUT_BE                                  : 16;\
          }
    union { UNSG32 u32TG_MAIN_HB_OUT;
            struct w32TG_MAIN_HB_OUT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_VS0_FE(r32)                         _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_VS0_FE(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_VS0_FE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VS0_FE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_VS0_BE(r32)                         _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_VS0_BE(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_VS0_BE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VS0_BE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_VS0                                 {\
            UNSG32 uVS0_FE                                     : 16;\
            UNSG32 uVS0_BE                                     : 16;\
          }
    union { UNSG32 u32TG_MAIN_VS0;
            struct w32TG_MAIN_VS0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_VS1_FE(r32)                         _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_VS1_FE(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_VS1_FE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VS1_FE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_VS1_BE(r32)                         _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_VS1_BE(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_VS1_BE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VS1_BE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_VS1                                 {\
            UNSG32 uVS1_FE                                     : 16;\
            UNSG32 uVS1_BE                                     : 16;\
          }
    union { UNSG32 u32TG_MAIN_VS1;
            struct w32TG_MAIN_VS1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_VB0_FE(r32)                         _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_VB0_FE(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_VB0_FE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_FE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_VB0_BE(r32)                         _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_VB0_BE(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_VB0_BE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_BE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_VB0                                 {\
            UNSG32 uVB0_FE                                     : 16;\
            UNSG32 uVB0_BE                                     : 16;\
          }
    union { UNSG32 u32TG_MAIN_VB0;
            struct w32TG_MAIN_VB0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_VB0_Y_FE(r32)                       _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_VB0_Y_FE(r32,v)                     _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_VB0_Y_FE(r16)                       _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_Y_FE(r16,v)                     _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_VB0_Y_BE(r32)                       _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_VB0_Y_BE(r32,v)                     _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_VB0_Y_BE(r16)                       _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_Y_BE(r16,v)                     _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_VB0_Y                               {\
            UNSG32 uVB0_Y_FE                                   : 16;\
            UNSG32 uVB0_Y_BE                                   : 16;\
          }
    union { UNSG32 u32TG_MAIN_VB0_Y;
            struct w32TG_MAIN_VB0_Y;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_VB0_C_FE(r32)                       _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_VB0_C_FE(r32,v)                     _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_VB0_C_FE(r16)                       _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_C_FE(r16,v)                     _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_VB0_C_BE(r32)                       _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_VB0_C_BE(r32,v)                     _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_VB0_C_BE(r16)                       _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_C_BE(r16,v)                     _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_VB0_C                               {\
            UNSG32 uVB0_C_FE                                   : 16;\
            UNSG32 uVB0_C_BE                                   : 16;\
          }
    union { UNSG32 u32TG_MAIN_VB0_C;
            struct w32TG_MAIN_VB0_C;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_VB0_OUT_FE(r32)                     _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_VB0_OUT_FE(r32,v)                   _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_VB0_OUT_FE(r16)                     _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_OUT_FE(r16,v)                   _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_VB0_OUT_BE(r32)                     _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_VB0_OUT_BE(r32,v)                   _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_VB0_OUT_BE(r16)                     _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB0_OUT_BE(r16,v)                   _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_VB0_OUT                             {\
            UNSG32 uVB0_OUT_FE                                 : 16;\
            UNSG32 uVB0_OUT_BE                                 : 16;\
          }
    union { UNSG32 u32TG_MAIN_VB0_OUT;
            struct w32TG_MAIN_VB0_OUT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_VB1_FE(r32)                         _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_VB1_FE(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_VB1_FE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB1_FE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_VB1_BE(r32)                         _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_VB1_BE(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_VB1_BE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_VB1_BE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_VB1                                 {\
            UNSG32 uVB1_FE                                     : 16;\
            UNSG32 uVB1_BE                                     : 16;\
          }
    union { UNSG32 u32TG_MAIN_VB1;
            struct w32TG_MAIN_VB1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_SCAN_MODE(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32TG_MAIN_SCAN_MODE(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16TG_MAIN_SCAN_MODE(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16TG_MAIN_SCAN_MODE(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32TG_MAIN_SCAN                                {\
            UNSG32 uSCAN_MODE                                  :  1;\
            UNSG32 RSVDx38_b1                                  : 31;\
          }
    union { UNSG32 u32TG_MAIN_SCAN;
            struct w32TG_MAIN_SCAN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_INTPOS_FRAME(r32)                   _BFGET_(r32,15, 0)
    #define   SET32TG_MAIN_INTPOS_FRAME(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16TG_MAIN_INTPOS_FRAME(r16)                   _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_INTPOS_FRAME(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32TG_MAIN_INTPOS_FIELD(r32)                   _BFGET_(r32,31,16)
    #define   SET32TG_MAIN_INTPOS_FIELD(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16TG_MAIN_INTPOS_FIELD(r16)                   _BFGET_(r16,15, 0)
    #define   SET16TG_MAIN_INTPOS_FIELD(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32TG_MAIN_INTPOS                              {\
            UNSG32 uINTPOS_FRAME                               : 16;\
            UNSG32 uINTPOS_FIELD                               : 16;\
          }
    union { UNSG32 u32TG_MAIN_INTPOS;
            struct w32TG_MAIN_INTPOS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_MODE_EN(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32TG_MAIN_MODE_EN(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16TG_MAIN_MODE_EN(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16TG_MAIN_MODE_EN(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32TG_MAIN_MODE                                {\
            UNSG32 uMODE_EN                                    :  1;\
            UNSG32 RSVDx40_b1                                  : 31;\
          }
    union { UNSG32 u32TG_MAIN_MODE;
            struct w32TG_MAIN_MODE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TG_MAIN_HVREF_SEL(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32TG_MAIN_HVREF_SEL(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16TG_MAIN_HVREF_SEL(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16TG_MAIN_HVREF_SEL(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define   GET32TG_MAIN_HVREF_POL(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32TG_MAIN_HVREF_POL(r32,v)                    _BFSET_(r32, 1, 1,v)
    #define   GET16TG_MAIN_HVREF_POL(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16TG_MAIN_HVREF_POL(r16,v)                    _BFSET_(r16, 1, 1,v)

    #define     w32TG_MAIN_HVREF                               {\
            UNSG32 uHVREF_SEL                                  :  1;\
            UNSG32 uHVREF_POL                                  :  1;\
            UNSG32 RSVDx44_b2                                  : 30;\
          }
    union { UNSG32 u32TG_MAIN_HVREF;
            struct w32TG_MAIN_HVREF;
          };
    ///////////////////////////////////////////////////////////
    } SIE_TG_MAIN;

    typedef union  T32TG_MAIN_INIT
          { UNSG32 u32;
            struct w32TG_MAIN_INIT;
                 } T32TG_MAIN_INIT;
    typedef union  T32TG_MAIN_SIZE
          { UNSG32 u32;
            struct w32TG_MAIN_SIZE;
                 } T32TG_MAIN_SIZE;
    typedef union  T32TG_MAIN_HS
          { UNSG32 u32;
            struct w32TG_MAIN_HS;
                 } T32TG_MAIN_HS;
    typedef union  T32TG_MAIN_HB
          { UNSG32 u32;
            struct w32TG_MAIN_HB;
                 } T32TG_MAIN_HB;
    typedef union  T32TG_MAIN_HB_Y
          { UNSG32 u32;
            struct w32TG_MAIN_HB_Y;
                 } T32TG_MAIN_HB_Y;
    typedef union  T32TG_MAIN_HB_C
          { UNSG32 u32;
            struct w32TG_MAIN_HB_C;
                 } T32TG_MAIN_HB_C;
    typedef union  T32TG_MAIN_HB_OUT
          { UNSG32 u32;
            struct w32TG_MAIN_HB_OUT;
                 } T32TG_MAIN_HB_OUT;
    typedef union  T32TG_MAIN_VS0
          { UNSG32 u32;
            struct w32TG_MAIN_VS0;
                 } T32TG_MAIN_VS0;
    typedef union  T32TG_MAIN_VS1
          { UNSG32 u32;
            struct w32TG_MAIN_VS1;
                 } T32TG_MAIN_VS1;
    typedef union  T32TG_MAIN_VB0
          { UNSG32 u32;
            struct w32TG_MAIN_VB0;
                 } T32TG_MAIN_VB0;
    typedef union  T32TG_MAIN_VB0_Y
          { UNSG32 u32;
            struct w32TG_MAIN_VB0_Y;
                 } T32TG_MAIN_VB0_Y;
    typedef union  T32TG_MAIN_VB0_C
          { UNSG32 u32;
            struct w32TG_MAIN_VB0_C;
                 } T32TG_MAIN_VB0_C;
    typedef union  T32TG_MAIN_VB0_OUT
          { UNSG32 u32;
            struct w32TG_MAIN_VB0_OUT;
                 } T32TG_MAIN_VB0_OUT;
    typedef union  T32TG_MAIN_VB1
          { UNSG32 u32;
            struct w32TG_MAIN_VB1;
                 } T32TG_MAIN_VB1;
    typedef union  T32TG_MAIN_SCAN
          { UNSG32 u32;
            struct w32TG_MAIN_SCAN;
                 } T32TG_MAIN_SCAN;
    typedef union  T32TG_MAIN_INTPOS
          { UNSG32 u32;
            struct w32TG_MAIN_INTPOS;
                 } T32TG_MAIN_INTPOS;
    typedef union  T32TG_MAIN_MODE
          { UNSG32 u32;
            struct w32TG_MAIN_MODE;
                 } T32TG_MAIN_MODE;
    typedef union  T32TG_MAIN_HVREF
          { UNSG32 u32;
            struct w32TG_MAIN_HVREF;
                 } T32TG_MAIN_HVREF;
    ///////////////////////////////////////////////////////////

    typedef union  TTG_MAIN_INIT
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_INIT;
                   };
                 } TTG_MAIN_INIT;
    typedef union  TTG_MAIN_SIZE
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_SIZE;
                   };
                 } TTG_MAIN_SIZE;
    typedef union  TTG_MAIN_HS
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_HS;
                   };
                 } TTG_MAIN_HS;
    typedef union  TTG_MAIN_HB
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_HB;
                   };
                 } TTG_MAIN_HB;
    typedef union  TTG_MAIN_HB_Y
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_HB_Y;
                   };
                 } TTG_MAIN_HB_Y;
    typedef union  TTG_MAIN_HB_C
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_HB_C;
                   };
                 } TTG_MAIN_HB_C;
    typedef union  TTG_MAIN_HB_OUT
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_HB_OUT;
                   };
                 } TTG_MAIN_HB_OUT;
    typedef union  TTG_MAIN_VS0
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_VS0;
                   };
                 } TTG_MAIN_VS0;
    typedef union  TTG_MAIN_VS1
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_VS1;
                   };
                 } TTG_MAIN_VS1;
    typedef union  TTG_MAIN_VB0
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_VB0;
                   };
                 } TTG_MAIN_VB0;
    typedef union  TTG_MAIN_VB0_Y
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_VB0_Y;
                   };
                 } TTG_MAIN_VB0_Y;
    typedef union  TTG_MAIN_VB0_C
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_VB0_C;
                   };
                 } TTG_MAIN_VB0_C;
    typedef union  TTG_MAIN_VB0_OUT
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_VB0_OUT;
                   };
                 } TTG_MAIN_VB0_OUT;
    typedef union  TTG_MAIN_VB1
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_VB1;
                   };
                 } TTG_MAIN_VB1;
    typedef union  TTG_MAIN_SCAN
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_SCAN;
                   };
                 } TTG_MAIN_SCAN;
    typedef union  TTG_MAIN_INTPOS
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_INTPOS;
                   };
                 } TTG_MAIN_INTPOS;
    typedef union  TTG_MAIN_MODE
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_MODE;
                   };
                 } TTG_MAIN_MODE;
    typedef union  TTG_MAIN_HVREF
          { UNSG32 u32[1];
            struct {
            struct w32TG_MAIN_HVREF;
                   };
                 } TTG_MAIN_HVREF;

    ///////////////////////////////////////////////////////////
     SIGN32 TG_MAIN_drvrd(SIE_TG_MAIN *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 TG_MAIN_drvwr(SIE_TG_MAIN *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void TG_MAIN_reset(SIE_TG_MAIN *p);
     SIGN32 TG_MAIN_cmp  (SIE_TG_MAIN *p, SIE_TG_MAIN *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define TG_MAIN_check(p,pie,pfx,hLOG) TG_MAIN_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define TG_MAIN_print(p,    pfx,hLOG) TG_MAIN_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: TG_MAIN
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BITMAP40                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SEL                  (P)
///               %unsigned 6  BIT_POS0                  0x0
///               %unsigned 6  BIT_POS1                  0x1
///               %unsigned 6  BIT_POS2                  0x2
///               %unsigned 6  BIT_POS3                  0x3
///               %unsigned 6  BIT_POS4                  0x4
///               %%        2          # Stuffing bits...
///     # 0x00004 SEL1                 
///               %unsigned 6  BIT_POS5                  0x5
///               %unsigned 6  BIT_POS6                  0x6
///               %unsigned 6  BIT_POS7                  0x7
///               %unsigned 6  BIT_POS8                  0x8
///               %unsigned 6  BIT_POS9                  0x9
///               %%        2          # Stuffing bits...
///     # 0x00008 SEL2                 
///               %unsigned 6  BIT_POS10                 0xA
///               %unsigned 6  BIT_POS11                 0xB
///               %unsigned 6  BIT_POS12                 0xC
///               %unsigned 6  BIT_POS13                 0xD
///               %unsigned 6  BIT_POS14                 0xE
///               %%        2          # Stuffing bits...
///     # 0x0000C SEL3                 
///               %unsigned 6  BIT_POS15                 0xF
///               %unsigned 6  BIT_POS16                 0x10
///               %unsigned 6  BIT_POS17                 0x11
///               %unsigned 6  BIT_POS18                 0x12
///               %unsigned 6  BIT_POS19                 0x13
///               %%        2          # Stuffing bits...
///     # 0x00010 SEL4                 
///               %unsigned 6  BIT_POS20                 0x14
///               %unsigned 6  BIT_POS21                 0x15
///               %unsigned 6  BIT_POS22                 0x16
///               %unsigned 6  BIT_POS23                 0x17
///               %unsigned 6  BIT_POS24                 0x18
///               %%        2          # Stuffing bits...
///     # 0x00014 SEL5                 
///               %unsigned 6  BIT_POS25                 0x19
///               %unsigned 6  BIT_POS26                 0x1A
///               %unsigned 6  BIT_POS27                 0x1B
///               %unsigned 6  BIT_POS28                 0x1C
///               %unsigned 6  BIT_POS29                 0x1D
///               %%        2          # Stuffing bits...
///     # 0x00018 SEL6                 
///               %unsigned 6  BIT_POS30                 0x1E
///               %unsigned 6  BIT_POS31                 0x1F
///               %unsigned 6  BIT_POS32                 0x20
///               %unsigned 6  BIT_POS33                 0x21
///               %unsigned 6  BIT_POS34                 0x22
///               %%        2          # Stuffing bits...
///     # 0x0001C SEL7                 
///               %unsigned 6  BIT_POS35                 0x23
///               %unsigned 6  BIT_POS36                 0x24
///               %unsigned 6  BIT_POS37                 0x25
///               %unsigned 6  BIT_POS38                 0x26
///               %unsigned 6  BIT_POS39                 0x27
///                                    ###
///                                    * Specifies mapping of new bit locations within 40 bit data from Read Client which need to be used to form pixels for Inverse Scan mode.
///                                    * Normal dHub data order:
///                                    * {Y3,Cr2,Y2,Cb2,Y1,Cr0,Y0,Cb0} First pixel in LSB
///                                    * Inverse Scan dHub data order:
///                                    * {Y3,Cr2,Y2,Cb2,Y1,Cr0,Y0,Cb0} First pixel in MSB
///                                    * Following different data orders can be generated to be presented to first UPS in the pipe.
///                                    ###
///               %%        2          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      32B, bits:     240b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_BITMAP40
#define h_BITMAP40 (){}

    #define     RA_BITMAP40_SEL                                0x0000

    #define     BA_BITMAP40_SEL_BIT_POS0                       0x0000
    #define     B16BITMAP40_SEL_BIT_POS0                       0x0000
    #define   LSb32BITMAP40_SEL_BIT_POS0                          0
    #define   LSb16BITMAP40_SEL_BIT_POS0                          0
    #define       bBITMAP40_SEL_BIT_POS0                       6
    #define   MSK32BITMAP40_SEL_BIT_POS0                          0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS1                       0x0000
    #define     B16BITMAP40_SEL_BIT_POS1                       0x0000
    #define   LSb32BITMAP40_SEL_BIT_POS1                          6
    #define   LSb16BITMAP40_SEL_BIT_POS1                          6
    #define       bBITMAP40_SEL_BIT_POS1                       6
    #define   MSK32BITMAP40_SEL_BIT_POS1                          0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS2                       0x0001
    #define     B16BITMAP40_SEL_BIT_POS2                       0x0000
    #define   LSb32BITMAP40_SEL_BIT_POS2                          12
    #define   LSb16BITMAP40_SEL_BIT_POS2                          12
    #define       bBITMAP40_SEL_BIT_POS2                       6
    #define   MSK32BITMAP40_SEL_BIT_POS2                          0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS3                       0x0002
    #define     B16BITMAP40_SEL_BIT_POS3                       0x0002
    #define   LSb32BITMAP40_SEL_BIT_POS3                          18
    #define   LSb16BITMAP40_SEL_BIT_POS3                          2
    #define       bBITMAP40_SEL_BIT_POS3                       6
    #define   MSK32BITMAP40_SEL_BIT_POS3                          0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS4                       0x0003
    #define     B16BITMAP40_SEL_BIT_POS4                       0x0002
    #define   LSb32BITMAP40_SEL_BIT_POS4                          24
    #define   LSb16BITMAP40_SEL_BIT_POS4                          8
    #define       bBITMAP40_SEL_BIT_POS4                       6
    #define   MSK32BITMAP40_SEL_BIT_POS4                          0x3F000000

    #define     RA_BITMAP40_SEL1                               0x0004

    #define     BA_BITMAP40_SEL_BIT_POS5                       0x0004
    #define     B16BITMAP40_SEL_BIT_POS5                       0x0004
    #define   LSb32BITMAP40_SEL_BIT_POS5                          0
    #define   LSb16BITMAP40_SEL_BIT_POS5                          0
    #define       bBITMAP40_SEL_BIT_POS5                       6
    #define   MSK32BITMAP40_SEL_BIT_POS5                          0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS6                       0x0004
    #define     B16BITMAP40_SEL_BIT_POS6                       0x0004
    #define   LSb32BITMAP40_SEL_BIT_POS6                          6
    #define   LSb16BITMAP40_SEL_BIT_POS6                          6
    #define       bBITMAP40_SEL_BIT_POS6                       6
    #define   MSK32BITMAP40_SEL_BIT_POS6                          0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS7                       0x0005
    #define     B16BITMAP40_SEL_BIT_POS7                       0x0004
    #define   LSb32BITMAP40_SEL_BIT_POS7                          12
    #define   LSb16BITMAP40_SEL_BIT_POS7                          12
    #define       bBITMAP40_SEL_BIT_POS7                       6
    #define   MSK32BITMAP40_SEL_BIT_POS7                          0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS8                       0x0006
    #define     B16BITMAP40_SEL_BIT_POS8                       0x0006
    #define   LSb32BITMAP40_SEL_BIT_POS8                          18
    #define   LSb16BITMAP40_SEL_BIT_POS8                          2
    #define       bBITMAP40_SEL_BIT_POS8                       6
    #define   MSK32BITMAP40_SEL_BIT_POS8                          0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS9                       0x0007
    #define     B16BITMAP40_SEL_BIT_POS9                       0x0006
    #define   LSb32BITMAP40_SEL_BIT_POS9                          24
    #define   LSb16BITMAP40_SEL_BIT_POS9                          8
    #define       bBITMAP40_SEL_BIT_POS9                       6
    #define   MSK32BITMAP40_SEL_BIT_POS9                          0x3F000000

    #define     RA_BITMAP40_SEL2                               0x0008

    #define     BA_BITMAP40_SEL_BIT_POS10                      0x0008
    #define     B16BITMAP40_SEL_BIT_POS10                      0x0008
    #define   LSb32BITMAP40_SEL_BIT_POS10                         0
    #define   LSb16BITMAP40_SEL_BIT_POS10                         0
    #define       bBITMAP40_SEL_BIT_POS10                      6
    #define   MSK32BITMAP40_SEL_BIT_POS10                         0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS11                      0x0008
    #define     B16BITMAP40_SEL_BIT_POS11                      0x0008
    #define   LSb32BITMAP40_SEL_BIT_POS11                         6
    #define   LSb16BITMAP40_SEL_BIT_POS11                         6
    #define       bBITMAP40_SEL_BIT_POS11                      6
    #define   MSK32BITMAP40_SEL_BIT_POS11                         0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS12                      0x0009
    #define     B16BITMAP40_SEL_BIT_POS12                      0x0008
    #define   LSb32BITMAP40_SEL_BIT_POS12                         12
    #define   LSb16BITMAP40_SEL_BIT_POS12                         12
    #define       bBITMAP40_SEL_BIT_POS12                      6
    #define   MSK32BITMAP40_SEL_BIT_POS12                         0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS13                      0x000A
    #define     B16BITMAP40_SEL_BIT_POS13                      0x000A
    #define   LSb32BITMAP40_SEL_BIT_POS13                         18
    #define   LSb16BITMAP40_SEL_BIT_POS13                         2
    #define       bBITMAP40_SEL_BIT_POS13                      6
    #define   MSK32BITMAP40_SEL_BIT_POS13                         0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS14                      0x000B
    #define     B16BITMAP40_SEL_BIT_POS14                      0x000A
    #define   LSb32BITMAP40_SEL_BIT_POS14                         24
    #define   LSb16BITMAP40_SEL_BIT_POS14                         8
    #define       bBITMAP40_SEL_BIT_POS14                      6
    #define   MSK32BITMAP40_SEL_BIT_POS14                         0x3F000000

    #define     RA_BITMAP40_SEL3                               0x000C

    #define     BA_BITMAP40_SEL_BIT_POS15                      0x000C
    #define     B16BITMAP40_SEL_BIT_POS15                      0x000C
    #define   LSb32BITMAP40_SEL_BIT_POS15                         0
    #define   LSb16BITMAP40_SEL_BIT_POS15                         0
    #define       bBITMAP40_SEL_BIT_POS15                      6
    #define   MSK32BITMAP40_SEL_BIT_POS15                         0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS16                      0x000C
    #define     B16BITMAP40_SEL_BIT_POS16                      0x000C
    #define   LSb32BITMAP40_SEL_BIT_POS16                         6
    #define   LSb16BITMAP40_SEL_BIT_POS16                         6
    #define       bBITMAP40_SEL_BIT_POS16                      6
    #define   MSK32BITMAP40_SEL_BIT_POS16                         0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS17                      0x000D
    #define     B16BITMAP40_SEL_BIT_POS17                      0x000C
    #define   LSb32BITMAP40_SEL_BIT_POS17                         12
    #define   LSb16BITMAP40_SEL_BIT_POS17                         12
    #define       bBITMAP40_SEL_BIT_POS17                      6
    #define   MSK32BITMAP40_SEL_BIT_POS17                         0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS18                      0x000E
    #define     B16BITMAP40_SEL_BIT_POS18                      0x000E
    #define   LSb32BITMAP40_SEL_BIT_POS18                         18
    #define   LSb16BITMAP40_SEL_BIT_POS18                         2
    #define       bBITMAP40_SEL_BIT_POS18                      6
    #define   MSK32BITMAP40_SEL_BIT_POS18                         0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS19                      0x000F
    #define     B16BITMAP40_SEL_BIT_POS19                      0x000E
    #define   LSb32BITMAP40_SEL_BIT_POS19                         24
    #define   LSb16BITMAP40_SEL_BIT_POS19                         8
    #define       bBITMAP40_SEL_BIT_POS19                      6
    #define   MSK32BITMAP40_SEL_BIT_POS19                         0x3F000000

    #define     RA_BITMAP40_SEL4                               0x0010

    #define     BA_BITMAP40_SEL_BIT_POS20                      0x0010
    #define     B16BITMAP40_SEL_BIT_POS20                      0x0010
    #define   LSb32BITMAP40_SEL_BIT_POS20                         0
    #define   LSb16BITMAP40_SEL_BIT_POS20                         0
    #define       bBITMAP40_SEL_BIT_POS20                      6
    #define   MSK32BITMAP40_SEL_BIT_POS20                         0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS21                      0x0010
    #define     B16BITMAP40_SEL_BIT_POS21                      0x0010
    #define   LSb32BITMAP40_SEL_BIT_POS21                         6
    #define   LSb16BITMAP40_SEL_BIT_POS21                         6
    #define       bBITMAP40_SEL_BIT_POS21                      6
    #define   MSK32BITMAP40_SEL_BIT_POS21                         0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS22                      0x0011
    #define     B16BITMAP40_SEL_BIT_POS22                      0x0010
    #define   LSb32BITMAP40_SEL_BIT_POS22                         12
    #define   LSb16BITMAP40_SEL_BIT_POS22                         12
    #define       bBITMAP40_SEL_BIT_POS22                      6
    #define   MSK32BITMAP40_SEL_BIT_POS22                         0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS23                      0x0012
    #define     B16BITMAP40_SEL_BIT_POS23                      0x0012
    #define   LSb32BITMAP40_SEL_BIT_POS23                         18
    #define   LSb16BITMAP40_SEL_BIT_POS23                         2
    #define       bBITMAP40_SEL_BIT_POS23                      6
    #define   MSK32BITMAP40_SEL_BIT_POS23                         0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS24                      0x0013
    #define     B16BITMAP40_SEL_BIT_POS24                      0x0012
    #define   LSb32BITMAP40_SEL_BIT_POS24                         24
    #define   LSb16BITMAP40_SEL_BIT_POS24                         8
    #define       bBITMAP40_SEL_BIT_POS24                      6
    #define   MSK32BITMAP40_SEL_BIT_POS24                         0x3F000000

    #define     RA_BITMAP40_SEL5                               0x0014

    #define     BA_BITMAP40_SEL_BIT_POS25                      0x0014
    #define     B16BITMAP40_SEL_BIT_POS25                      0x0014
    #define   LSb32BITMAP40_SEL_BIT_POS25                         0
    #define   LSb16BITMAP40_SEL_BIT_POS25                         0
    #define       bBITMAP40_SEL_BIT_POS25                      6
    #define   MSK32BITMAP40_SEL_BIT_POS25                         0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS26                      0x0014
    #define     B16BITMAP40_SEL_BIT_POS26                      0x0014
    #define   LSb32BITMAP40_SEL_BIT_POS26                         6
    #define   LSb16BITMAP40_SEL_BIT_POS26                         6
    #define       bBITMAP40_SEL_BIT_POS26                      6
    #define   MSK32BITMAP40_SEL_BIT_POS26                         0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS27                      0x0015
    #define     B16BITMAP40_SEL_BIT_POS27                      0x0014
    #define   LSb32BITMAP40_SEL_BIT_POS27                         12
    #define   LSb16BITMAP40_SEL_BIT_POS27                         12
    #define       bBITMAP40_SEL_BIT_POS27                      6
    #define   MSK32BITMAP40_SEL_BIT_POS27                         0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS28                      0x0016
    #define     B16BITMAP40_SEL_BIT_POS28                      0x0016
    #define   LSb32BITMAP40_SEL_BIT_POS28                         18
    #define   LSb16BITMAP40_SEL_BIT_POS28                         2
    #define       bBITMAP40_SEL_BIT_POS28                      6
    #define   MSK32BITMAP40_SEL_BIT_POS28                         0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS29                      0x0017
    #define     B16BITMAP40_SEL_BIT_POS29                      0x0016
    #define   LSb32BITMAP40_SEL_BIT_POS29                         24
    #define   LSb16BITMAP40_SEL_BIT_POS29                         8
    #define       bBITMAP40_SEL_BIT_POS29                      6
    #define   MSK32BITMAP40_SEL_BIT_POS29                         0x3F000000

    #define     RA_BITMAP40_SEL6                               0x0018

    #define     BA_BITMAP40_SEL_BIT_POS30                      0x0018
    #define     B16BITMAP40_SEL_BIT_POS30                      0x0018
    #define   LSb32BITMAP40_SEL_BIT_POS30                         0
    #define   LSb16BITMAP40_SEL_BIT_POS30                         0
    #define       bBITMAP40_SEL_BIT_POS30                      6
    #define   MSK32BITMAP40_SEL_BIT_POS30                         0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS31                      0x0018
    #define     B16BITMAP40_SEL_BIT_POS31                      0x0018
    #define   LSb32BITMAP40_SEL_BIT_POS31                         6
    #define   LSb16BITMAP40_SEL_BIT_POS31                         6
    #define       bBITMAP40_SEL_BIT_POS31                      6
    #define   MSK32BITMAP40_SEL_BIT_POS31                         0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS32                      0x0019
    #define     B16BITMAP40_SEL_BIT_POS32                      0x0018
    #define   LSb32BITMAP40_SEL_BIT_POS32                         12
    #define   LSb16BITMAP40_SEL_BIT_POS32                         12
    #define       bBITMAP40_SEL_BIT_POS32                      6
    #define   MSK32BITMAP40_SEL_BIT_POS32                         0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS33                      0x001A
    #define     B16BITMAP40_SEL_BIT_POS33                      0x001A
    #define   LSb32BITMAP40_SEL_BIT_POS33                         18
    #define   LSb16BITMAP40_SEL_BIT_POS33                         2
    #define       bBITMAP40_SEL_BIT_POS33                      6
    #define   MSK32BITMAP40_SEL_BIT_POS33                         0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS34                      0x001B
    #define     B16BITMAP40_SEL_BIT_POS34                      0x001A
    #define   LSb32BITMAP40_SEL_BIT_POS34                         24
    #define   LSb16BITMAP40_SEL_BIT_POS34                         8
    #define       bBITMAP40_SEL_BIT_POS34                      6
    #define   MSK32BITMAP40_SEL_BIT_POS34                         0x3F000000

    #define     RA_BITMAP40_SEL7                               0x001C

    #define     BA_BITMAP40_SEL_BIT_POS35                      0x001C
    #define     B16BITMAP40_SEL_BIT_POS35                      0x001C
    #define   LSb32BITMAP40_SEL_BIT_POS35                         0
    #define   LSb16BITMAP40_SEL_BIT_POS35                         0
    #define       bBITMAP40_SEL_BIT_POS35                      6
    #define   MSK32BITMAP40_SEL_BIT_POS35                         0x0000003F

    #define     BA_BITMAP40_SEL_BIT_POS36                      0x001C
    #define     B16BITMAP40_SEL_BIT_POS36                      0x001C
    #define   LSb32BITMAP40_SEL_BIT_POS36                         6
    #define   LSb16BITMAP40_SEL_BIT_POS36                         6
    #define       bBITMAP40_SEL_BIT_POS36                      6
    #define   MSK32BITMAP40_SEL_BIT_POS36                         0x00000FC0

    #define     BA_BITMAP40_SEL_BIT_POS37                      0x001D
    #define     B16BITMAP40_SEL_BIT_POS37                      0x001C
    #define   LSb32BITMAP40_SEL_BIT_POS37                         12
    #define   LSb16BITMAP40_SEL_BIT_POS37                         12
    #define       bBITMAP40_SEL_BIT_POS37                      6
    #define   MSK32BITMAP40_SEL_BIT_POS37                         0x0003F000

    #define     BA_BITMAP40_SEL_BIT_POS38                      0x001E
    #define     B16BITMAP40_SEL_BIT_POS38                      0x001E
    #define   LSb32BITMAP40_SEL_BIT_POS38                         18
    #define   LSb16BITMAP40_SEL_BIT_POS38                         2
    #define       bBITMAP40_SEL_BIT_POS38                      6
    #define   MSK32BITMAP40_SEL_BIT_POS38                         0x00FC0000

    #define     BA_BITMAP40_SEL_BIT_POS39                      0x001F
    #define     B16BITMAP40_SEL_BIT_POS39                      0x001E
    #define   LSb32BITMAP40_SEL_BIT_POS39                         24
    #define   LSb16BITMAP40_SEL_BIT_POS39                         8
    #define       bBITMAP40_SEL_BIT_POS39                      6
    #define   MSK32BITMAP40_SEL_BIT_POS39                         0x3F000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_BITMAP40 {
    ///////////////////////////////////////////////////////////
    #define   GET32BITMAP40_SEL_BIT_POS0(r32)                  _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS0(r32,v)                _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS0(r16)                  _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS0(r16,v)                _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS1(r32)                  _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS1(r32,v)                _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS1(r16)                  _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS1(r16,v)                _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS2(r32)                  _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS2(r32,v)                _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS3(r32)                  _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS3(r32,v)                _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS3(r16)                  _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS3(r16,v)                _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS4(r32)                  _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS4(r32,v)                _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS4(r16)                  _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS4(r16,v)                _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL                                {\
            UNSG32 uSEL_BIT_POS0                               :  6;\
            UNSG32 uSEL_BIT_POS1                               :  6;\
            UNSG32 uSEL_BIT_POS2                               :  6;\
            UNSG32 uSEL_BIT_POS3                               :  6;\
            UNSG32 uSEL_BIT_POS4                               :  6;\
            UNSG32 RSVDx0_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL;
            struct w32BITMAP40_SEL;
          };
    #define   GET32BITMAP40_SEL_BIT_POS5(r32)                  _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS5(r32,v)                _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS5(r16)                  _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS5(r16,v)                _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS6(r32)                  _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS6(r32,v)                _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS6(r16)                  _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS6(r16,v)                _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS7(r32)                  _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS7(r32,v)                _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS8(r32)                  _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS8(r32,v)                _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS8(r16)                  _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS8(r16,v)                _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS9(r32)                  _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS9(r32,v)                _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS9(r16)                  _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS9(r16,v)                _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL1                               {\
            UNSG32 uSEL_BIT_POS5                               :  6;\
            UNSG32 uSEL_BIT_POS6                               :  6;\
            UNSG32 uSEL_BIT_POS7                               :  6;\
            UNSG32 uSEL_BIT_POS8                               :  6;\
            UNSG32 uSEL_BIT_POS9                               :  6;\
            UNSG32 RSVDx4_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL1;
            struct w32BITMAP40_SEL1;
          };
    #define   GET32BITMAP40_SEL_BIT_POS10(r32)                 _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS10(r32,v)               _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS10(r16)                 _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS10(r16,v)               _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS11(r32)                 _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS11(r32,v)               _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS11(r16)                 _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS11(r16,v)               _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS12(r32)                 _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS12(r32,v)               _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS13(r32)                 _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS13(r32,v)               _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS13(r16)                 _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS13(r16,v)               _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS14(r32)                 _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS14(r32,v)               _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS14(r16)                 _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS14(r16,v)               _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL2                               {\
            UNSG32 uSEL_BIT_POS10                              :  6;\
            UNSG32 uSEL_BIT_POS11                              :  6;\
            UNSG32 uSEL_BIT_POS12                              :  6;\
            UNSG32 uSEL_BIT_POS13                              :  6;\
            UNSG32 uSEL_BIT_POS14                              :  6;\
            UNSG32 RSVDx8_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL2;
            struct w32BITMAP40_SEL2;
          };
    #define   GET32BITMAP40_SEL_BIT_POS15(r32)                 _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS15(r32,v)               _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS15(r16)                 _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS15(r16,v)               _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS16(r32)                 _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS16(r32,v)               _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS16(r16)                 _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS16(r16,v)               _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS17(r32)                 _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS17(r32,v)               _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS18(r32)                 _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS18(r32,v)               _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS18(r16)                 _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS18(r16,v)               _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS19(r32)                 _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS19(r32,v)               _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS19(r16)                 _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS19(r16,v)               _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL3                               {\
            UNSG32 uSEL_BIT_POS15                              :  6;\
            UNSG32 uSEL_BIT_POS16                              :  6;\
            UNSG32 uSEL_BIT_POS17                              :  6;\
            UNSG32 uSEL_BIT_POS18                              :  6;\
            UNSG32 uSEL_BIT_POS19                              :  6;\
            UNSG32 RSVDxC_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL3;
            struct w32BITMAP40_SEL3;
          };
    #define   GET32BITMAP40_SEL_BIT_POS20(r32)                 _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS20(r32,v)               _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS20(r16)                 _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS20(r16,v)               _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS21(r32)                 _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS21(r32,v)               _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS21(r16)                 _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS21(r16,v)               _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS22(r32)                 _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS22(r32,v)               _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS23(r32)                 _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS23(r32,v)               _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS23(r16)                 _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS23(r16,v)               _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS24(r32)                 _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS24(r32,v)               _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS24(r16)                 _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS24(r16,v)               _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL4                               {\
            UNSG32 uSEL_BIT_POS20                              :  6;\
            UNSG32 uSEL_BIT_POS21                              :  6;\
            UNSG32 uSEL_BIT_POS22                              :  6;\
            UNSG32 uSEL_BIT_POS23                              :  6;\
            UNSG32 uSEL_BIT_POS24                              :  6;\
            UNSG32 RSVDx10_b30                                 :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL4;
            struct w32BITMAP40_SEL4;
          };
    #define   GET32BITMAP40_SEL_BIT_POS25(r32)                 _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS25(r32,v)               _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS25(r16)                 _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS25(r16,v)               _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS26(r32)                 _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS26(r32,v)               _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS26(r16)                 _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS26(r16,v)               _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS27(r32)                 _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS27(r32,v)               _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS28(r32)                 _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS28(r32,v)               _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS28(r16)                 _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS28(r16,v)               _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS29(r32)                 _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS29(r32,v)               _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS29(r16)                 _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS29(r16,v)               _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL5                               {\
            UNSG32 uSEL_BIT_POS25                              :  6;\
            UNSG32 uSEL_BIT_POS26                              :  6;\
            UNSG32 uSEL_BIT_POS27                              :  6;\
            UNSG32 uSEL_BIT_POS28                              :  6;\
            UNSG32 uSEL_BIT_POS29                              :  6;\
            UNSG32 RSVDx14_b30                                 :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL5;
            struct w32BITMAP40_SEL5;
          };
    #define   GET32BITMAP40_SEL_BIT_POS30(r32)                 _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS30(r32,v)               _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS30(r16)                 _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS30(r16,v)               _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS31(r32)                 _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS31(r32,v)               _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS31(r16)                 _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS31(r16,v)               _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS32(r32)                 _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS32(r32,v)               _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS33(r32)                 _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS33(r32,v)               _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS33(r16)                 _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS33(r16,v)               _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS34(r32)                 _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS34(r32,v)               _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS34(r16)                 _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS34(r16,v)               _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL6                               {\
            UNSG32 uSEL_BIT_POS30                              :  6;\
            UNSG32 uSEL_BIT_POS31                              :  6;\
            UNSG32 uSEL_BIT_POS32                              :  6;\
            UNSG32 uSEL_BIT_POS33                              :  6;\
            UNSG32 uSEL_BIT_POS34                              :  6;\
            UNSG32 RSVDx18_b30                                 :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL6;
            struct w32BITMAP40_SEL6;
          };
    #define   GET32BITMAP40_SEL_BIT_POS35(r32)                 _BFGET_(r32, 5, 0)
    #define   SET32BITMAP40_SEL_BIT_POS35(r32,v)               _BFSET_(r32, 5, 0,v)
    #define   GET16BITMAP40_SEL_BIT_POS35(r16)                 _BFGET_(r16, 5, 0)
    #define   SET16BITMAP40_SEL_BIT_POS35(r16,v)               _BFSET_(r16, 5, 0,v)

    #define   GET32BITMAP40_SEL_BIT_POS36(r32)                 _BFGET_(r32,11, 6)
    #define   SET32BITMAP40_SEL_BIT_POS36(r32,v)               _BFSET_(r32,11, 6,v)
    #define   GET16BITMAP40_SEL_BIT_POS36(r16)                 _BFGET_(r16,11, 6)
    #define   SET16BITMAP40_SEL_BIT_POS36(r16,v)               _BFSET_(r16,11, 6,v)

    #define   GET32BITMAP40_SEL_BIT_POS37(r32)                 _BFGET_(r32,17,12)
    #define   SET32BITMAP40_SEL_BIT_POS37(r32,v)               _BFSET_(r32,17,12,v)

    #define   GET32BITMAP40_SEL_BIT_POS38(r32)                 _BFGET_(r32,23,18)
    #define   SET32BITMAP40_SEL_BIT_POS38(r32,v)               _BFSET_(r32,23,18,v)
    #define   GET16BITMAP40_SEL_BIT_POS38(r16)                 _BFGET_(r16, 7, 2)
    #define   SET16BITMAP40_SEL_BIT_POS38(r16,v)               _BFSET_(r16, 7, 2,v)

    #define   GET32BITMAP40_SEL_BIT_POS39(r32)                 _BFGET_(r32,29,24)
    #define   SET32BITMAP40_SEL_BIT_POS39(r32,v)               _BFSET_(r32,29,24,v)
    #define   GET16BITMAP40_SEL_BIT_POS39(r16)                 _BFGET_(r16,13, 8)
    #define   SET16BITMAP40_SEL_BIT_POS39(r16,v)               _BFSET_(r16,13, 8,v)

    #define     w32BITMAP40_SEL7                               {\
            UNSG32 uSEL_BIT_POS35                              :  6;\
            UNSG32 uSEL_BIT_POS36                              :  6;\
            UNSG32 uSEL_BIT_POS37                              :  6;\
            UNSG32 uSEL_BIT_POS38                              :  6;\
            UNSG32 uSEL_BIT_POS39                              :  6;\
            UNSG32 RSVDx1C_b30                                 :  2;\
          }
    union { UNSG32 u32BITMAP40_SEL7;
            struct w32BITMAP40_SEL7;
          };
    ///////////////////////////////////////////////////////////
    } SIE_BITMAP40;

    typedef union  T32BITMAP40_SEL
          { UNSG32 u32;
            struct w32BITMAP40_SEL;
                 } T32BITMAP40_SEL;
    typedef union  T32BITMAP40_SEL1
          { UNSG32 u32;
            struct w32BITMAP40_SEL1;
                 } T32BITMAP40_SEL1;
    typedef union  T32BITMAP40_SEL2
          { UNSG32 u32;
            struct w32BITMAP40_SEL2;
                 } T32BITMAP40_SEL2;
    typedef union  T32BITMAP40_SEL3
          { UNSG32 u32;
            struct w32BITMAP40_SEL3;
                 } T32BITMAP40_SEL3;
    typedef union  T32BITMAP40_SEL4
          { UNSG32 u32;
            struct w32BITMAP40_SEL4;
                 } T32BITMAP40_SEL4;
    typedef union  T32BITMAP40_SEL5
          { UNSG32 u32;
            struct w32BITMAP40_SEL5;
                 } T32BITMAP40_SEL5;
    typedef union  T32BITMAP40_SEL6
          { UNSG32 u32;
            struct w32BITMAP40_SEL6;
                 } T32BITMAP40_SEL6;
    typedef union  T32BITMAP40_SEL7
          { UNSG32 u32;
            struct w32BITMAP40_SEL7;
                 } T32BITMAP40_SEL7;
    ///////////////////////////////////////////////////////////

    typedef union  TBITMAP40_SEL
          { UNSG32 u32[8];
            struct {
            struct w32BITMAP40_SEL;
            struct w32BITMAP40_SEL1;
            struct w32BITMAP40_SEL2;
            struct w32BITMAP40_SEL3;
            struct w32BITMAP40_SEL4;
            struct w32BITMAP40_SEL5;
            struct w32BITMAP40_SEL6;
            struct w32BITMAP40_SEL7;
                   };
                 } TBITMAP40_SEL;

    ///////////////////////////////////////////////////////////
     SIGN32 BITMAP40_drvrd(SIE_BITMAP40 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 BITMAP40_drvwr(SIE_BITMAP40 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void BITMAP40_reset(SIE_BITMAP40 *p);
     SIGN32 BITMAP40_cmp  (SIE_BITMAP40 *p, SIE_BITMAP40 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define BITMAP40_check(p,pie,pfx,hLOG) BITMAP40_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define BITMAP40_print(p,    pfx,hLOG) BITMAP40_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: BITMAP40
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BITMAP20                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SEL                  (P)
///               %unsigned 5  BIT_POS0                  0x0
///               %unsigned 5  BIT_POS1                  0x1
///               %unsigned 5  BIT_POS2                  0x2
///               %unsigned 5  BIT_POS3                  0x3
///               %unsigned 5  BIT_POS4                  0x4
///               %unsigned 5  BIT_POS5                  0x5
///               %%        2          # Stuffing bits...
///     # 0x00004 SEL1                 
///               %unsigned 5  BIT_POS6                  0x6
///               %unsigned 5  BIT_POS7                  0x7
///               %unsigned 5  BIT_POS8                  0x8
///               %unsigned 5  BIT_POS9                  0x9
///               %unsigned 5  BIT_POS10                 0xA
///               %unsigned 5  BIT_POS11                 0xB
///               %%        2          # Stuffing bits...
///     # 0x00008 SEL2                 
///               %unsigned 5  BIT_POS12                 0xC
///               %unsigned 5  BIT_POS13                 0xD
///               %unsigned 5  BIT_POS14                 0xE
///               %unsigned 5  BIT_POS15                 0xF
///               %unsigned 5  BIT_POS16                 0x10
///               %unsigned 5  BIT_POS17                 0x11
///               %%        2          # Stuffing bits...
///     # 0x0000C SEL3                 
///               %unsigned 5  BIT_POS18                 0x12
///               %unsigned 5  BIT_POS19                 0x13
///                                    ###
///                                    * Specifies mapping of new bit locations within 20 bit data from Read Client which need to be used to form pixels for Inverse Scan mode.
///                                    * Normal dHub data order:
///                                    * {Y3,Cr2,Y2,Cb2,Y1,Cr0,Y0,Cb0} First pixel in LSB
///                                    * Inverse Scan dHub data order:
///                                    * {Y3,Cr2,Y2,Cb2,Y1,Cr0,Y0,Cb0} First pixel in MSB
///                                    * Following different data orders can be generated to be presented to first UPS in the pipe.
///                                    ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      16B, bits:     100b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_BITMAP20
#define h_BITMAP20 (){}

    #define     RA_BITMAP20_SEL                                0x0000

    #define     BA_BITMAP20_SEL_BIT_POS0                       0x0000
    #define     B16BITMAP20_SEL_BIT_POS0                       0x0000
    #define   LSb32BITMAP20_SEL_BIT_POS0                          0
    #define   LSb16BITMAP20_SEL_BIT_POS0                          0
    #define       bBITMAP20_SEL_BIT_POS0                       5
    #define   MSK32BITMAP20_SEL_BIT_POS0                          0x0000001F

    #define     BA_BITMAP20_SEL_BIT_POS1                       0x0000
    #define     B16BITMAP20_SEL_BIT_POS1                       0x0000
    #define   LSb32BITMAP20_SEL_BIT_POS1                          5
    #define   LSb16BITMAP20_SEL_BIT_POS1                          5
    #define       bBITMAP20_SEL_BIT_POS1                       5
    #define   MSK32BITMAP20_SEL_BIT_POS1                          0x000003E0

    #define     BA_BITMAP20_SEL_BIT_POS2                       0x0001
    #define     B16BITMAP20_SEL_BIT_POS2                       0x0000
    #define   LSb32BITMAP20_SEL_BIT_POS2                          10
    #define   LSb16BITMAP20_SEL_BIT_POS2                          10
    #define       bBITMAP20_SEL_BIT_POS2                       5
    #define   MSK32BITMAP20_SEL_BIT_POS2                          0x00007C00

    #define     BA_BITMAP20_SEL_BIT_POS3                       0x0001
    #define     B16BITMAP20_SEL_BIT_POS3                       0x0000
    #define   LSb32BITMAP20_SEL_BIT_POS3                          15
    #define   LSb16BITMAP20_SEL_BIT_POS3                          15
    #define       bBITMAP20_SEL_BIT_POS3                       5
    #define   MSK32BITMAP20_SEL_BIT_POS3                          0x000F8000

    #define     BA_BITMAP20_SEL_BIT_POS4                       0x0002
    #define     B16BITMAP20_SEL_BIT_POS4                       0x0002
    #define   LSb32BITMAP20_SEL_BIT_POS4                          20
    #define   LSb16BITMAP20_SEL_BIT_POS4                          4
    #define       bBITMAP20_SEL_BIT_POS4                       5
    #define   MSK32BITMAP20_SEL_BIT_POS4                          0x01F00000

    #define     BA_BITMAP20_SEL_BIT_POS5                       0x0003
    #define     B16BITMAP20_SEL_BIT_POS5                       0x0002
    #define   LSb32BITMAP20_SEL_BIT_POS5                          25
    #define   LSb16BITMAP20_SEL_BIT_POS5                          9
    #define       bBITMAP20_SEL_BIT_POS5                       5
    #define   MSK32BITMAP20_SEL_BIT_POS5                          0x3E000000

    #define     RA_BITMAP20_SEL1                               0x0004

    #define     BA_BITMAP20_SEL_BIT_POS6                       0x0004
    #define     B16BITMAP20_SEL_BIT_POS6                       0x0004
    #define   LSb32BITMAP20_SEL_BIT_POS6                          0
    #define   LSb16BITMAP20_SEL_BIT_POS6                          0
    #define       bBITMAP20_SEL_BIT_POS6                       5
    #define   MSK32BITMAP20_SEL_BIT_POS6                          0x0000001F

    #define     BA_BITMAP20_SEL_BIT_POS7                       0x0004
    #define     B16BITMAP20_SEL_BIT_POS7                       0x0004
    #define   LSb32BITMAP20_SEL_BIT_POS7                          5
    #define   LSb16BITMAP20_SEL_BIT_POS7                          5
    #define       bBITMAP20_SEL_BIT_POS7                       5
    #define   MSK32BITMAP20_SEL_BIT_POS7                          0x000003E0

    #define     BA_BITMAP20_SEL_BIT_POS8                       0x0005
    #define     B16BITMAP20_SEL_BIT_POS8                       0x0004
    #define   LSb32BITMAP20_SEL_BIT_POS8                          10
    #define   LSb16BITMAP20_SEL_BIT_POS8                          10
    #define       bBITMAP20_SEL_BIT_POS8                       5
    #define   MSK32BITMAP20_SEL_BIT_POS8                          0x00007C00

    #define     BA_BITMAP20_SEL_BIT_POS9                       0x0005
    #define     B16BITMAP20_SEL_BIT_POS9                       0x0004
    #define   LSb32BITMAP20_SEL_BIT_POS9                          15
    #define   LSb16BITMAP20_SEL_BIT_POS9                          15
    #define       bBITMAP20_SEL_BIT_POS9                       5
    #define   MSK32BITMAP20_SEL_BIT_POS9                          0x000F8000

    #define     BA_BITMAP20_SEL_BIT_POS10                      0x0006
    #define     B16BITMAP20_SEL_BIT_POS10                      0x0006
    #define   LSb32BITMAP20_SEL_BIT_POS10                         20
    #define   LSb16BITMAP20_SEL_BIT_POS10                         4
    #define       bBITMAP20_SEL_BIT_POS10                      5
    #define   MSK32BITMAP20_SEL_BIT_POS10                         0x01F00000

    #define     BA_BITMAP20_SEL_BIT_POS11                      0x0007
    #define     B16BITMAP20_SEL_BIT_POS11                      0x0006
    #define   LSb32BITMAP20_SEL_BIT_POS11                         25
    #define   LSb16BITMAP20_SEL_BIT_POS11                         9
    #define       bBITMAP20_SEL_BIT_POS11                      5
    #define   MSK32BITMAP20_SEL_BIT_POS11                         0x3E000000

    #define     RA_BITMAP20_SEL2                               0x0008

    #define     BA_BITMAP20_SEL_BIT_POS12                      0x0008
    #define     B16BITMAP20_SEL_BIT_POS12                      0x0008
    #define   LSb32BITMAP20_SEL_BIT_POS12                         0
    #define   LSb16BITMAP20_SEL_BIT_POS12                         0
    #define       bBITMAP20_SEL_BIT_POS12                      5
    #define   MSK32BITMAP20_SEL_BIT_POS12                         0x0000001F

    #define     BA_BITMAP20_SEL_BIT_POS13                      0x0008
    #define     B16BITMAP20_SEL_BIT_POS13                      0x0008
    #define   LSb32BITMAP20_SEL_BIT_POS13                         5
    #define   LSb16BITMAP20_SEL_BIT_POS13                         5
    #define       bBITMAP20_SEL_BIT_POS13                      5
    #define   MSK32BITMAP20_SEL_BIT_POS13                         0x000003E0

    #define     BA_BITMAP20_SEL_BIT_POS14                      0x0009
    #define     B16BITMAP20_SEL_BIT_POS14                      0x0008
    #define   LSb32BITMAP20_SEL_BIT_POS14                         10
    #define   LSb16BITMAP20_SEL_BIT_POS14                         10
    #define       bBITMAP20_SEL_BIT_POS14                      5
    #define   MSK32BITMAP20_SEL_BIT_POS14                         0x00007C00

    #define     BA_BITMAP20_SEL_BIT_POS15                      0x0009
    #define     B16BITMAP20_SEL_BIT_POS15                      0x0008
    #define   LSb32BITMAP20_SEL_BIT_POS15                         15
    #define   LSb16BITMAP20_SEL_BIT_POS15                         15
    #define       bBITMAP20_SEL_BIT_POS15                      5
    #define   MSK32BITMAP20_SEL_BIT_POS15                         0x000F8000

    #define     BA_BITMAP20_SEL_BIT_POS16                      0x000A
    #define     B16BITMAP20_SEL_BIT_POS16                      0x000A
    #define   LSb32BITMAP20_SEL_BIT_POS16                         20
    #define   LSb16BITMAP20_SEL_BIT_POS16                         4
    #define       bBITMAP20_SEL_BIT_POS16                      5
    #define   MSK32BITMAP20_SEL_BIT_POS16                         0x01F00000

    #define     BA_BITMAP20_SEL_BIT_POS17                      0x000B
    #define     B16BITMAP20_SEL_BIT_POS17                      0x000A
    #define   LSb32BITMAP20_SEL_BIT_POS17                         25
    #define   LSb16BITMAP20_SEL_BIT_POS17                         9
    #define       bBITMAP20_SEL_BIT_POS17                      5
    #define   MSK32BITMAP20_SEL_BIT_POS17                         0x3E000000

    #define     RA_BITMAP20_SEL3                               0x000C

    #define     BA_BITMAP20_SEL_BIT_POS18                      0x000C
    #define     B16BITMAP20_SEL_BIT_POS18                      0x000C
    #define   LSb32BITMAP20_SEL_BIT_POS18                         0
    #define   LSb16BITMAP20_SEL_BIT_POS18                         0
    #define       bBITMAP20_SEL_BIT_POS18                      5
    #define   MSK32BITMAP20_SEL_BIT_POS18                         0x0000001F

    #define     BA_BITMAP20_SEL_BIT_POS19                      0x000C
    #define     B16BITMAP20_SEL_BIT_POS19                      0x000C
    #define   LSb32BITMAP20_SEL_BIT_POS19                         5
    #define   LSb16BITMAP20_SEL_BIT_POS19                         5
    #define       bBITMAP20_SEL_BIT_POS19                      5
    #define   MSK32BITMAP20_SEL_BIT_POS19                         0x000003E0
    ///////////////////////////////////////////////////////////

    typedef struct SIE_BITMAP20 {
    ///////////////////////////////////////////////////////////
    #define   GET32BITMAP20_SEL_BIT_POS0(r32)                  _BFGET_(r32, 4, 0)
    #define   SET32BITMAP20_SEL_BIT_POS0(r32,v)                _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP20_SEL_BIT_POS0(r16)                  _BFGET_(r16, 4, 0)
    #define   SET16BITMAP20_SEL_BIT_POS0(r16,v)                _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP20_SEL_BIT_POS1(r32)                  _BFGET_(r32, 9, 5)
    #define   SET32BITMAP20_SEL_BIT_POS1(r32,v)                _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP20_SEL_BIT_POS1(r16)                  _BFGET_(r16, 9, 5)
    #define   SET16BITMAP20_SEL_BIT_POS1(r16,v)                _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP20_SEL_BIT_POS2(r32)                  _BFGET_(r32,14,10)
    #define   SET32BITMAP20_SEL_BIT_POS2(r32,v)                _BFSET_(r32,14,10,v)
    #define   GET16BITMAP20_SEL_BIT_POS2(r16)                  _BFGET_(r16,14,10)
    #define   SET16BITMAP20_SEL_BIT_POS2(r16,v)                _BFSET_(r16,14,10,v)

    #define   GET32BITMAP20_SEL_BIT_POS3(r32)                  _BFGET_(r32,19,15)
    #define   SET32BITMAP20_SEL_BIT_POS3(r32,v)                _BFSET_(r32,19,15,v)

    #define   GET32BITMAP20_SEL_BIT_POS4(r32)                  _BFGET_(r32,24,20)
    #define   SET32BITMAP20_SEL_BIT_POS4(r32,v)                _BFSET_(r32,24,20,v)
    #define   GET16BITMAP20_SEL_BIT_POS4(r16)                  _BFGET_(r16, 8, 4)
    #define   SET16BITMAP20_SEL_BIT_POS4(r16,v)                _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP20_SEL_BIT_POS5(r32)                  _BFGET_(r32,29,25)
    #define   SET32BITMAP20_SEL_BIT_POS5(r32,v)                _BFSET_(r32,29,25,v)
    #define   GET16BITMAP20_SEL_BIT_POS5(r16)                  _BFGET_(r16,13, 9)
    #define   SET16BITMAP20_SEL_BIT_POS5(r16,v)                _BFSET_(r16,13, 9,v)

    #define     w32BITMAP20_SEL                                {\
            UNSG32 uSEL_BIT_POS0                               :  5;\
            UNSG32 uSEL_BIT_POS1                               :  5;\
            UNSG32 uSEL_BIT_POS2                               :  5;\
            UNSG32 uSEL_BIT_POS3                               :  5;\
            UNSG32 uSEL_BIT_POS4                               :  5;\
            UNSG32 uSEL_BIT_POS5                               :  5;\
            UNSG32 RSVDx0_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP20_SEL;
            struct w32BITMAP20_SEL;
          };
    #define   GET32BITMAP20_SEL_BIT_POS6(r32)                  _BFGET_(r32, 4, 0)
    #define   SET32BITMAP20_SEL_BIT_POS6(r32,v)                _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP20_SEL_BIT_POS6(r16)                  _BFGET_(r16, 4, 0)
    #define   SET16BITMAP20_SEL_BIT_POS6(r16,v)                _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP20_SEL_BIT_POS7(r32)                  _BFGET_(r32, 9, 5)
    #define   SET32BITMAP20_SEL_BIT_POS7(r32,v)                _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP20_SEL_BIT_POS7(r16)                  _BFGET_(r16, 9, 5)
    #define   SET16BITMAP20_SEL_BIT_POS7(r16,v)                _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP20_SEL_BIT_POS8(r32)                  _BFGET_(r32,14,10)
    #define   SET32BITMAP20_SEL_BIT_POS8(r32,v)                _BFSET_(r32,14,10,v)
    #define   GET16BITMAP20_SEL_BIT_POS8(r16)                  _BFGET_(r16,14,10)
    #define   SET16BITMAP20_SEL_BIT_POS8(r16,v)                _BFSET_(r16,14,10,v)

    #define   GET32BITMAP20_SEL_BIT_POS9(r32)                  _BFGET_(r32,19,15)
    #define   SET32BITMAP20_SEL_BIT_POS9(r32,v)                _BFSET_(r32,19,15,v)

    #define   GET32BITMAP20_SEL_BIT_POS10(r32)                 _BFGET_(r32,24,20)
    #define   SET32BITMAP20_SEL_BIT_POS10(r32,v)               _BFSET_(r32,24,20,v)
    #define   GET16BITMAP20_SEL_BIT_POS10(r16)                 _BFGET_(r16, 8, 4)
    #define   SET16BITMAP20_SEL_BIT_POS10(r16,v)               _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP20_SEL_BIT_POS11(r32)                 _BFGET_(r32,29,25)
    #define   SET32BITMAP20_SEL_BIT_POS11(r32,v)               _BFSET_(r32,29,25,v)
    #define   GET16BITMAP20_SEL_BIT_POS11(r16)                 _BFGET_(r16,13, 9)
    #define   SET16BITMAP20_SEL_BIT_POS11(r16,v)               _BFSET_(r16,13, 9,v)

    #define     w32BITMAP20_SEL1                               {\
            UNSG32 uSEL_BIT_POS6                               :  5;\
            UNSG32 uSEL_BIT_POS7                               :  5;\
            UNSG32 uSEL_BIT_POS8                               :  5;\
            UNSG32 uSEL_BIT_POS9                               :  5;\
            UNSG32 uSEL_BIT_POS10                              :  5;\
            UNSG32 uSEL_BIT_POS11                              :  5;\
            UNSG32 RSVDx4_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP20_SEL1;
            struct w32BITMAP20_SEL1;
          };
    #define   GET32BITMAP20_SEL_BIT_POS12(r32)                 _BFGET_(r32, 4, 0)
    #define   SET32BITMAP20_SEL_BIT_POS12(r32,v)               _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP20_SEL_BIT_POS12(r16)                 _BFGET_(r16, 4, 0)
    #define   SET16BITMAP20_SEL_BIT_POS12(r16,v)               _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP20_SEL_BIT_POS13(r32)                 _BFGET_(r32, 9, 5)
    #define   SET32BITMAP20_SEL_BIT_POS13(r32,v)               _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP20_SEL_BIT_POS13(r16)                 _BFGET_(r16, 9, 5)
    #define   SET16BITMAP20_SEL_BIT_POS13(r16,v)               _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP20_SEL_BIT_POS14(r32)                 _BFGET_(r32,14,10)
    #define   SET32BITMAP20_SEL_BIT_POS14(r32,v)               _BFSET_(r32,14,10,v)
    #define   GET16BITMAP20_SEL_BIT_POS14(r16)                 _BFGET_(r16,14,10)
    #define   SET16BITMAP20_SEL_BIT_POS14(r16,v)               _BFSET_(r16,14,10,v)

    #define   GET32BITMAP20_SEL_BIT_POS15(r32)                 _BFGET_(r32,19,15)
    #define   SET32BITMAP20_SEL_BIT_POS15(r32,v)               _BFSET_(r32,19,15,v)

    #define   GET32BITMAP20_SEL_BIT_POS16(r32)                 _BFGET_(r32,24,20)
    #define   SET32BITMAP20_SEL_BIT_POS16(r32,v)               _BFSET_(r32,24,20,v)
    #define   GET16BITMAP20_SEL_BIT_POS16(r16)                 _BFGET_(r16, 8, 4)
    #define   SET16BITMAP20_SEL_BIT_POS16(r16,v)               _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP20_SEL_BIT_POS17(r32)                 _BFGET_(r32,29,25)
    #define   SET32BITMAP20_SEL_BIT_POS17(r32,v)               _BFSET_(r32,29,25,v)
    #define   GET16BITMAP20_SEL_BIT_POS17(r16)                 _BFGET_(r16,13, 9)
    #define   SET16BITMAP20_SEL_BIT_POS17(r16,v)               _BFSET_(r16,13, 9,v)

    #define     w32BITMAP20_SEL2                               {\
            UNSG32 uSEL_BIT_POS12                              :  5;\
            UNSG32 uSEL_BIT_POS13                              :  5;\
            UNSG32 uSEL_BIT_POS14                              :  5;\
            UNSG32 uSEL_BIT_POS15                              :  5;\
            UNSG32 uSEL_BIT_POS16                              :  5;\
            UNSG32 uSEL_BIT_POS17                              :  5;\
            UNSG32 RSVDx8_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP20_SEL2;
            struct w32BITMAP20_SEL2;
          };
    #define   GET32BITMAP20_SEL_BIT_POS18(r32)                 _BFGET_(r32, 4, 0)
    #define   SET32BITMAP20_SEL_BIT_POS18(r32,v)               _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP20_SEL_BIT_POS18(r16)                 _BFGET_(r16, 4, 0)
    #define   SET16BITMAP20_SEL_BIT_POS18(r16,v)               _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP20_SEL_BIT_POS19(r32)                 _BFGET_(r32, 9, 5)
    #define   SET32BITMAP20_SEL_BIT_POS19(r32,v)               _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP20_SEL_BIT_POS19(r16)                 _BFGET_(r16, 9, 5)
    #define   SET16BITMAP20_SEL_BIT_POS19(r16,v)               _BFSET_(r16, 9, 5,v)

    #define     w32BITMAP20_SEL3                               {\
            UNSG32 uSEL_BIT_POS18                              :  5;\
            UNSG32 uSEL_BIT_POS19                              :  5;\
            UNSG32 RSVDxC_b10                                  : 22;\
          }
    union { UNSG32 u32BITMAP20_SEL3;
            struct w32BITMAP20_SEL3;
          };
    ///////////////////////////////////////////////////////////
    } SIE_BITMAP20;

    typedef union  T32BITMAP20_SEL
          { UNSG32 u32;
            struct w32BITMAP20_SEL;
                 } T32BITMAP20_SEL;
    typedef union  T32BITMAP20_SEL1
          { UNSG32 u32;
            struct w32BITMAP20_SEL1;
                 } T32BITMAP20_SEL1;
    typedef union  T32BITMAP20_SEL2
          { UNSG32 u32;
            struct w32BITMAP20_SEL2;
                 } T32BITMAP20_SEL2;
    typedef union  T32BITMAP20_SEL3
          { UNSG32 u32;
            struct w32BITMAP20_SEL3;
                 } T32BITMAP20_SEL3;
    ///////////////////////////////////////////////////////////

    typedef union  TBITMAP20_SEL
          { UNSG32 u32[4];
            struct {
            struct w32BITMAP20_SEL;
            struct w32BITMAP20_SEL1;
            struct w32BITMAP20_SEL2;
            struct w32BITMAP20_SEL3;
                   };
                 } TBITMAP20_SEL;

    ///////////////////////////////////////////////////////////
     SIGN32 BITMAP20_drvrd(SIE_BITMAP20 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 BITMAP20_drvwr(SIE_BITMAP20 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void BITMAP20_reset(SIE_BITMAP20 *p);
     SIGN32 BITMAP20_cmp  (SIE_BITMAP20 *p, SIE_BITMAP20 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define BITMAP20_check(p,pie,pfx,hLOG) BITMAP20_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define BITMAP20_print(p,    pfx,hLOG) BITMAP20_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: BITMAP20
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BITMAP32                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SEL                  (P)
///               %unsigned 5  BIT_POS0                  0x0
///               %unsigned 5  BIT_POS1                  0x1
///               %unsigned 5  BIT_POS2                  0x2
///               %unsigned 5  BIT_POS3                  0x3
///               %unsigned 5  BIT_POS4                  0x4
///               %unsigned 5  BIT_POS5                  0x5
///               %%        2          # Stuffing bits...
///     # 0x00004 SEL1                 
///               %unsigned 5  BIT_POS6                  0x6
///               %unsigned 5  BIT_POS7                  0x7
///               %unsigned 5  BIT_POS8                  0x8
///               %unsigned 5  BIT_POS9                  0x9
///               %unsigned 5  BIT_POS10                 0xA
///               %unsigned 5  BIT_POS11                 0xB
///               %%        2          # Stuffing bits...
///     # 0x00008 SEL2                 
///               %unsigned 5  BIT_POS12                 0xC
///               %unsigned 5  BIT_POS13                 0xD
///               %unsigned 5  BIT_POS14                 0xE
///               %unsigned 5  BIT_POS15                 0xF
///               %unsigned 5  BIT_POS16                 0x10
///               %unsigned 5  BIT_POS17                 0x11
///               %%        2          # Stuffing bits...
///     # 0x0000C SEL3                 
///               %unsigned 5  BIT_POS18                 0x12
///               %unsigned 5  BIT_POS19                 0x13
///               %unsigned 5  BIT_POS20                 0x14
///               %unsigned 5  BIT_POS21                 0x15
///               %unsigned 5  BIT_POS22                 0x16
///               %unsigned 5  BIT_POS23                 0x17
///               %%        2          # Stuffing bits...
///     # 0x00010 SEL4                 
///               %unsigned 5  BIT_POS24                 0x18
///               %unsigned 5  BIT_POS25                 0x19
///               %unsigned 5  BIT_POS26                 0x1A
///               %unsigned 5  BIT_POS27                 0x1B
///               %unsigned 5  BIT_POS28                 0x1C
///               %unsigned 5  BIT_POS29                 0x1D
///               %%        2          # Stuffing bits...
///     # 0x00014 SEL5                 
///               %unsigned 5  BIT_POS30                 0x1E
///               %unsigned 5  BIT_POS31                 0x1F
///                                    ###
///                                    * Specifies mapping of 32 bit data from Read Client which need to be used to form pixels for Inverse Scan mode.
///                                    ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      24B, bits:     160b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_BITMAP32
#define h_BITMAP32 (){}

    #define     RA_BITMAP32_SEL                                0x0000

    #define     BA_BITMAP32_SEL_BIT_POS0                       0x0000
    #define     B16BITMAP32_SEL_BIT_POS0                       0x0000
    #define   LSb32BITMAP32_SEL_BIT_POS0                          0
    #define   LSb16BITMAP32_SEL_BIT_POS0                          0
    #define       bBITMAP32_SEL_BIT_POS0                       5
    #define   MSK32BITMAP32_SEL_BIT_POS0                          0x0000001F

    #define     BA_BITMAP32_SEL_BIT_POS1                       0x0000
    #define     B16BITMAP32_SEL_BIT_POS1                       0x0000
    #define   LSb32BITMAP32_SEL_BIT_POS1                          5
    #define   LSb16BITMAP32_SEL_BIT_POS1                          5
    #define       bBITMAP32_SEL_BIT_POS1                       5
    #define   MSK32BITMAP32_SEL_BIT_POS1                          0x000003E0

    #define     BA_BITMAP32_SEL_BIT_POS2                       0x0001
    #define     B16BITMAP32_SEL_BIT_POS2                       0x0000
    #define   LSb32BITMAP32_SEL_BIT_POS2                          10
    #define   LSb16BITMAP32_SEL_BIT_POS2                          10
    #define       bBITMAP32_SEL_BIT_POS2                       5
    #define   MSK32BITMAP32_SEL_BIT_POS2                          0x00007C00

    #define     BA_BITMAP32_SEL_BIT_POS3                       0x0001
    #define     B16BITMAP32_SEL_BIT_POS3                       0x0000
    #define   LSb32BITMAP32_SEL_BIT_POS3                          15
    #define   LSb16BITMAP32_SEL_BIT_POS3                          15
    #define       bBITMAP32_SEL_BIT_POS3                       5
    #define   MSK32BITMAP32_SEL_BIT_POS3                          0x000F8000

    #define     BA_BITMAP32_SEL_BIT_POS4                       0x0002
    #define     B16BITMAP32_SEL_BIT_POS4                       0x0002
    #define   LSb32BITMAP32_SEL_BIT_POS4                          20
    #define   LSb16BITMAP32_SEL_BIT_POS4                          4
    #define       bBITMAP32_SEL_BIT_POS4                       5
    #define   MSK32BITMAP32_SEL_BIT_POS4                          0x01F00000

    #define     BA_BITMAP32_SEL_BIT_POS5                       0x0003
    #define     B16BITMAP32_SEL_BIT_POS5                       0x0002
    #define   LSb32BITMAP32_SEL_BIT_POS5                          25
    #define   LSb16BITMAP32_SEL_BIT_POS5                          9
    #define       bBITMAP32_SEL_BIT_POS5                       5
    #define   MSK32BITMAP32_SEL_BIT_POS5                          0x3E000000

    #define     RA_BITMAP32_SEL1                               0x0004

    #define     BA_BITMAP32_SEL_BIT_POS6                       0x0004
    #define     B16BITMAP32_SEL_BIT_POS6                       0x0004
    #define   LSb32BITMAP32_SEL_BIT_POS6                          0
    #define   LSb16BITMAP32_SEL_BIT_POS6                          0
    #define       bBITMAP32_SEL_BIT_POS6                       5
    #define   MSK32BITMAP32_SEL_BIT_POS6                          0x0000001F

    #define     BA_BITMAP32_SEL_BIT_POS7                       0x0004
    #define     B16BITMAP32_SEL_BIT_POS7                       0x0004
    #define   LSb32BITMAP32_SEL_BIT_POS7                          5
    #define   LSb16BITMAP32_SEL_BIT_POS7                          5
    #define       bBITMAP32_SEL_BIT_POS7                       5
    #define   MSK32BITMAP32_SEL_BIT_POS7                          0x000003E0

    #define     BA_BITMAP32_SEL_BIT_POS8                       0x0005
    #define     B16BITMAP32_SEL_BIT_POS8                       0x0004
    #define   LSb32BITMAP32_SEL_BIT_POS8                          10
    #define   LSb16BITMAP32_SEL_BIT_POS8                          10
    #define       bBITMAP32_SEL_BIT_POS8                       5
    #define   MSK32BITMAP32_SEL_BIT_POS8                          0x00007C00

    #define     BA_BITMAP32_SEL_BIT_POS9                       0x0005
    #define     B16BITMAP32_SEL_BIT_POS9                       0x0004
    #define   LSb32BITMAP32_SEL_BIT_POS9                          15
    #define   LSb16BITMAP32_SEL_BIT_POS9                          15
    #define       bBITMAP32_SEL_BIT_POS9                       5
    #define   MSK32BITMAP32_SEL_BIT_POS9                          0x000F8000

    #define     BA_BITMAP32_SEL_BIT_POS10                      0x0006
    #define     B16BITMAP32_SEL_BIT_POS10                      0x0006
    #define   LSb32BITMAP32_SEL_BIT_POS10                         20
    #define   LSb16BITMAP32_SEL_BIT_POS10                         4
    #define       bBITMAP32_SEL_BIT_POS10                      5
    #define   MSK32BITMAP32_SEL_BIT_POS10                         0x01F00000

    #define     BA_BITMAP32_SEL_BIT_POS11                      0x0007
    #define     B16BITMAP32_SEL_BIT_POS11                      0x0006
    #define   LSb32BITMAP32_SEL_BIT_POS11                         25
    #define   LSb16BITMAP32_SEL_BIT_POS11                         9
    #define       bBITMAP32_SEL_BIT_POS11                      5
    #define   MSK32BITMAP32_SEL_BIT_POS11                         0x3E000000

    #define     RA_BITMAP32_SEL2                               0x0008

    #define     BA_BITMAP32_SEL_BIT_POS12                      0x0008
    #define     B16BITMAP32_SEL_BIT_POS12                      0x0008
    #define   LSb32BITMAP32_SEL_BIT_POS12                         0
    #define   LSb16BITMAP32_SEL_BIT_POS12                         0
    #define       bBITMAP32_SEL_BIT_POS12                      5
    #define   MSK32BITMAP32_SEL_BIT_POS12                         0x0000001F

    #define     BA_BITMAP32_SEL_BIT_POS13                      0x0008
    #define     B16BITMAP32_SEL_BIT_POS13                      0x0008
    #define   LSb32BITMAP32_SEL_BIT_POS13                         5
    #define   LSb16BITMAP32_SEL_BIT_POS13                         5
    #define       bBITMAP32_SEL_BIT_POS13                      5
    #define   MSK32BITMAP32_SEL_BIT_POS13                         0x000003E0

    #define     BA_BITMAP32_SEL_BIT_POS14                      0x0009
    #define     B16BITMAP32_SEL_BIT_POS14                      0x0008
    #define   LSb32BITMAP32_SEL_BIT_POS14                         10
    #define   LSb16BITMAP32_SEL_BIT_POS14                         10
    #define       bBITMAP32_SEL_BIT_POS14                      5
    #define   MSK32BITMAP32_SEL_BIT_POS14                         0x00007C00

    #define     BA_BITMAP32_SEL_BIT_POS15                      0x0009
    #define     B16BITMAP32_SEL_BIT_POS15                      0x0008
    #define   LSb32BITMAP32_SEL_BIT_POS15                         15
    #define   LSb16BITMAP32_SEL_BIT_POS15                         15
    #define       bBITMAP32_SEL_BIT_POS15                      5
    #define   MSK32BITMAP32_SEL_BIT_POS15                         0x000F8000

    #define     BA_BITMAP32_SEL_BIT_POS16                      0x000A
    #define     B16BITMAP32_SEL_BIT_POS16                      0x000A
    #define   LSb32BITMAP32_SEL_BIT_POS16                         20
    #define   LSb16BITMAP32_SEL_BIT_POS16                         4
    #define       bBITMAP32_SEL_BIT_POS16                      5
    #define   MSK32BITMAP32_SEL_BIT_POS16                         0x01F00000

    #define     BA_BITMAP32_SEL_BIT_POS17                      0x000B
    #define     B16BITMAP32_SEL_BIT_POS17                      0x000A
    #define   LSb32BITMAP32_SEL_BIT_POS17                         25
    #define   LSb16BITMAP32_SEL_BIT_POS17                         9
    #define       bBITMAP32_SEL_BIT_POS17                      5
    #define   MSK32BITMAP32_SEL_BIT_POS17                         0x3E000000

    #define     RA_BITMAP32_SEL3                               0x000C

    #define     BA_BITMAP32_SEL_BIT_POS18                      0x000C
    #define     B16BITMAP32_SEL_BIT_POS18                      0x000C
    #define   LSb32BITMAP32_SEL_BIT_POS18                         0
    #define   LSb16BITMAP32_SEL_BIT_POS18                         0
    #define       bBITMAP32_SEL_BIT_POS18                      5
    #define   MSK32BITMAP32_SEL_BIT_POS18                         0x0000001F

    #define     BA_BITMAP32_SEL_BIT_POS19                      0x000C
    #define     B16BITMAP32_SEL_BIT_POS19                      0x000C
    #define   LSb32BITMAP32_SEL_BIT_POS19                         5
    #define   LSb16BITMAP32_SEL_BIT_POS19                         5
    #define       bBITMAP32_SEL_BIT_POS19                      5
    #define   MSK32BITMAP32_SEL_BIT_POS19                         0x000003E0

    #define     BA_BITMAP32_SEL_BIT_POS20                      0x000D
    #define     B16BITMAP32_SEL_BIT_POS20                      0x000C
    #define   LSb32BITMAP32_SEL_BIT_POS20                         10
    #define   LSb16BITMAP32_SEL_BIT_POS20                         10
    #define       bBITMAP32_SEL_BIT_POS20                      5
    #define   MSK32BITMAP32_SEL_BIT_POS20                         0x00007C00

    #define     BA_BITMAP32_SEL_BIT_POS21                      0x000D
    #define     B16BITMAP32_SEL_BIT_POS21                      0x000C
    #define   LSb32BITMAP32_SEL_BIT_POS21                         15
    #define   LSb16BITMAP32_SEL_BIT_POS21                         15
    #define       bBITMAP32_SEL_BIT_POS21                      5
    #define   MSK32BITMAP32_SEL_BIT_POS21                         0x000F8000

    #define     BA_BITMAP32_SEL_BIT_POS22                      0x000E
    #define     B16BITMAP32_SEL_BIT_POS22                      0x000E
    #define   LSb32BITMAP32_SEL_BIT_POS22                         20
    #define   LSb16BITMAP32_SEL_BIT_POS22                         4
    #define       bBITMAP32_SEL_BIT_POS22                      5
    #define   MSK32BITMAP32_SEL_BIT_POS22                         0x01F00000

    #define     BA_BITMAP32_SEL_BIT_POS23                      0x000F
    #define     B16BITMAP32_SEL_BIT_POS23                      0x000E
    #define   LSb32BITMAP32_SEL_BIT_POS23                         25
    #define   LSb16BITMAP32_SEL_BIT_POS23                         9
    #define       bBITMAP32_SEL_BIT_POS23                      5
    #define   MSK32BITMAP32_SEL_BIT_POS23                         0x3E000000

    #define     RA_BITMAP32_SEL4                               0x0010

    #define     BA_BITMAP32_SEL_BIT_POS24                      0x0010
    #define     B16BITMAP32_SEL_BIT_POS24                      0x0010
    #define   LSb32BITMAP32_SEL_BIT_POS24                         0
    #define   LSb16BITMAP32_SEL_BIT_POS24                         0
    #define       bBITMAP32_SEL_BIT_POS24                      5
    #define   MSK32BITMAP32_SEL_BIT_POS24                         0x0000001F

    #define     BA_BITMAP32_SEL_BIT_POS25                      0x0010
    #define     B16BITMAP32_SEL_BIT_POS25                      0x0010
    #define   LSb32BITMAP32_SEL_BIT_POS25                         5
    #define   LSb16BITMAP32_SEL_BIT_POS25                         5
    #define       bBITMAP32_SEL_BIT_POS25                      5
    #define   MSK32BITMAP32_SEL_BIT_POS25                         0x000003E0

    #define     BA_BITMAP32_SEL_BIT_POS26                      0x0011
    #define     B16BITMAP32_SEL_BIT_POS26                      0x0010
    #define   LSb32BITMAP32_SEL_BIT_POS26                         10
    #define   LSb16BITMAP32_SEL_BIT_POS26                         10
    #define       bBITMAP32_SEL_BIT_POS26                      5
    #define   MSK32BITMAP32_SEL_BIT_POS26                         0x00007C00

    #define     BA_BITMAP32_SEL_BIT_POS27                      0x0011
    #define     B16BITMAP32_SEL_BIT_POS27                      0x0010
    #define   LSb32BITMAP32_SEL_BIT_POS27                         15
    #define   LSb16BITMAP32_SEL_BIT_POS27                         15
    #define       bBITMAP32_SEL_BIT_POS27                      5
    #define   MSK32BITMAP32_SEL_BIT_POS27                         0x000F8000

    #define     BA_BITMAP32_SEL_BIT_POS28                      0x0012
    #define     B16BITMAP32_SEL_BIT_POS28                      0x0012
    #define   LSb32BITMAP32_SEL_BIT_POS28                         20
    #define   LSb16BITMAP32_SEL_BIT_POS28                         4
    #define       bBITMAP32_SEL_BIT_POS28                      5
    #define   MSK32BITMAP32_SEL_BIT_POS28                         0x01F00000

    #define     BA_BITMAP32_SEL_BIT_POS29                      0x0013
    #define     B16BITMAP32_SEL_BIT_POS29                      0x0012
    #define   LSb32BITMAP32_SEL_BIT_POS29                         25
    #define   LSb16BITMAP32_SEL_BIT_POS29                         9
    #define       bBITMAP32_SEL_BIT_POS29                      5
    #define   MSK32BITMAP32_SEL_BIT_POS29                         0x3E000000

    #define     RA_BITMAP32_SEL5                               0x0014

    #define     BA_BITMAP32_SEL_BIT_POS30                      0x0014
    #define     B16BITMAP32_SEL_BIT_POS30                      0x0014
    #define   LSb32BITMAP32_SEL_BIT_POS30                         0
    #define   LSb16BITMAP32_SEL_BIT_POS30                         0
    #define       bBITMAP32_SEL_BIT_POS30                      5
    #define   MSK32BITMAP32_SEL_BIT_POS30                         0x0000001F

    #define     BA_BITMAP32_SEL_BIT_POS31                      0x0014
    #define     B16BITMAP32_SEL_BIT_POS31                      0x0014
    #define   LSb32BITMAP32_SEL_BIT_POS31                         5
    #define   LSb16BITMAP32_SEL_BIT_POS31                         5
    #define       bBITMAP32_SEL_BIT_POS31                      5
    #define   MSK32BITMAP32_SEL_BIT_POS31                         0x000003E0
    ///////////////////////////////////////////////////////////

    typedef struct SIE_BITMAP32 {
    ///////////////////////////////////////////////////////////
    #define   GET32BITMAP32_SEL_BIT_POS0(r32)                  _BFGET_(r32, 4, 0)
    #define   SET32BITMAP32_SEL_BIT_POS0(r32,v)                _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP32_SEL_BIT_POS0(r16)                  _BFGET_(r16, 4, 0)
    #define   SET16BITMAP32_SEL_BIT_POS0(r16,v)                _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP32_SEL_BIT_POS1(r32)                  _BFGET_(r32, 9, 5)
    #define   SET32BITMAP32_SEL_BIT_POS1(r32,v)                _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP32_SEL_BIT_POS1(r16)                  _BFGET_(r16, 9, 5)
    #define   SET16BITMAP32_SEL_BIT_POS1(r16,v)                _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP32_SEL_BIT_POS2(r32)                  _BFGET_(r32,14,10)
    #define   SET32BITMAP32_SEL_BIT_POS2(r32,v)                _BFSET_(r32,14,10,v)
    #define   GET16BITMAP32_SEL_BIT_POS2(r16)                  _BFGET_(r16,14,10)
    #define   SET16BITMAP32_SEL_BIT_POS2(r16,v)                _BFSET_(r16,14,10,v)

    #define   GET32BITMAP32_SEL_BIT_POS3(r32)                  _BFGET_(r32,19,15)
    #define   SET32BITMAP32_SEL_BIT_POS3(r32,v)                _BFSET_(r32,19,15,v)

    #define   GET32BITMAP32_SEL_BIT_POS4(r32)                  _BFGET_(r32,24,20)
    #define   SET32BITMAP32_SEL_BIT_POS4(r32,v)                _BFSET_(r32,24,20,v)
    #define   GET16BITMAP32_SEL_BIT_POS4(r16)                  _BFGET_(r16, 8, 4)
    #define   SET16BITMAP32_SEL_BIT_POS4(r16,v)                _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP32_SEL_BIT_POS5(r32)                  _BFGET_(r32,29,25)
    #define   SET32BITMAP32_SEL_BIT_POS5(r32,v)                _BFSET_(r32,29,25,v)
    #define   GET16BITMAP32_SEL_BIT_POS5(r16)                  _BFGET_(r16,13, 9)
    #define   SET16BITMAP32_SEL_BIT_POS5(r16,v)                _BFSET_(r16,13, 9,v)

    #define     w32BITMAP32_SEL                                {\
            UNSG32 uSEL_BIT_POS0                               :  5;\
            UNSG32 uSEL_BIT_POS1                               :  5;\
            UNSG32 uSEL_BIT_POS2                               :  5;\
            UNSG32 uSEL_BIT_POS3                               :  5;\
            UNSG32 uSEL_BIT_POS4                               :  5;\
            UNSG32 uSEL_BIT_POS5                               :  5;\
            UNSG32 RSVDx0_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP32_SEL;
            struct w32BITMAP32_SEL;
          };
    #define   GET32BITMAP32_SEL_BIT_POS6(r32)                  _BFGET_(r32, 4, 0)
    #define   SET32BITMAP32_SEL_BIT_POS6(r32,v)                _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP32_SEL_BIT_POS6(r16)                  _BFGET_(r16, 4, 0)
    #define   SET16BITMAP32_SEL_BIT_POS6(r16,v)                _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP32_SEL_BIT_POS7(r32)                  _BFGET_(r32, 9, 5)
    #define   SET32BITMAP32_SEL_BIT_POS7(r32,v)                _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP32_SEL_BIT_POS7(r16)                  _BFGET_(r16, 9, 5)
    #define   SET16BITMAP32_SEL_BIT_POS7(r16,v)                _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP32_SEL_BIT_POS8(r32)                  _BFGET_(r32,14,10)
    #define   SET32BITMAP32_SEL_BIT_POS8(r32,v)                _BFSET_(r32,14,10,v)
    #define   GET16BITMAP32_SEL_BIT_POS8(r16)                  _BFGET_(r16,14,10)
    #define   SET16BITMAP32_SEL_BIT_POS8(r16,v)                _BFSET_(r16,14,10,v)

    #define   GET32BITMAP32_SEL_BIT_POS9(r32)                  _BFGET_(r32,19,15)
    #define   SET32BITMAP32_SEL_BIT_POS9(r32,v)                _BFSET_(r32,19,15,v)

    #define   GET32BITMAP32_SEL_BIT_POS10(r32)                 _BFGET_(r32,24,20)
    #define   SET32BITMAP32_SEL_BIT_POS10(r32,v)               _BFSET_(r32,24,20,v)
    #define   GET16BITMAP32_SEL_BIT_POS10(r16)                 _BFGET_(r16, 8, 4)
    #define   SET16BITMAP32_SEL_BIT_POS10(r16,v)               _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP32_SEL_BIT_POS11(r32)                 _BFGET_(r32,29,25)
    #define   SET32BITMAP32_SEL_BIT_POS11(r32,v)               _BFSET_(r32,29,25,v)
    #define   GET16BITMAP32_SEL_BIT_POS11(r16)                 _BFGET_(r16,13, 9)
    #define   SET16BITMAP32_SEL_BIT_POS11(r16,v)               _BFSET_(r16,13, 9,v)

    #define     w32BITMAP32_SEL1                               {\
            UNSG32 uSEL_BIT_POS6                               :  5;\
            UNSG32 uSEL_BIT_POS7                               :  5;\
            UNSG32 uSEL_BIT_POS8                               :  5;\
            UNSG32 uSEL_BIT_POS9                               :  5;\
            UNSG32 uSEL_BIT_POS10                              :  5;\
            UNSG32 uSEL_BIT_POS11                              :  5;\
            UNSG32 RSVDx4_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP32_SEL1;
            struct w32BITMAP32_SEL1;
          };
    #define   GET32BITMAP32_SEL_BIT_POS12(r32)                 _BFGET_(r32, 4, 0)
    #define   SET32BITMAP32_SEL_BIT_POS12(r32,v)               _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP32_SEL_BIT_POS12(r16)                 _BFGET_(r16, 4, 0)
    #define   SET16BITMAP32_SEL_BIT_POS12(r16,v)               _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP32_SEL_BIT_POS13(r32)                 _BFGET_(r32, 9, 5)
    #define   SET32BITMAP32_SEL_BIT_POS13(r32,v)               _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP32_SEL_BIT_POS13(r16)                 _BFGET_(r16, 9, 5)
    #define   SET16BITMAP32_SEL_BIT_POS13(r16,v)               _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP32_SEL_BIT_POS14(r32)                 _BFGET_(r32,14,10)
    #define   SET32BITMAP32_SEL_BIT_POS14(r32,v)               _BFSET_(r32,14,10,v)
    #define   GET16BITMAP32_SEL_BIT_POS14(r16)                 _BFGET_(r16,14,10)
    #define   SET16BITMAP32_SEL_BIT_POS14(r16,v)               _BFSET_(r16,14,10,v)

    #define   GET32BITMAP32_SEL_BIT_POS15(r32)                 _BFGET_(r32,19,15)
    #define   SET32BITMAP32_SEL_BIT_POS15(r32,v)               _BFSET_(r32,19,15,v)

    #define   GET32BITMAP32_SEL_BIT_POS16(r32)                 _BFGET_(r32,24,20)
    #define   SET32BITMAP32_SEL_BIT_POS16(r32,v)               _BFSET_(r32,24,20,v)
    #define   GET16BITMAP32_SEL_BIT_POS16(r16)                 _BFGET_(r16, 8, 4)
    #define   SET16BITMAP32_SEL_BIT_POS16(r16,v)               _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP32_SEL_BIT_POS17(r32)                 _BFGET_(r32,29,25)
    #define   SET32BITMAP32_SEL_BIT_POS17(r32,v)               _BFSET_(r32,29,25,v)
    #define   GET16BITMAP32_SEL_BIT_POS17(r16)                 _BFGET_(r16,13, 9)
    #define   SET16BITMAP32_SEL_BIT_POS17(r16,v)               _BFSET_(r16,13, 9,v)

    #define     w32BITMAP32_SEL2                               {\
            UNSG32 uSEL_BIT_POS12                              :  5;\
            UNSG32 uSEL_BIT_POS13                              :  5;\
            UNSG32 uSEL_BIT_POS14                              :  5;\
            UNSG32 uSEL_BIT_POS15                              :  5;\
            UNSG32 uSEL_BIT_POS16                              :  5;\
            UNSG32 uSEL_BIT_POS17                              :  5;\
            UNSG32 RSVDx8_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP32_SEL2;
            struct w32BITMAP32_SEL2;
          };
    #define   GET32BITMAP32_SEL_BIT_POS18(r32)                 _BFGET_(r32, 4, 0)
    #define   SET32BITMAP32_SEL_BIT_POS18(r32,v)               _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP32_SEL_BIT_POS18(r16)                 _BFGET_(r16, 4, 0)
    #define   SET16BITMAP32_SEL_BIT_POS18(r16,v)               _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP32_SEL_BIT_POS19(r32)                 _BFGET_(r32, 9, 5)
    #define   SET32BITMAP32_SEL_BIT_POS19(r32,v)               _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP32_SEL_BIT_POS19(r16)                 _BFGET_(r16, 9, 5)
    #define   SET16BITMAP32_SEL_BIT_POS19(r16,v)               _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP32_SEL_BIT_POS20(r32)                 _BFGET_(r32,14,10)
    #define   SET32BITMAP32_SEL_BIT_POS20(r32,v)               _BFSET_(r32,14,10,v)
    #define   GET16BITMAP32_SEL_BIT_POS20(r16)                 _BFGET_(r16,14,10)
    #define   SET16BITMAP32_SEL_BIT_POS20(r16,v)               _BFSET_(r16,14,10,v)

    #define   GET32BITMAP32_SEL_BIT_POS21(r32)                 _BFGET_(r32,19,15)
    #define   SET32BITMAP32_SEL_BIT_POS21(r32,v)               _BFSET_(r32,19,15,v)

    #define   GET32BITMAP32_SEL_BIT_POS22(r32)                 _BFGET_(r32,24,20)
    #define   SET32BITMAP32_SEL_BIT_POS22(r32,v)               _BFSET_(r32,24,20,v)
    #define   GET16BITMAP32_SEL_BIT_POS22(r16)                 _BFGET_(r16, 8, 4)
    #define   SET16BITMAP32_SEL_BIT_POS22(r16,v)               _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP32_SEL_BIT_POS23(r32)                 _BFGET_(r32,29,25)
    #define   SET32BITMAP32_SEL_BIT_POS23(r32,v)               _BFSET_(r32,29,25,v)
    #define   GET16BITMAP32_SEL_BIT_POS23(r16)                 _BFGET_(r16,13, 9)
    #define   SET16BITMAP32_SEL_BIT_POS23(r16,v)               _BFSET_(r16,13, 9,v)

    #define     w32BITMAP32_SEL3                               {\
            UNSG32 uSEL_BIT_POS18                              :  5;\
            UNSG32 uSEL_BIT_POS19                              :  5;\
            UNSG32 uSEL_BIT_POS20                              :  5;\
            UNSG32 uSEL_BIT_POS21                              :  5;\
            UNSG32 uSEL_BIT_POS22                              :  5;\
            UNSG32 uSEL_BIT_POS23                              :  5;\
            UNSG32 RSVDxC_b30                                  :  2;\
          }
    union { UNSG32 u32BITMAP32_SEL3;
            struct w32BITMAP32_SEL3;
          };
    #define   GET32BITMAP32_SEL_BIT_POS24(r32)                 _BFGET_(r32, 4, 0)
    #define   SET32BITMAP32_SEL_BIT_POS24(r32,v)               _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP32_SEL_BIT_POS24(r16)                 _BFGET_(r16, 4, 0)
    #define   SET16BITMAP32_SEL_BIT_POS24(r16,v)               _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP32_SEL_BIT_POS25(r32)                 _BFGET_(r32, 9, 5)
    #define   SET32BITMAP32_SEL_BIT_POS25(r32,v)               _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP32_SEL_BIT_POS25(r16)                 _BFGET_(r16, 9, 5)
    #define   SET16BITMAP32_SEL_BIT_POS25(r16,v)               _BFSET_(r16, 9, 5,v)

    #define   GET32BITMAP32_SEL_BIT_POS26(r32)                 _BFGET_(r32,14,10)
    #define   SET32BITMAP32_SEL_BIT_POS26(r32,v)               _BFSET_(r32,14,10,v)
    #define   GET16BITMAP32_SEL_BIT_POS26(r16)                 _BFGET_(r16,14,10)
    #define   SET16BITMAP32_SEL_BIT_POS26(r16,v)               _BFSET_(r16,14,10,v)

    #define   GET32BITMAP32_SEL_BIT_POS27(r32)                 _BFGET_(r32,19,15)
    #define   SET32BITMAP32_SEL_BIT_POS27(r32,v)               _BFSET_(r32,19,15,v)

    #define   GET32BITMAP32_SEL_BIT_POS28(r32)                 _BFGET_(r32,24,20)
    #define   SET32BITMAP32_SEL_BIT_POS28(r32,v)               _BFSET_(r32,24,20,v)
    #define   GET16BITMAP32_SEL_BIT_POS28(r16)                 _BFGET_(r16, 8, 4)
    #define   SET16BITMAP32_SEL_BIT_POS28(r16,v)               _BFSET_(r16, 8, 4,v)

    #define   GET32BITMAP32_SEL_BIT_POS29(r32)                 _BFGET_(r32,29,25)
    #define   SET32BITMAP32_SEL_BIT_POS29(r32,v)               _BFSET_(r32,29,25,v)
    #define   GET16BITMAP32_SEL_BIT_POS29(r16)                 _BFGET_(r16,13, 9)
    #define   SET16BITMAP32_SEL_BIT_POS29(r16,v)               _BFSET_(r16,13, 9,v)

    #define     w32BITMAP32_SEL4                               {\
            UNSG32 uSEL_BIT_POS24                              :  5;\
            UNSG32 uSEL_BIT_POS25                              :  5;\
            UNSG32 uSEL_BIT_POS26                              :  5;\
            UNSG32 uSEL_BIT_POS27                              :  5;\
            UNSG32 uSEL_BIT_POS28                              :  5;\
            UNSG32 uSEL_BIT_POS29                              :  5;\
            UNSG32 RSVDx10_b30                                 :  2;\
          }
    union { UNSG32 u32BITMAP32_SEL4;
            struct w32BITMAP32_SEL4;
          };
    #define   GET32BITMAP32_SEL_BIT_POS30(r32)                 _BFGET_(r32, 4, 0)
    #define   SET32BITMAP32_SEL_BIT_POS30(r32,v)               _BFSET_(r32, 4, 0,v)
    #define   GET16BITMAP32_SEL_BIT_POS30(r16)                 _BFGET_(r16, 4, 0)
    #define   SET16BITMAP32_SEL_BIT_POS30(r16,v)               _BFSET_(r16, 4, 0,v)

    #define   GET32BITMAP32_SEL_BIT_POS31(r32)                 _BFGET_(r32, 9, 5)
    #define   SET32BITMAP32_SEL_BIT_POS31(r32,v)               _BFSET_(r32, 9, 5,v)
    #define   GET16BITMAP32_SEL_BIT_POS31(r16)                 _BFGET_(r16, 9, 5)
    #define   SET16BITMAP32_SEL_BIT_POS31(r16,v)               _BFSET_(r16, 9, 5,v)

    #define     w32BITMAP32_SEL5                               {\
            UNSG32 uSEL_BIT_POS30                              :  5;\
            UNSG32 uSEL_BIT_POS31                              :  5;\
            UNSG32 RSVDx14_b10                                 : 22;\
          }
    union { UNSG32 u32BITMAP32_SEL5;
            struct w32BITMAP32_SEL5;
          };
    ///////////////////////////////////////////////////////////
    } SIE_BITMAP32;

    typedef union  T32BITMAP32_SEL
          { UNSG32 u32;
            struct w32BITMAP32_SEL;
                 } T32BITMAP32_SEL;
    typedef union  T32BITMAP32_SEL1
          { UNSG32 u32;
            struct w32BITMAP32_SEL1;
                 } T32BITMAP32_SEL1;
    typedef union  T32BITMAP32_SEL2
          { UNSG32 u32;
            struct w32BITMAP32_SEL2;
                 } T32BITMAP32_SEL2;
    typedef union  T32BITMAP32_SEL3
          { UNSG32 u32;
            struct w32BITMAP32_SEL3;
                 } T32BITMAP32_SEL3;
    typedef union  T32BITMAP32_SEL4
          { UNSG32 u32;
            struct w32BITMAP32_SEL4;
                 } T32BITMAP32_SEL4;
    typedef union  T32BITMAP32_SEL5
          { UNSG32 u32;
            struct w32BITMAP32_SEL5;
                 } T32BITMAP32_SEL5;
    ///////////////////////////////////////////////////////////

    typedef union  TBITMAP32_SEL
          { UNSG32 u32[6];
            struct {
            struct w32BITMAP32_SEL;
            struct w32BITMAP32_SEL1;
            struct w32BITMAP32_SEL2;
            struct w32BITMAP32_SEL3;
            struct w32BITMAP32_SEL4;
            struct w32BITMAP32_SEL5;
                   };
                 } TBITMAP32_SEL;

    ///////////////////////////////////////////////////////////
     SIGN32 BITMAP32_drvrd(SIE_BITMAP32 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 BITMAP32_drvwr(SIE_BITMAP32 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void BITMAP32_reset(SIE_BITMAP32 *p);
     SIGN32 BITMAP32_cmp  (SIE_BITMAP32 *p, SIE_BITMAP32 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define BITMAP32_check(p,pie,pfx,hLOG) BITMAP32_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define BITMAP32_print(p,    pfx,hLOG) BITMAP32_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: BITMAP32
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BITMAP16                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SEL                  (P)
///               %unsigned 4  BIT_POS0                  0x0
///               %unsigned 4  BIT_POS1                  0x1
///               %unsigned 4  BIT_POS2                  0x2
///               %unsigned 4  BIT_POS3                  0x3
///               %unsigned 4  BIT_POS4                  0x4
///               %unsigned 4  BIT_POS5                  0x5
///               %unsigned 4  BIT_POS6                  0x6
///               %unsigned 4  BIT_POS7                  0x7
///     # 0x00004 SEL1                 
///               %unsigned 4  BIT_POS8                  0x8
///               %unsigned 4  BIT_POS9                  0x9
///               %unsigned 4  BIT_POS10                 0xA
///               %unsigned 4  BIT_POS11                 0xB
///               %unsigned 4  BIT_POS12                 0xC
///               %unsigned 4  BIT_POS13                 0xD
///               %unsigned 4  BIT_POS14                 0xE
///               %unsigned 4  BIT_POS15                 0xF
///                                    ###
///                                    * Specifies mapping of new bit locations within 16 bit data from Read Client which need to be used to form pixels for Inverse Scan mode.
///                                    * Normal dHub data order:
///                                    * {Y3,Cr2,Y2,Cb2,Y1,Cr0,Y0,Cb0} First pixel in LSB
///                                    * Inverse Scan dHub data order:
///                                    * {Y3,Cr2,Y2,Cb2,Y1,Cr0,Y0,Cb0} First pixel in MSB
///                                    * Following different data orders can be generated to be presented to first UPS in the pipe.
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:      64b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_BITMAP16
#define h_BITMAP16 (){}

    #define     RA_BITMAP16_SEL                                0x0000

    #define     BA_BITMAP16_SEL_BIT_POS0                       0x0000
    #define     B16BITMAP16_SEL_BIT_POS0                       0x0000
    #define   LSb32BITMAP16_SEL_BIT_POS0                          0
    #define   LSb16BITMAP16_SEL_BIT_POS0                          0
    #define       bBITMAP16_SEL_BIT_POS0                       4
    #define   MSK32BITMAP16_SEL_BIT_POS0                          0x0000000F

    #define     BA_BITMAP16_SEL_BIT_POS1                       0x0000
    #define     B16BITMAP16_SEL_BIT_POS1                       0x0000
    #define   LSb32BITMAP16_SEL_BIT_POS1                          4
    #define   LSb16BITMAP16_SEL_BIT_POS1                          4
    #define       bBITMAP16_SEL_BIT_POS1                       4
    #define   MSK32BITMAP16_SEL_BIT_POS1                          0x000000F0

    #define     BA_BITMAP16_SEL_BIT_POS2                       0x0001
    #define     B16BITMAP16_SEL_BIT_POS2                       0x0000
    #define   LSb32BITMAP16_SEL_BIT_POS2                          8
    #define   LSb16BITMAP16_SEL_BIT_POS2                          8
    #define       bBITMAP16_SEL_BIT_POS2                       4
    #define   MSK32BITMAP16_SEL_BIT_POS2                          0x00000F00

    #define     BA_BITMAP16_SEL_BIT_POS3                       0x0001
    #define     B16BITMAP16_SEL_BIT_POS3                       0x0000
    #define   LSb32BITMAP16_SEL_BIT_POS3                          12
    #define   LSb16BITMAP16_SEL_BIT_POS3                          12
    #define       bBITMAP16_SEL_BIT_POS3                       4
    #define   MSK32BITMAP16_SEL_BIT_POS3                          0x0000F000

    #define     BA_BITMAP16_SEL_BIT_POS4                       0x0002
    #define     B16BITMAP16_SEL_BIT_POS4                       0x0002
    #define   LSb32BITMAP16_SEL_BIT_POS4                          16
    #define   LSb16BITMAP16_SEL_BIT_POS4                          0
    #define       bBITMAP16_SEL_BIT_POS4                       4
    #define   MSK32BITMAP16_SEL_BIT_POS4                          0x000F0000

    #define     BA_BITMAP16_SEL_BIT_POS5                       0x0002
    #define     B16BITMAP16_SEL_BIT_POS5                       0x0002
    #define   LSb32BITMAP16_SEL_BIT_POS5                          20
    #define   LSb16BITMAP16_SEL_BIT_POS5                          4
    #define       bBITMAP16_SEL_BIT_POS5                       4
    #define   MSK32BITMAP16_SEL_BIT_POS5                          0x00F00000

    #define     BA_BITMAP16_SEL_BIT_POS6                       0x0003
    #define     B16BITMAP16_SEL_BIT_POS6                       0x0002
    #define   LSb32BITMAP16_SEL_BIT_POS6                          24
    #define   LSb16BITMAP16_SEL_BIT_POS6                          8
    #define       bBITMAP16_SEL_BIT_POS6                       4
    #define   MSK32BITMAP16_SEL_BIT_POS6                          0x0F000000

    #define     BA_BITMAP16_SEL_BIT_POS7                       0x0003
    #define     B16BITMAP16_SEL_BIT_POS7                       0x0002
    #define   LSb32BITMAP16_SEL_BIT_POS7                          28
    #define   LSb16BITMAP16_SEL_BIT_POS7                          12
    #define       bBITMAP16_SEL_BIT_POS7                       4
    #define   MSK32BITMAP16_SEL_BIT_POS7                          0xF0000000

    #define     RA_BITMAP16_SEL1                               0x0004

    #define     BA_BITMAP16_SEL_BIT_POS8                       0x0004
    #define     B16BITMAP16_SEL_BIT_POS8                       0x0004
    #define   LSb32BITMAP16_SEL_BIT_POS8                          0
    #define   LSb16BITMAP16_SEL_BIT_POS8                          0
    #define       bBITMAP16_SEL_BIT_POS8                       4
    #define   MSK32BITMAP16_SEL_BIT_POS8                          0x0000000F

    #define     BA_BITMAP16_SEL_BIT_POS9                       0x0004
    #define     B16BITMAP16_SEL_BIT_POS9                       0x0004
    #define   LSb32BITMAP16_SEL_BIT_POS9                          4
    #define   LSb16BITMAP16_SEL_BIT_POS9                          4
    #define       bBITMAP16_SEL_BIT_POS9                       4
    #define   MSK32BITMAP16_SEL_BIT_POS9                          0x000000F0

    #define     BA_BITMAP16_SEL_BIT_POS10                      0x0005
    #define     B16BITMAP16_SEL_BIT_POS10                      0x0004
    #define   LSb32BITMAP16_SEL_BIT_POS10                         8
    #define   LSb16BITMAP16_SEL_BIT_POS10                         8
    #define       bBITMAP16_SEL_BIT_POS10                      4
    #define   MSK32BITMAP16_SEL_BIT_POS10                         0x00000F00

    #define     BA_BITMAP16_SEL_BIT_POS11                      0x0005
    #define     B16BITMAP16_SEL_BIT_POS11                      0x0004
    #define   LSb32BITMAP16_SEL_BIT_POS11                         12
    #define   LSb16BITMAP16_SEL_BIT_POS11                         12
    #define       bBITMAP16_SEL_BIT_POS11                      4
    #define   MSK32BITMAP16_SEL_BIT_POS11                         0x0000F000

    #define     BA_BITMAP16_SEL_BIT_POS12                      0x0006
    #define     B16BITMAP16_SEL_BIT_POS12                      0x0006
    #define   LSb32BITMAP16_SEL_BIT_POS12                         16
    #define   LSb16BITMAP16_SEL_BIT_POS12                         0
    #define       bBITMAP16_SEL_BIT_POS12                      4
    #define   MSK32BITMAP16_SEL_BIT_POS12                         0x000F0000

    #define     BA_BITMAP16_SEL_BIT_POS13                      0x0006
    #define     B16BITMAP16_SEL_BIT_POS13                      0x0006
    #define   LSb32BITMAP16_SEL_BIT_POS13                         20
    #define   LSb16BITMAP16_SEL_BIT_POS13                         4
    #define       bBITMAP16_SEL_BIT_POS13                      4
    #define   MSK32BITMAP16_SEL_BIT_POS13                         0x00F00000

    #define     BA_BITMAP16_SEL_BIT_POS14                      0x0007
    #define     B16BITMAP16_SEL_BIT_POS14                      0x0006
    #define   LSb32BITMAP16_SEL_BIT_POS14                         24
    #define   LSb16BITMAP16_SEL_BIT_POS14                         8
    #define       bBITMAP16_SEL_BIT_POS14                      4
    #define   MSK32BITMAP16_SEL_BIT_POS14                         0x0F000000

    #define     BA_BITMAP16_SEL_BIT_POS15                      0x0007
    #define     B16BITMAP16_SEL_BIT_POS15                      0x0006
    #define   LSb32BITMAP16_SEL_BIT_POS15                         28
    #define   LSb16BITMAP16_SEL_BIT_POS15                         12
    #define       bBITMAP16_SEL_BIT_POS15                      4
    #define   MSK32BITMAP16_SEL_BIT_POS15                         0xF0000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_BITMAP16 {
    ///////////////////////////////////////////////////////////
    #define   GET32BITMAP16_SEL_BIT_POS0(r32)                  _BFGET_(r32, 3, 0)
    #define   SET32BITMAP16_SEL_BIT_POS0(r32,v)                _BFSET_(r32, 3, 0,v)
    #define   GET16BITMAP16_SEL_BIT_POS0(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16BITMAP16_SEL_BIT_POS0(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32BITMAP16_SEL_BIT_POS1(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32BITMAP16_SEL_BIT_POS1(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16BITMAP16_SEL_BIT_POS1(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16BITMAP16_SEL_BIT_POS1(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32BITMAP16_SEL_BIT_POS2(r32)                  _BFGET_(r32,11, 8)
    #define   SET32BITMAP16_SEL_BIT_POS2(r32,v)                _BFSET_(r32,11, 8,v)
    #define   GET16BITMAP16_SEL_BIT_POS2(r16)                  _BFGET_(r16,11, 8)
    #define   SET16BITMAP16_SEL_BIT_POS2(r16,v)                _BFSET_(r16,11, 8,v)

    #define   GET32BITMAP16_SEL_BIT_POS3(r32)                  _BFGET_(r32,15,12)
    #define   SET32BITMAP16_SEL_BIT_POS3(r32,v)                _BFSET_(r32,15,12,v)
    #define   GET16BITMAP16_SEL_BIT_POS3(r16)                  _BFGET_(r16,15,12)
    #define   SET16BITMAP16_SEL_BIT_POS3(r16,v)                _BFSET_(r16,15,12,v)

    #define   GET32BITMAP16_SEL_BIT_POS4(r32)                  _BFGET_(r32,19,16)
    #define   SET32BITMAP16_SEL_BIT_POS4(r32,v)                _BFSET_(r32,19,16,v)
    #define   GET16BITMAP16_SEL_BIT_POS4(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16BITMAP16_SEL_BIT_POS4(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32BITMAP16_SEL_BIT_POS5(r32)                  _BFGET_(r32,23,20)
    #define   SET32BITMAP16_SEL_BIT_POS5(r32,v)                _BFSET_(r32,23,20,v)
    #define   GET16BITMAP16_SEL_BIT_POS5(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16BITMAP16_SEL_BIT_POS5(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32BITMAP16_SEL_BIT_POS6(r32)                  _BFGET_(r32,27,24)
    #define   SET32BITMAP16_SEL_BIT_POS6(r32,v)                _BFSET_(r32,27,24,v)
    #define   GET16BITMAP16_SEL_BIT_POS6(r16)                  _BFGET_(r16,11, 8)
    #define   SET16BITMAP16_SEL_BIT_POS6(r16,v)                _BFSET_(r16,11, 8,v)

    #define   GET32BITMAP16_SEL_BIT_POS7(r32)                  _BFGET_(r32,31,28)
    #define   SET32BITMAP16_SEL_BIT_POS7(r32,v)                _BFSET_(r32,31,28,v)
    #define   GET16BITMAP16_SEL_BIT_POS7(r16)                  _BFGET_(r16,15,12)
    #define   SET16BITMAP16_SEL_BIT_POS7(r16,v)                _BFSET_(r16,15,12,v)

    #define     w32BITMAP16_SEL                                {\
            UNSG32 uSEL_BIT_POS0                               :  4;\
            UNSG32 uSEL_BIT_POS1                               :  4;\
            UNSG32 uSEL_BIT_POS2                               :  4;\
            UNSG32 uSEL_BIT_POS3                               :  4;\
            UNSG32 uSEL_BIT_POS4                               :  4;\
            UNSG32 uSEL_BIT_POS5                               :  4;\
            UNSG32 uSEL_BIT_POS6                               :  4;\
            UNSG32 uSEL_BIT_POS7                               :  4;\
          }
    union { UNSG32 u32BITMAP16_SEL;
            struct w32BITMAP16_SEL;
          };
    #define   GET32BITMAP16_SEL_BIT_POS8(r32)                  _BFGET_(r32, 3, 0)
    #define   SET32BITMAP16_SEL_BIT_POS8(r32,v)                _BFSET_(r32, 3, 0,v)
    #define   GET16BITMAP16_SEL_BIT_POS8(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16BITMAP16_SEL_BIT_POS8(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32BITMAP16_SEL_BIT_POS9(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32BITMAP16_SEL_BIT_POS9(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16BITMAP16_SEL_BIT_POS9(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16BITMAP16_SEL_BIT_POS9(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32BITMAP16_SEL_BIT_POS10(r32)                 _BFGET_(r32,11, 8)
    #define   SET32BITMAP16_SEL_BIT_POS10(r32,v)               _BFSET_(r32,11, 8,v)
    #define   GET16BITMAP16_SEL_BIT_POS10(r16)                 _BFGET_(r16,11, 8)
    #define   SET16BITMAP16_SEL_BIT_POS10(r16,v)               _BFSET_(r16,11, 8,v)

    #define   GET32BITMAP16_SEL_BIT_POS11(r32)                 _BFGET_(r32,15,12)
    #define   SET32BITMAP16_SEL_BIT_POS11(r32,v)               _BFSET_(r32,15,12,v)
    #define   GET16BITMAP16_SEL_BIT_POS11(r16)                 _BFGET_(r16,15,12)
    #define   SET16BITMAP16_SEL_BIT_POS11(r16,v)               _BFSET_(r16,15,12,v)

    #define   GET32BITMAP16_SEL_BIT_POS12(r32)                 _BFGET_(r32,19,16)
    #define   SET32BITMAP16_SEL_BIT_POS12(r32,v)               _BFSET_(r32,19,16,v)
    #define   GET16BITMAP16_SEL_BIT_POS12(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16BITMAP16_SEL_BIT_POS12(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32BITMAP16_SEL_BIT_POS13(r32)                 _BFGET_(r32,23,20)
    #define   SET32BITMAP16_SEL_BIT_POS13(r32,v)               _BFSET_(r32,23,20,v)
    #define   GET16BITMAP16_SEL_BIT_POS13(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16BITMAP16_SEL_BIT_POS13(r16,v)               _BFSET_(r16, 7, 4,v)

    #define   GET32BITMAP16_SEL_BIT_POS14(r32)                 _BFGET_(r32,27,24)
    #define   SET32BITMAP16_SEL_BIT_POS14(r32,v)               _BFSET_(r32,27,24,v)
    #define   GET16BITMAP16_SEL_BIT_POS14(r16)                 _BFGET_(r16,11, 8)
    #define   SET16BITMAP16_SEL_BIT_POS14(r16,v)               _BFSET_(r16,11, 8,v)

    #define   GET32BITMAP16_SEL_BIT_POS15(r32)                 _BFGET_(r32,31,28)
    #define   SET32BITMAP16_SEL_BIT_POS15(r32,v)               _BFSET_(r32,31,28,v)
    #define   GET16BITMAP16_SEL_BIT_POS15(r16)                 _BFGET_(r16,15,12)
    #define   SET16BITMAP16_SEL_BIT_POS15(r16,v)               _BFSET_(r16,15,12,v)

    #define     w32BITMAP16_SEL1                               {\
            UNSG32 uSEL_BIT_POS8                               :  4;\
            UNSG32 uSEL_BIT_POS9                               :  4;\
            UNSG32 uSEL_BIT_POS10                              :  4;\
            UNSG32 uSEL_BIT_POS11                              :  4;\
            UNSG32 uSEL_BIT_POS12                              :  4;\
            UNSG32 uSEL_BIT_POS13                              :  4;\
            UNSG32 uSEL_BIT_POS14                              :  4;\
            UNSG32 uSEL_BIT_POS15                              :  4;\
          }
    union { UNSG32 u32BITMAP16_SEL1;
            struct w32BITMAP16_SEL1;
          };
    ///////////////////////////////////////////////////////////
    } SIE_BITMAP16;

    typedef union  T32BITMAP16_SEL
          { UNSG32 u32;
            struct w32BITMAP16_SEL;
                 } T32BITMAP16_SEL;
    typedef union  T32BITMAP16_SEL1
          { UNSG32 u32;
            struct w32BITMAP16_SEL1;
                 } T32BITMAP16_SEL1;
    ///////////////////////////////////////////////////////////

    typedef union  TBITMAP16_SEL
          { UNSG32 u32[2];
            struct {
            struct w32BITMAP16_SEL;
            struct w32BITMAP16_SEL1;
                   };
                 } TBITMAP16_SEL;

    ///////////////////////////////////////////////////////////
     SIGN32 BITMAP16_drvrd(SIE_BITMAP16 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 BITMAP16_drvwr(SIE_BITMAP16 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void BITMAP16_reset(SIE_BITMAP16 *p);
     SIGN32 BITMAP16_cmp  (SIE_BITMAP16 *p, SIE_BITMAP16 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define BITMAP16_check(p,pie,pfx,hLOG) BITMAP16_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define BITMAP16_print(p,    pfx,hLOG) BITMAP16_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: BITMAP16
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BITMAP12                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SEL                  (P)
///               %unsigned 4  BIT_POS0                  0x0
///               %unsigned 4  BIT_POS1                  0x1
///               %unsigned 4  BIT_POS2                  0x2
///               %unsigned 4  BIT_POS3                  0x3
///               %unsigned 4  BIT_POS4                  0x4
///               %unsigned 4  BIT_POS5                  0x5
///               %unsigned 4  BIT_POS6                  0x6
///               %unsigned 4  BIT_POS7                  0x7
///     # 0x00004 SEL1                 
///               %unsigned 4  BIT_POS8                  0x8
///               %unsigned 4  BIT_POS9                  0x9
///               %unsigned 4  BIT_POS10                 0xA
///               %unsigned 4  BIT_POS11                 0xB
///                                    ###
///                                    * Specifies mapping of new bit locations within 12 bit data from Read Client which need to be used to form pixels for Inverse Scan mode.
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:      48b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_BITMAP12
#define h_BITMAP12 (){}

    #define     RA_BITMAP12_SEL                                0x0000

    #define     BA_BITMAP12_SEL_BIT_POS0                       0x0000
    #define     B16BITMAP12_SEL_BIT_POS0                       0x0000
    #define   LSb32BITMAP12_SEL_BIT_POS0                          0
    #define   LSb16BITMAP12_SEL_BIT_POS0                          0
    #define       bBITMAP12_SEL_BIT_POS0                       4
    #define   MSK32BITMAP12_SEL_BIT_POS0                          0x0000000F

    #define     BA_BITMAP12_SEL_BIT_POS1                       0x0000
    #define     B16BITMAP12_SEL_BIT_POS1                       0x0000
    #define   LSb32BITMAP12_SEL_BIT_POS1                          4
    #define   LSb16BITMAP12_SEL_BIT_POS1                          4
    #define       bBITMAP12_SEL_BIT_POS1                       4
    #define   MSK32BITMAP12_SEL_BIT_POS1                          0x000000F0

    #define     BA_BITMAP12_SEL_BIT_POS2                       0x0001
    #define     B16BITMAP12_SEL_BIT_POS2                       0x0000
    #define   LSb32BITMAP12_SEL_BIT_POS2                          8
    #define   LSb16BITMAP12_SEL_BIT_POS2                          8
    #define       bBITMAP12_SEL_BIT_POS2                       4
    #define   MSK32BITMAP12_SEL_BIT_POS2                          0x00000F00

    #define     BA_BITMAP12_SEL_BIT_POS3                       0x0001
    #define     B16BITMAP12_SEL_BIT_POS3                       0x0000
    #define   LSb32BITMAP12_SEL_BIT_POS3                          12
    #define   LSb16BITMAP12_SEL_BIT_POS3                          12
    #define       bBITMAP12_SEL_BIT_POS3                       4
    #define   MSK32BITMAP12_SEL_BIT_POS3                          0x0000F000

    #define     BA_BITMAP12_SEL_BIT_POS4                       0x0002
    #define     B16BITMAP12_SEL_BIT_POS4                       0x0002
    #define   LSb32BITMAP12_SEL_BIT_POS4                          16
    #define   LSb16BITMAP12_SEL_BIT_POS4                          0
    #define       bBITMAP12_SEL_BIT_POS4                       4
    #define   MSK32BITMAP12_SEL_BIT_POS4                          0x000F0000

    #define     BA_BITMAP12_SEL_BIT_POS5                       0x0002
    #define     B16BITMAP12_SEL_BIT_POS5                       0x0002
    #define   LSb32BITMAP12_SEL_BIT_POS5                          20
    #define   LSb16BITMAP12_SEL_BIT_POS5                          4
    #define       bBITMAP12_SEL_BIT_POS5                       4
    #define   MSK32BITMAP12_SEL_BIT_POS5                          0x00F00000

    #define     BA_BITMAP12_SEL_BIT_POS6                       0x0003
    #define     B16BITMAP12_SEL_BIT_POS6                       0x0002
    #define   LSb32BITMAP12_SEL_BIT_POS6                          24
    #define   LSb16BITMAP12_SEL_BIT_POS6                          8
    #define       bBITMAP12_SEL_BIT_POS6                       4
    #define   MSK32BITMAP12_SEL_BIT_POS6                          0x0F000000

    #define     BA_BITMAP12_SEL_BIT_POS7                       0x0003
    #define     B16BITMAP12_SEL_BIT_POS7                       0x0002
    #define   LSb32BITMAP12_SEL_BIT_POS7                          28
    #define   LSb16BITMAP12_SEL_BIT_POS7                          12
    #define       bBITMAP12_SEL_BIT_POS7                       4
    #define   MSK32BITMAP12_SEL_BIT_POS7                          0xF0000000

    #define     RA_BITMAP12_SEL1                               0x0004

    #define     BA_BITMAP12_SEL_BIT_POS8                       0x0004
    #define     B16BITMAP12_SEL_BIT_POS8                       0x0004
    #define   LSb32BITMAP12_SEL_BIT_POS8                          0
    #define   LSb16BITMAP12_SEL_BIT_POS8                          0
    #define       bBITMAP12_SEL_BIT_POS8                       4
    #define   MSK32BITMAP12_SEL_BIT_POS8                          0x0000000F

    #define     BA_BITMAP12_SEL_BIT_POS9                       0x0004
    #define     B16BITMAP12_SEL_BIT_POS9                       0x0004
    #define   LSb32BITMAP12_SEL_BIT_POS9                          4
    #define   LSb16BITMAP12_SEL_BIT_POS9                          4
    #define       bBITMAP12_SEL_BIT_POS9                       4
    #define   MSK32BITMAP12_SEL_BIT_POS9                          0x000000F0

    #define     BA_BITMAP12_SEL_BIT_POS10                      0x0005
    #define     B16BITMAP12_SEL_BIT_POS10                      0x0004
    #define   LSb32BITMAP12_SEL_BIT_POS10                         8
    #define   LSb16BITMAP12_SEL_BIT_POS10                         8
    #define       bBITMAP12_SEL_BIT_POS10                      4
    #define   MSK32BITMAP12_SEL_BIT_POS10                         0x00000F00

    #define     BA_BITMAP12_SEL_BIT_POS11                      0x0005
    #define     B16BITMAP12_SEL_BIT_POS11                      0x0004
    #define   LSb32BITMAP12_SEL_BIT_POS11                         12
    #define   LSb16BITMAP12_SEL_BIT_POS11                         12
    #define       bBITMAP12_SEL_BIT_POS11                      4
    #define   MSK32BITMAP12_SEL_BIT_POS11                         0x0000F000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_BITMAP12 {
    ///////////////////////////////////////////////////////////
    #define   GET32BITMAP12_SEL_BIT_POS0(r32)                  _BFGET_(r32, 3, 0)
    #define   SET32BITMAP12_SEL_BIT_POS0(r32,v)                _BFSET_(r32, 3, 0,v)
    #define   GET16BITMAP12_SEL_BIT_POS0(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16BITMAP12_SEL_BIT_POS0(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32BITMAP12_SEL_BIT_POS1(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32BITMAP12_SEL_BIT_POS1(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16BITMAP12_SEL_BIT_POS1(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16BITMAP12_SEL_BIT_POS1(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32BITMAP12_SEL_BIT_POS2(r32)                  _BFGET_(r32,11, 8)
    #define   SET32BITMAP12_SEL_BIT_POS2(r32,v)                _BFSET_(r32,11, 8,v)
    #define   GET16BITMAP12_SEL_BIT_POS2(r16)                  _BFGET_(r16,11, 8)
    #define   SET16BITMAP12_SEL_BIT_POS2(r16,v)                _BFSET_(r16,11, 8,v)

    #define   GET32BITMAP12_SEL_BIT_POS3(r32)                  _BFGET_(r32,15,12)
    #define   SET32BITMAP12_SEL_BIT_POS3(r32,v)                _BFSET_(r32,15,12,v)
    #define   GET16BITMAP12_SEL_BIT_POS3(r16)                  _BFGET_(r16,15,12)
    #define   SET16BITMAP12_SEL_BIT_POS3(r16,v)                _BFSET_(r16,15,12,v)

    #define   GET32BITMAP12_SEL_BIT_POS4(r32)                  _BFGET_(r32,19,16)
    #define   SET32BITMAP12_SEL_BIT_POS4(r32,v)                _BFSET_(r32,19,16,v)
    #define   GET16BITMAP12_SEL_BIT_POS4(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16BITMAP12_SEL_BIT_POS4(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32BITMAP12_SEL_BIT_POS5(r32)                  _BFGET_(r32,23,20)
    #define   SET32BITMAP12_SEL_BIT_POS5(r32,v)                _BFSET_(r32,23,20,v)
    #define   GET16BITMAP12_SEL_BIT_POS5(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16BITMAP12_SEL_BIT_POS5(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32BITMAP12_SEL_BIT_POS6(r32)                  _BFGET_(r32,27,24)
    #define   SET32BITMAP12_SEL_BIT_POS6(r32,v)                _BFSET_(r32,27,24,v)
    #define   GET16BITMAP12_SEL_BIT_POS6(r16)                  _BFGET_(r16,11, 8)
    #define   SET16BITMAP12_SEL_BIT_POS6(r16,v)                _BFSET_(r16,11, 8,v)

    #define   GET32BITMAP12_SEL_BIT_POS7(r32)                  _BFGET_(r32,31,28)
    #define   SET32BITMAP12_SEL_BIT_POS7(r32,v)                _BFSET_(r32,31,28,v)
    #define   GET16BITMAP12_SEL_BIT_POS7(r16)                  _BFGET_(r16,15,12)
    #define   SET16BITMAP12_SEL_BIT_POS7(r16,v)                _BFSET_(r16,15,12,v)

    #define     w32BITMAP12_SEL                                {\
            UNSG32 uSEL_BIT_POS0                               :  4;\
            UNSG32 uSEL_BIT_POS1                               :  4;\
            UNSG32 uSEL_BIT_POS2                               :  4;\
            UNSG32 uSEL_BIT_POS3                               :  4;\
            UNSG32 uSEL_BIT_POS4                               :  4;\
            UNSG32 uSEL_BIT_POS5                               :  4;\
            UNSG32 uSEL_BIT_POS6                               :  4;\
            UNSG32 uSEL_BIT_POS7                               :  4;\
          }
    union { UNSG32 u32BITMAP12_SEL;
            struct w32BITMAP12_SEL;
          };
    #define   GET32BITMAP12_SEL_BIT_POS8(r32)                  _BFGET_(r32, 3, 0)
    #define   SET32BITMAP12_SEL_BIT_POS8(r32,v)                _BFSET_(r32, 3, 0,v)
    #define   GET16BITMAP12_SEL_BIT_POS8(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16BITMAP12_SEL_BIT_POS8(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32BITMAP12_SEL_BIT_POS9(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32BITMAP12_SEL_BIT_POS9(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16BITMAP12_SEL_BIT_POS9(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16BITMAP12_SEL_BIT_POS9(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32BITMAP12_SEL_BIT_POS10(r32)                 _BFGET_(r32,11, 8)
    #define   SET32BITMAP12_SEL_BIT_POS10(r32,v)               _BFSET_(r32,11, 8,v)
    #define   GET16BITMAP12_SEL_BIT_POS10(r16)                 _BFGET_(r16,11, 8)
    #define   SET16BITMAP12_SEL_BIT_POS10(r16,v)               _BFSET_(r16,11, 8,v)

    #define   GET32BITMAP12_SEL_BIT_POS11(r32)                 _BFGET_(r32,15,12)
    #define   SET32BITMAP12_SEL_BIT_POS11(r32,v)               _BFSET_(r32,15,12,v)
    #define   GET16BITMAP12_SEL_BIT_POS11(r16)                 _BFGET_(r16,15,12)
    #define   SET16BITMAP12_SEL_BIT_POS11(r16,v)               _BFSET_(r16,15,12,v)

    #define     w32BITMAP12_SEL1                               {\
            UNSG32 uSEL_BIT_POS8                               :  4;\
            UNSG32 uSEL_BIT_POS9                               :  4;\
            UNSG32 uSEL_BIT_POS10                              :  4;\
            UNSG32 uSEL_BIT_POS11                              :  4;\
            UNSG32 RSVDx4_b16                                  : 16;\
          }
    union { UNSG32 u32BITMAP12_SEL1;
            struct w32BITMAP12_SEL1;
          };
    ///////////////////////////////////////////////////////////
    } SIE_BITMAP12;

    typedef union  T32BITMAP12_SEL
          { UNSG32 u32;
            struct w32BITMAP12_SEL;
                 } T32BITMAP12_SEL;
    typedef union  T32BITMAP12_SEL1
          { UNSG32 u32;
            struct w32BITMAP12_SEL1;
                 } T32BITMAP12_SEL1;
    ///////////////////////////////////////////////////////////

    typedef union  TBITMAP12_SEL
          { UNSG32 u32[2];
            struct {
            struct w32BITMAP12_SEL;
            struct w32BITMAP12_SEL1;
                   };
                 } TBITMAP12_SEL;

    ///////////////////////////////////////////////////////////
     SIGN32 BITMAP12_drvrd(SIE_BITMAP12 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 BITMAP12_drvwr(SIE_BITMAP12 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void BITMAP12_reset(SIE_BITMAP12 *p);
     SIGN32 BITMAP12_cmp  (SIE_BITMAP12 *p, SIE_BITMAP12 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define BITMAP12_check(p,pie,pfx,hLOG) BITMAP12_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define BITMAP12_print(p,    pfx,hLOG) BITMAP12_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: BITMAP12
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE ReadClient              biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Rd                   (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Start bit for the respective clients.
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the client.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * 0 : Don't clear, normal state.
///                                    * 1 : Clear the asynchronous FIFO between the respective client and dHub.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00004 Word                 (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of 128-bit words that have to be fetched from DDR for read Client. Should be programmed as:
///                                    * ceil( ohres*ovres*16 / 128 )
///                                    * Note : In case of resolution which is not integer multiple of 128, word total should be programmed as follows :
///                                    * For eg if ohres = 116, then (ohres*24/128) = 21.75. Then word total should be (22*ovres)
///                                    ###
///     @ 0x00008 NonStdRes            (P)
///               %unsigned 1  enable                    0x0
///                                    ###
///                                    * Enable for Read Client when resolution is not integer multiple of 16
///                                    ###
///               %unsigned 13 pixlineTot                0x64
///                                    ###
///                                    * Total number of pixels in a line (for Read Client)
///                                    ###
///               %unsigned 4  flushCnt                  0x5
///                                    ###
///                                    * Counter to determine the ready status of Read Client after end of line (only used when NonStdRes_enable = 1)
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x0000C pack                 (P)
///               %unsigned 4  Sel                       0x0
///                                    ###
///                                    * PackSel values for following Read Client's
///                                    * [A] DEINT Read Client0
///                                    * [0000] : 20 bit unpacking
///                                    * [0001] : 8 bit unpacking
///                                    * [0010] : 10 bit unpacking
///                                    * [0011] : 10 bit unpacking [for V4H6 format]
///                                    * [remaining] : unused/invalid
///                                    * [B] DEINT Read Client1
///                                    * [0000] : 20 bit unpacking
///                                    * [0001] : 8 bit unpacking
///                                    * [0010] : 10 bit unpacking
///                                    * [0011] : 10 bit unpacking [for V4H6 format]
///                                    * [remaining] : unused/invalid
///                                    * [C] PIP/GFX0 Read Client 1 (for Croma channel)
///                                    * [0000] : 8 bit unpacking
///                                    * [0001] : 10 bit unpacking
///                                    * [0010] : 10 bit unpacking [for V4H6 format]
///                                    * [remaining] : unused/invalid
///                                    * Note : based on above (A, B or C) program packSel accordingly
///                                    ###
///               %%        28         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      16B, bits:      56b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_ReadClient
#define h_ReadClient (){}

    #define     RA_ReadClient_Rd                               0x0000

    #define     BA_ReadClient_Rd_start                         0x0000
    #define     B16ReadClient_Rd_start                         0x0000
    #define   LSb32ReadClient_Rd_start                            0
    #define   LSb16ReadClient_Rd_start                            0
    #define       bReadClient_Rd_start                         1
    #define   MSK32ReadClient_Rd_start                            0x00000001

    #define     BA_ReadClient_Rd_clear                         0x0000
    #define     B16ReadClient_Rd_clear                         0x0000
    #define   LSb32ReadClient_Rd_clear                            1
    #define   LSb16ReadClient_Rd_clear                            1
    #define       bReadClient_Rd_clear                         1
    #define   MSK32ReadClient_Rd_clear                            0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_ReadClient_Word                             0x0004

    #define     BA_ReadClient_Word_tot                         0x0004
    #define     B16ReadClient_Word_tot                         0x0004
    #define   LSb32ReadClient_Word_tot                            0
    #define   LSb16ReadClient_Word_tot                            0
    #define       bReadClient_Word_tot                         32
    #define   MSK32ReadClient_Word_tot                            0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_ReadClient_NonStdRes                        0x0008

    #define     BA_ReadClient_NonStdRes_enable                 0x0008
    #define     B16ReadClient_NonStdRes_enable                 0x0008
    #define   LSb32ReadClient_NonStdRes_enable                    0
    #define   LSb16ReadClient_NonStdRes_enable                    0
    #define       bReadClient_NonStdRes_enable                 1
    #define   MSK32ReadClient_NonStdRes_enable                    0x00000001

    #define     BA_ReadClient_NonStdRes_pixlineTot             0x0008
    #define     B16ReadClient_NonStdRes_pixlineTot             0x0008
    #define   LSb32ReadClient_NonStdRes_pixlineTot                1
    #define   LSb16ReadClient_NonStdRes_pixlineTot                1
    #define       bReadClient_NonStdRes_pixlineTot             13
    #define   MSK32ReadClient_NonStdRes_pixlineTot                0x00003FFE

    #define     BA_ReadClient_NonStdRes_flushCnt               0x0009
    #define     B16ReadClient_NonStdRes_flushCnt               0x0008
    #define   LSb32ReadClient_NonStdRes_flushCnt                  14
    #define   LSb16ReadClient_NonStdRes_flushCnt                  14
    #define       bReadClient_NonStdRes_flushCnt               4
    #define   MSK32ReadClient_NonStdRes_flushCnt                  0x0003C000
    ///////////////////////////////////////////////////////////
    #define     RA_ReadClient_pack                             0x000C

    #define     BA_ReadClient_pack_Sel                         0x000C
    #define     B16ReadClient_pack_Sel                         0x000C
    #define   LSb32ReadClient_pack_Sel                            0
    #define   LSb16ReadClient_pack_Sel                            0
    #define       bReadClient_pack_Sel                         4
    #define   MSK32ReadClient_pack_Sel                            0x0000000F
    ///////////////////////////////////////////////////////////

    typedef struct SIE_ReadClient {
    ///////////////////////////////////////////////////////////
    #define   GET32ReadClient_Rd_start(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32ReadClient_Rd_start(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16ReadClient_Rd_start(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16ReadClient_Rd_start(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32ReadClient_Rd_clear(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32ReadClient_Rd_clear(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16ReadClient_Rd_clear(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16ReadClient_Rd_clear(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define     w32ReadClient_Rd                               {\
            UNSG32 uRd_start                                   :  1;\
            UNSG32 uRd_clear                                   :  1;\
            UNSG32 RSVDx0_b2                                   : 30;\
          }
    union { UNSG32 u32ReadClient_Rd;
            struct w32ReadClient_Rd;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ReadClient_Word_tot(r32)                    _BFGET_(r32,31, 0)
    #define   SET32ReadClient_Word_tot(r32,v)                  _BFSET_(r32,31, 0,v)

    #define     w32ReadClient_Word                             {\
            UNSG32 uWord_tot                                   : 32;\
          }
    union { UNSG32 u32ReadClient_Word;
            struct w32ReadClient_Word;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ReadClient_NonStdRes_enable(r32)            _BFGET_(r32, 0, 0)
    #define   SET32ReadClient_NonStdRes_enable(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16ReadClient_NonStdRes_enable(r16)            _BFGET_(r16, 0, 0)
    #define   SET16ReadClient_NonStdRes_enable(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32ReadClient_NonStdRes_pixlineTot(r32)        _BFGET_(r32,13, 1)
    #define   SET32ReadClient_NonStdRes_pixlineTot(r32,v)      _BFSET_(r32,13, 1,v)
    #define   GET16ReadClient_NonStdRes_pixlineTot(r16)        _BFGET_(r16,13, 1)
    #define   SET16ReadClient_NonStdRes_pixlineTot(r16,v)      _BFSET_(r16,13, 1,v)

    #define   GET32ReadClient_NonStdRes_flushCnt(r32)          _BFGET_(r32,17,14)
    #define   SET32ReadClient_NonStdRes_flushCnt(r32,v)        _BFSET_(r32,17,14,v)

    #define     w32ReadClient_NonStdRes                        {\
            UNSG32 uNonStdRes_enable                           :  1;\
            UNSG32 uNonStdRes_pixlineTot                       : 13;\
            UNSG32 uNonStdRes_flushCnt                         :  4;\
            UNSG32 RSVDx8_b18                                  : 14;\
          }
    union { UNSG32 u32ReadClient_NonStdRes;
            struct w32ReadClient_NonStdRes;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ReadClient_pack_Sel(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32ReadClient_pack_Sel(r32,v)                  _BFSET_(r32, 3, 0,v)
    #define   GET16ReadClient_pack_Sel(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16ReadClient_pack_Sel(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define     w32ReadClient_pack                             {\
            UNSG32 upack_Sel                                   :  4;\
            UNSG32 RSVDxC_b4                                   : 28;\
          }
    union { UNSG32 u32ReadClient_pack;
            struct w32ReadClient_pack;
          };
    ///////////////////////////////////////////////////////////
    } SIE_ReadClient;

    typedef union  T32ReadClient_Rd
          { UNSG32 u32;
            struct w32ReadClient_Rd;
                 } T32ReadClient_Rd;
    typedef union  T32ReadClient_Word
          { UNSG32 u32;
            struct w32ReadClient_Word;
                 } T32ReadClient_Word;
    typedef union  T32ReadClient_NonStdRes
          { UNSG32 u32;
            struct w32ReadClient_NonStdRes;
                 } T32ReadClient_NonStdRes;
    typedef union  T32ReadClient_pack
          { UNSG32 u32;
            struct w32ReadClient_pack;
                 } T32ReadClient_pack;
    ///////////////////////////////////////////////////////////

    typedef union  TReadClient_Rd
          { UNSG32 u32[1];
            struct {
            struct w32ReadClient_Rd;
                   };
                 } TReadClient_Rd;
    typedef union  TReadClient_Word
          { UNSG32 u32[1];
            struct {
            struct w32ReadClient_Word;
                   };
                 } TReadClient_Word;
    typedef union  TReadClient_NonStdRes
          { UNSG32 u32[1];
            struct {
            struct w32ReadClient_NonStdRes;
                   };
                 } TReadClient_NonStdRes;
    typedef union  TReadClient_pack
          { UNSG32 u32[1];
            struct {
            struct w32ReadClient_pack;
                   };
                 } TReadClient_pack;

    ///////////////////////////////////////////////////////////
     SIGN32 ReadClient_drvrd(SIE_ReadClient *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 ReadClient_drvwr(SIE_ReadClient *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void ReadClient_reset(SIE_ReadClient *p);
     SIGN32 ReadClient_cmp  (SIE_ReadClient *p, SIE_ReadClient *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define ReadClient_check(p,pie,pfx,hLOG) ReadClient_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define ReadClient_print(p,    pfx,hLOG) ReadClient_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: ReadClient
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE WriteClient             biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Wr                   (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Start bit for the respective clients.
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the client.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * 0 : Don't clear, normal state.
///                                    * 1 : Clear the asynchronous FIFO between the respective client and dHub.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00004 pix                  (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected from input to write client. This is used to generate flush in Write client to write the partially formed 128-bit data (if any) to DDR.
///                                    * Should be programmed with (ovres*ohres).
///                                    ###
///     @ 0x00008 NonStdRes            (P)
///               %unsigned 1  enable                    0x0
///                                    ###
///                                    * Enable for Read Client when resolution is not integer multiple of 16
///                                    ###
///               %unsigned 13 pixlineTot                0x64
///                                    ###
///                                    * Total number of pixels in a line (for Write Client)
///                                    ###
///               %%        18         # Stuffing bits...
///     @ 0x0000C pack                 (P)
///               %unsigned 4  Sel                       0x0
///                                    ###
///                                    * PackSel for Write Client
///                                    * [0000] : 8 bit packing
///                                    * [0001] : 10 bit packing
///                                    * [0010] : 12 bit packing
///                                    * [0011] : 15 bit packing
///                                    * [0100] : 16 bit packing
///                                    * [0101] : 20 bit packing
///                                    * [0110] : 24 bit packing
///                                    * [0111] : 30 bit packing
///                                    * [1000] : 32 bit packing
///                                    ###
///               %%        28         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      16B, bits:      52b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_WriteClient
#define h_WriteClient (){}

    #define     RA_WriteClient_Wr                              0x0000

    #define     BA_WriteClient_Wr_start                        0x0000
    #define     B16WriteClient_Wr_start                        0x0000
    #define   LSb32WriteClient_Wr_start                           0
    #define   LSb16WriteClient_Wr_start                           0
    #define       bWriteClient_Wr_start                        1
    #define   MSK32WriteClient_Wr_start                           0x00000001

    #define     BA_WriteClient_Wr_clear                        0x0000
    #define     B16WriteClient_Wr_clear                        0x0000
    #define   LSb32WriteClient_Wr_clear                           1
    #define   LSb16WriteClient_Wr_clear                           1
    #define       bWriteClient_Wr_clear                        1
    #define   MSK32WriteClient_Wr_clear                           0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_WriteClient_pix                             0x0004

    #define     BA_WriteClient_pix_tot                         0x0004
    #define     B16WriteClient_pix_tot                         0x0004
    #define   LSb32WriteClient_pix_tot                            0
    #define   LSb16WriteClient_pix_tot                            0
    #define       bWriteClient_pix_tot                         32
    #define   MSK32WriteClient_pix_tot                            0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_WriteClient_NonStdRes                       0x0008

    #define     BA_WriteClient_NonStdRes_enable                0x0008
    #define     B16WriteClient_NonStdRes_enable                0x0008
    #define   LSb32WriteClient_NonStdRes_enable                   0
    #define   LSb16WriteClient_NonStdRes_enable                   0
    #define       bWriteClient_NonStdRes_enable                1
    #define   MSK32WriteClient_NonStdRes_enable                   0x00000001

    #define     BA_WriteClient_NonStdRes_pixlineTot            0x0008
    #define     B16WriteClient_NonStdRes_pixlineTot            0x0008
    #define   LSb32WriteClient_NonStdRes_pixlineTot               1
    #define   LSb16WriteClient_NonStdRes_pixlineTot               1
    #define       bWriteClient_NonStdRes_pixlineTot            13
    #define   MSK32WriteClient_NonStdRes_pixlineTot               0x00003FFE
    ///////////////////////////////////////////////////////////
    #define     RA_WriteClient_pack                            0x000C

    #define     BA_WriteClient_pack_Sel                        0x000C
    #define     B16WriteClient_pack_Sel                        0x000C
    #define   LSb32WriteClient_pack_Sel                           0
    #define   LSb16WriteClient_pack_Sel                           0
    #define       bWriteClient_pack_Sel                        4
    #define   MSK32WriteClient_pack_Sel                           0x0000000F
    ///////////////////////////////////////////////////////////

    typedef struct SIE_WriteClient {
    ///////////////////////////////////////////////////////////
    #define   GET32WriteClient_Wr_start(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32WriteClient_Wr_start(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16WriteClient_Wr_start(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16WriteClient_Wr_start(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32WriteClient_Wr_clear(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32WriteClient_Wr_clear(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16WriteClient_Wr_clear(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16WriteClient_Wr_clear(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define     w32WriteClient_Wr                              {\
            UNSG32 uWr_start                                   :  1;\
            UNSG32 uWr_clear                                   :  1;\
            UNSG32 RSVDx0_b2                                   : 30;\
          }
    union { UNSG32 u32WriteClient_Wr;
            struct w32WriteClient_Wr;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32WriteClient_pix_tot(r32)                    _BFGET_(r32,31, 0)
    #define   SET32WriteClient_pix_tot(r32,v)                  _BFSET_(r32,31, 0,v)

    #define     w32WriteClient_pix                             {\
            UNSG32 upix_tot                                    : 32;\
          }
    union { UNSG32 u32WriteClient_pix;
            struct w32WriteClient_pix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32WriteClient_NonStdRes_enable(r32)           _BFGET_(r32, 0, 0)
    #define   SET32WriteClient_NonStdRes_enable(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16WriteClient_NonStdRes_enable(r16)           _BFGET_(r16, 0, 0)
    #define   SET16WriteClient_NonStdRes_enable(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32WriteClient_NonStdRes_pixlineTot(r32)       _BFGET_(r32,13, 1)
    #define   SET32WriteClient_NonStdRes_pixlineTot(r32,v)     _BFSET_(r32,13, 1,v)
    #define   GET16WriteClient_NonStdRes_pixlineTot(r16)       _BFGET_(r16,13, 1)
    #define   SET16WriteClient_NonStdRes_pixlineTot(r16,v)     _BFSET_(r16,13, 1,v)

    #define     w32WriteClient_NonStdRes                       {\
            UNSG32 uNonStdRes_enable                           :  1;\
            UNSG32 uNonStdRes_pixlineTot                       : 13;\
            UNSG32 RSVDx8_b14                                  : 18;\
          }
    union { UNSG32 u32WriteClient_NonStdRes;
            struct w32WriteClient_NonStdRes;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32WriteClient_pack_Sel(r32)                   _BFGET_(r32, 3, 0)
    #define   SET32WriteClient_pack_Sel(r32,v)                 _BFSET_(r32, 3, 0,v)
    #define   GET16WriteClient_pack_Sel(r16)                   _BFGET_(r16, 3, 0)
    #define   SET16WriteClient_pack_Sel(r16,v)                 _BFSET_(r16, 3, 0,v)

    #define     w32WriteClient_pack                            {\
            UNSG32 upack_Sel                                   :  4;\
            UNSG32 RSVDxC_b4                                   : 28;\
          }
    union { UNSG32 u32WriteClient_pack;
            struct w32WriteClient_pack;
          };
    ///////////////////////////////////////////////////////////
    } SIE_WriteClient;

    typedef union  T32WriteClient_Wr
          { UNSG32 u32;
            struct w32WriteClient_Wr;
                 } T32WriteClient_Wr;
    typedef union  T32WriteClient_pix
          { UNSG32 u32;
            struct w32WriteClient_pix;
                 } T32WriteClient_pix;
    typedef union  T32WriteClient_NonStdRes
          { UNSG32 u32;
            struct w32WriteClient_NonStdRes;
                 } T32WriteClient_NonStdRes;
    typedef union  T32WriteClient_pack
          { UNSG32 u32;
            struct w32WriteClient_pack;
                 } T32WriteClient_pack;
    ///////////////////////////////////////////////////////////

    typedef union  TWriteClient_Wr
          { UNSG32 u32[1];
            struct {
            struct w32WriteClient_Wr;
                   };
                 } TWriteClient_Wr;
    typedef union  TWriteClient_pix
          { UNSG32 u32[1];
            struct {
            struct w32WriteClient_pix;
                   };
                 } TWriteClient_pix;
    typedef union  TWriteClient_NonStdRes
          { UNSG32 u32[1];
            struct {
            struct w32WriteClient_NonStdRes;
                   };
                 } TWriteClient_NonStdRes;
    typedef union  TWriteClient_pack
          { UNSG32 u32[1];
            struct {
            struct w32WriteClient_pack;
                   };
                 } TWriteClient_pack;

    ///////////////////////////////////////////////////////////
     SIGN32 WriteClient_drvrd(SIE_WriteClient *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 WriteClient_drvwr(SIE_WriteClient *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void WriteClient_reset(SIE_WriteClient *p);
     SIGN32 WriteClient_cmp  (SIE_WriteClient *p, SIE_WriteClient *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define WriteClient_check(p,pie,pfx,hLOG) WriteClient_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define WriteClient_print(p,    pfx,hLOG) WriteClient_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: WriteClient
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE ClientIF                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 MR0                  (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Start bit for the respective clients.
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the client.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * 0 : Don't clear, normal state.
///                                    * 1 : Clear the asynchronous FIFO between the respective client and dHub.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00004 MR0_word             (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of 128-bit words that have to be fetched from DDR for R0 read Client. Should be programmed as:
///                                    * ceil( ohres*ovres*16 / 128 )
///                                    * Note0 : In case of resolution which is not integer multiple of 128, word total should be programmed as follows :
///                                    * For eg if ohres = 116, then (ohres*24/128) = 21.75. Then word total should be (22*ovres). Where '24' = no of bits in a pixel
///                                    * Note1 : In case of DETILE UPS420 10Bit Mode 0, word total should be programmed as
///                                    * (ihres*ivres*NoB*16/15)/128 where NoB = 10
///                                    ###
///     @ 0x00008 MR1                  (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Start bit for the respective clients.
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the client.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * 0 : Don't clear, normal state.
///                                    * 1 : Clear the asynchronous FIFO between the respective client and dHub.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x0000C MR1_word             (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of 128-bit words that have to be fetched from DDR for R1 read Client. Should be programmed as:
///                                    * ceil( ohres*ovres*16 / 128 )
///                                    * Note : In case of resolution which is not integer multiple of 128, word total should be programmed as follows :
///                                    * For eg if ohres = 116, then (ohres*24/128) = 21.75. Then word total should be (22*ovres). Where '24' = no of bits in a pixel
///                                    * Note1 : In case of DETILE UPS420 10Bit Mode 0, word total should be programmed as
///                                    * (ihres*ivres*NoB*16/15)/(128*2) where NoB = 10
///                                    ###
///     @ 0x00010 CTRL0                (P)
///               %unsigned 1  CLKEN_Main0               0x0
///                                    ###
///                                    * 1: Take care of rdy from MainR0 while generating clken for mainPl
///                                    * 0 : don't consider rdy from MainR0
///                                    * Make this bit 1 whenever read client of MainR0 is turned-on. Otherwise, make it zero.
///                                    ###
///               %unsigned 1  CLKEN_Main1               0x0
///                                    ###
///                                    * 1: Take care of rdy from MainR1 while generating clken for mainPl
///                                    * 0 : don't consider rdy from MainR1
///                                    * Make this bit 1 whenever read client of MainR1 is turned-on. Otherwise, make it zero.
///                                    ###
///               %unsigned 1  rdmain_initval0           0x0
///                                    ###
///                                    * Initiallization value for read Mask for Main RdClient1 (420SP)
///                                    ###
///               %unsigned 1  rdmain_initval1           0x1
///                                    ###
///                                    * Initiallization value for read Mask for Main RdClient1 (420SP)
///                                    ###
///               %unsigned 1  rdm_mask_sftrst           0x0
///                                    ###
///                                    * Soft reset to initialize read mask. Write 1 to initialize read mask with rdMainMaskInitVal0
///                                    ###
///               %unsigned 4  packSel_MR0               0x0
///                                    ###
///                                    * PackSel for Main Read Client (R0)
///                                    * [0000] : 8 bit unpacking
///                                    * [0001] : 10 bit unpacking
///                                    * [0010] : 16 bit unpacking
///                                    * [0011]: 10 bit unpacking [for Tile Format 10Bit V4H6]
///                                    * [0100] : 20 Bit unpacking [for YUV422 10bpc]
///                                    * [0101] : 32 Bit unpacking [for YUV_444_10b DWA, ARGB32, and ARGB2101010 formats]
///                                    * [0110] : 24 Bit unpacking[for YUV444 8bpc]
///                                    * [0111] : 30 Bit unpacking[for YUV444 10bpc]
///                                    ###
///               %unsigned 2  packSel_MR1               0x0
///                                    ###
///                                    * PackSel for Main Read Client (R1)
///                                    * [00] : 8 bit unpacking
///                                    * [01] : 10 bit unpacking
///                                    * [10] : 10 bit unpacking [for Tile Format 10Bit V4H6]
///                                    * [11] : 16 bit unpacking
///                                    ###
///               %unsigned 1  ups420_idataSelM          0x0
///                                    ###
///                                    * Input Data Select for UPS 420-422. Default it is 16bit YC from Read Client R0 – for MAIN Plane
///                                    ###
///               %unsigned 1  read_sel_420SP            0x0
///                                    ###
///                                    * Read select from read client (R1) for 420 SP format case
///                                    ###
///               %unsigned 3  ups420_idat_ctrl          0x0
///                                    ###
///                                    * Data control enable for ups420_422
///                                    * [000] : Input data is 10 bpc (YUV420, YUV444,    RGB101010)
///                                    * [001] : Input data is 8bpc(YUV420, YUV444,    RGB888)
///                                    * [010] : For DV TEST path (8bpc)
///                                    * [011] : For DV TEST path (10bpc)
///                                    * [100] : Input data is YUV 422 8bpc
///                                    * [101] : Input data is YUV 422 10bpc
///                                    * [110] : Not Used
///                                    * [111] : Input data is ARGB2101010 /ARGB8888/ YUV444 DWA
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00014 DUMMY                (P)
///               %unsigned 32 dummy                     0x0
///                                    ###
///                                    * Can be used for ECO (left intentionally) to match register space with BG4CT-VPP
///                                    ###
///     @ 0x00018 CTRL2                (P)
///               %unsigned 1  nonStdResEn_MR0           0x0
///                                    ###
///                                    * Enable for Main Read Client 0 when resolution is not integer multiple of 16
///                                    ###
///               %unsigned 13 pixlineTot_MR0            0x64
///                                    ###
///                                    * Total number of pixels in a line (for Main Read Client 0)
///                                    ###
///               %unsigned 4  flushCnt_MR0              0x5
///                                    ###
///                                    * Counter to determine the ready status of Main Read Client 0 after end of line (only used when nonStdResEn_MR0 = 1)
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x0001C CTRL3                (P)
///               %unsigned 1  nonStdResEn_MR1           0x0
///                                    ###
///                                    * Enable for Main Read Client 1 when resolution is not integer multiple of 16
///                                    ###
///               %unsigned 13 pixlineTot_MR1            0x64
///                                    ###
///                                    * Total number of pixels in a line (for Main Read Client 1)
///                                    ###
///               %unsigned 4  flushCnt_MR1              0x5
///                                    ###
///                                    * Counter to determine the ready status of Main Read Client 1 after end of line (only used when nonStdResEn_MR1 = 1)
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x00020                      (P)
///     # 0x00020 RdClientVmxVm        
///               $ReadClient          RdClientVmxVm     REG          
///                                    ###
///                                    * Read Client for VmxVm DMA I/F registers
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      48B, bits:     208b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_ClientIF
#define h_ClientIF (){}

    #define     RA_ClientIF_MR0                                0x0000

    #define     BA_ClientIF_MR0_start                          0x0000
    #define     B16ClientIF_MR0_start                          0x0000
    #define   LSb32ClientIF_MR0_start                             0
    #define   LSb16ClientIF_MR0_start                             0
    #define       bClientIF_MR0_start                          1
    #define   MSK32ClientIF_MR0_start                             0x00000001

    #define     BA_ClientIF_MR0_clear                          0x0000
    #define     B16ClientIF_MR0_clear                          0x0000
    #define   LSb32ClientIF_MR0_clear                             1
    #define   LSb16ClientIF_MR0_clear                             1
    #define       bClientIF_MR0_clear                          1
    #define   MSK32ClientIF_MR0_clear                             0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_MR0_word                           0x0004

    #define     BA_ClientIF_MR0_word_tot                       0x0004
    #define     B16ClientIF_MR0_word_tot                       0x0004
    #define   LSb32ClientIF_MR0_word_tot                          0
    #define   LSb16ClientIF_MR0_word_tot                          0
    #define       bClientIF_MR0_word_tot                       32
    #define   MSK32ClientIF_MR0_word_tot                          0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_MR1                                0x0008

    #define     BA_ClientIF_MR1_start                          0x0008
    #define     B16ClientIF_MR1_start                          0x0008
    #define   LSb32ClientIF_MR1_start                             0
    #define   LSb16ClientIF_MR1_start                             0
    #define       bClientIF_MR1_start                          1
    #define   MSK32ClientIF_MR1_start                             0x00000001

    #define     BA_ClientIF_MR1_clear                          0x0008
    #define     B16ClientIF_MR1_clear                          0x0008
    #define   LSb32ClientIF_MR1_clear                             1
    #define   LSb16ClientIF_MR1_clear                             1
    #define       bClientIF_MR1_clear                          1
    #define   MSK32ClientIF_MR1_clear                             0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_MR1_word                           0x000C

    #define     BA_ClientIF_MR1_word_tot                       0x000C
    #define     B16ClientIF_MR1_word_tot                       0x000C
    #define   LSb32ClientIF_MR1_word_tot                          0
    #define   LSb16ClientIF_MR1_word_tot                          0
    #define       bClientIF_MR1_word_tot                       32
    #define   MSK32ClientIF_MR1_word_tot                          0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_CTRL0                              0x0010

    #define     BA_ClientIF_CTRL0_CLKEN_Main0                  0x0010
    #define     B16ClientIF_CTRL0_CLKEN_Main0                  0x0010
    #define   LSb32ClientIF_CTRL0_CLKEN_Main0                     0
    #define   LSb16ClientIF_CTRL0_CLKEN_Main0                     0
    #define       bClientIF_CTRL0_CLKEN_Main0                  1
    #define   MSK32ClientIF_CTRL0_CLKEN_Main0                     0x00000001

    #define     BA_ClientIF_CTRL0_CLKEN_Main1                  0x0010
    #define     B16ClientIF_CTRL0_CLKEN_Main1                  0x0010
    #define   LSb32ClientIF_CTRL0_CLKEN_Main1                     1
    #define   LSb16ClientIF_CTRL0_CLKEN_Main1                     1
    #define       bClientIF_CTRL0_CLKEN_Main1                  1
    #define   MSK32ClientIF_CTRL0_CLKEN_Main1                     0x00000002

    #define     BA_ClientIF_CTRL0_rdmain_initval0              0x0010
    #define     B16ClientIF_CTRL0_rdmain_initval0              0x0010
    #define   LSb32ClientIF_CTRL0_rdmain_initval0                 2
    #define   LSb16ClientIF_CTRL0_rdmain_initval0                 2
    #define       bClientIF_CTRL0_rdmain_initval0              1
    #define   MSK32ClientIF_CTRL0_rdmain_initval0                 0x00000004

    #define     BA_ClientIF_CTRL0_rdmain_initval1              0x0010
    #define     B16ClientIF_CTRL0_rdmain_initval1              0x0010
    #define   LSb32ClientIF_CTRL0_rdmain_initval1                 3
    #define   LSb16ClientIF_CTRL0_rdmain_initval1                 3
    #define       bClientIF_CTRL0_rdmain_initval1              1
    #define   MSK32ClientIF_CTRL0_rdmain_initval1                 0x00000008

    #define     BA_ClientIF_CTRL0_rdm_mask_sftrst              0x0010
    #define     B16ClientIF_CTRL0_rdm_mask_sftrst              0x0010
    #define   LSb32ClientIF_CTRL0_rdm_mask_sftrst                 4
    #define   LSb16ClientIF_CTRL0_rdm_mask_sftrst                 4
    #define       bClientIF_CTRL0_rdm_mask_sftrst              1
    #define   MSK32ClientIF_CTRL0_rdm_mask_sftrst                 0x00000010

    #define     BA_ClientIF_CTRL0_packSel_MR0                  0x0010
    #define     B16ClientIF_CTRL0_packSel_MR0                  0x0010
    #define   LSb32ClientIF_CTRL0_packSel_MR0                     5
    #define   LSb16ClientIF_CTRL0_packSel_MR0                     5
    #define       bClientIF_CTRL0_packSel_MR0                  4
    #define   MSK32ClientIF_CTRL0_packSel_MR0                     0x000001E0

    #define     BA_ClientIF_CTRL0_packSel_MR1                  0x0011
    #define     B16ClientIF_CTRL0_packSel_MR1                  0x0010
    #define   LSb32ClientIF_CTRL0_packSel_MR1                     9
    #define   LSb16ClientIF_CTRL0_packSel_MR1                     9
    #define       bClientIF_CTRL0_packSel_MR1                  2
    #define   MSK32ClientIF_CTRL0_packSel_MR1                     0x00000600

    #define     BA_ClientIF_CTRL0_ups420_idataSelM             0x0011
    #define     B16ClientIF_CTRL0_ups420_idataSelM             0x0010
    #define   LSb32ClientIF_CTRL0_ups420_idataSelM                11
    #define   LSb16ClientIF_CTRL0_ups420_idataSelM                11
    #define       bClientIF_CTRL0_ups420_idataSelM             1
    #define   MSK32ClientIF_CTRL0_ups420_idataSelM                0x00000800

    #define     BA_ClientIF_CTRL0_read_sel_420SP               0x0011
    #define     B16ClientIF_CTRL0_read_sel_420SP               0x0010
    #define   LSb32ClientIF_CTRL0_read_sel_420SP                  12
    #define   LSb16ClientIF_CTRL0_read_sel_420SP                  12
    #define       bClientIF_CTRL0_read_sel_420SP               1
    #define   MSK32ClientIF_CTRL0_read_sel_420SP                  0x00001000

    #define     BA_ClientIF_CTRL0_ups420_idat_ctrl             0x0011
    #define     B16ClientIF_CTRL0_ups420_idat_ctrl             0x0010
    #define   LSb32ClientIF_CTRL0_ups420_idat_ctrl                13
    #define   LSb16ClientIF_CTRL0_ups420_idat_ctrl                13
    #define       bClientIF_CTRL0_ups420_idat_ctrl             3
    #define   MSK32ClientIF_CTRL0_ups420_idat_ctrl                0x0000E000
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_DUMMY                              0x0014

    #define     BA_ClientIF_DUMMY_dummy                        0x0014
    #define     B16ClientIF_DUMMY_dummy                        0x0014
    #define   LSb32ClientIF_DUMMY_dummy                           0
    #define   LSb16ClientIF_DUMMY_dummy                           0
    #define       bClientIF_DUMMY_dummy                        32
    #define   MSK32ClientIF_DUMMY_dummy                           0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_CTRL2                              0x0018

    #define     BA_ClientIF_CTRL2_nonStdResEn_MR0              0x0018
    #define     B16ClientIF_CTRL2_nonStdResEn_MR0              0x0018
    #define   LSb32ClientIF_CTRL2_nonStdResEn_MR0                 0
    #define   LSb16ClientIF_CTRL2_nonStdResEn_MR0                 0
    #define       bClientIF_CTRL2_nonStdResEn_MR0              1
    #define   MSK32ClientIF_CTRL2_nonStdResEn_MR0                 0x00000001

    #define     BA_ClientIF_CTRL2_pixlineTot_MR0               0x0018
    #define     B16ClientIF_CTRL2_pixlineTot_MR0               0x0018
    #define   LSb32ClientIF_CTRL2_pixlineTot_MR0                  1
    #define   LSb16ClientIF_CTRL2_pixlineTot_MR0                  1
    #define       bClientIF_CTRL2_pixlineTot_MR0               13
    #define   MSK32ClientIF_CTRL2_pixlineTot_MR0                  0x00003FFE

    #define     BA_ClientIF_CTRL2_flushCnt_MR0                 0x0019
    #define     B16ClientIF_CTRL2_flushCnt_MR0                 0x0018
    #define   LSb32ClientIF_CTRL2_flushCnt_MR0                    14
    #define   LSb16ClientIF_CTRL2_flushCnt_MR0                    14
    #define       bClientIF_CTRL2_flushCnt_MR0                 4
    #define   MSK32ClientIF_CTRL2_flushCnt_MR0                    0x0003C000
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_CTRL3                              0x001C

    #define     BA_ClientIF_CTRL3_nonStdResEn_MR1              0x001C
    #define     B16ClientIF_CTRL3_nonStdResEn_MR1              0x001C
    #define   LSb32ClientIF_CTRL3_nonStdResEn_MR1                 0
    #define   LSb16ClientIF_CTRL3_nonStdResEn_MR1                 0
    #define       bClientIF_CTRL3_nonStdResEn_MR1              1
    #define   MSK32ClientIF_CTRL3_nonStdResEn_MR1                 0x00000001

    #define     BA_ClientIF_CTRL3_pixlineTot_MR1               0x001C
    #define     B16ClientIF_CTRL3_pixlineTot_MR1               0x001C
    #define   LSb32ClientIF_CTRL3_pixlineTot_MR1                  1
    #define   LSb16ClientIF_CTRL3_pixlineTot_MR1                  1
    #define       bClientIF_CTRL3_pixlineTot_MR1               13
    #define   MSK32ClientIF_CTRL3_pixlineTot_MR1                  0x00003FFE

    #define     BA_ClientIF_CTRL3_flushCnt_MR1                 0x001D
    #define     B16ClientIF_CTRL3_flushCnt_MR1                 0x001C
    #define   LSb32ClientIF_CTRL3_flushCnt_MR1                    14
    #define   LSb16ClientIF_CTRL3_flushCnt_MR1                    14
    #define       bClientIF_CTRL3_flushCnt_MR1                 4
    #define   MSK32ClientIF_CTRL3_flushCnt_MR1                    0x0003C000
    ///////////////////////////////////////////////////////////
    #define     RA_ClientIF_RdClientVmxVm                      0x0020
    ///////////////////////////////////////////////////////////

    typedef struct SIE_ClientIF {
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_MR0_start(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32ClientIF_MR0_start(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16ClientIF_MR0_start(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16ClientIF_MR0_start(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define   GET32ClientIF_MR0_clear(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32ClientIF_MR0_clear(r32,v)                   _BFSET_(r32, 1, 1,v)
    #define   GET16ClientIF_MR0_clear(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16ClientIF_MR0_clear(r16,v)                   _BFSET_(r16, 1, 1,v)

    #define     w32ClientIF_MR0                                {\
            UNSG32 uMR0_start                                  :  1;\
            UNSG32 uMR0_clear                                  :  1;\
            UNSG32 RSVDx0_b2                                   : 30;\
          }
    union { UNSG32 u32ClientIF_MR0;
            struct w32ClientIF_MR0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_MR0_word_tot(r32)                  _BFGET_(r32,31, 0)
    #define   SET32ClientIF_MR0_word_tot(r32,v)                _BFSET_(r32,31, 0,v)

    #define     w32ClientIF_MR0_word                           {\
            UNSG32 uMR0_word_tot                               : 32;\
          }
    union { UNSG32 u32ClientIF_MR0_word;
            struct w32ClientIF_MR0_word;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_MR1_start(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32ClientIF_MR1_start(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16ClientIF_MR1_start(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16ClientIF_MR1_start(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define   GET32ClientIF_MR1_clear(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32ClientIF_MR1_clear(r32,v)                   _BFSET_(r32, 1, 1,v)
    #define   GET16ClientIF_MR1_clear(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16ClientIF_MR1_clear(r16,v)                   _BFSET_(r16, 1, 1,v)

    #define     w32ClientIF_MR1                                {\
            UNSG32 uMR1_start                                  :  1;\
            UNSG32 uMR1_clear                                  :  1;\
            UNSG32 RSVDx8_b2                                   : 30;\
          }
    union { UNSG32 u32ClientIF_MR1;
            struct w32ClientIF_MR1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_MR1_word_tot(r32)                  _BFGET_(r32,31, 0)
    #define   SET32ClientIF_MR1_word_tot(r32,v)                _BFSET_(r32,31, 0,v)

    #define     w32ClientIF_MR1_word                           {\
            UNSG32 uMR1_word_tot                               : 32;\
          }
    union { UNSG32 u32ClientIF_MR1_word;
            struct w32ClientIF_MR1_word;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_CTRL0_CLKEN_Main0(r32)             _BFGET_(r32, 0, 0)
    #define   SET32ClientIF_CTRL0_CLKEN_Main0(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16ClientIF_CTRL0_CLKEN_Main0(r16)             _BFGET_(r16, 0, 0)
    #define   SET16ClientIF_CTRL0_CLKEN_Main0(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32ClientIF_CTRL0_CLKEN_Main1(r32)             _BFGET_(r32, 1, 1)
    #define   SET32ClientIF_CTRL0_CLKEN_Main1(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16ClientIF_CTRL0_CLKEN_Main1(r16)             _BFGET_(r16, 1, 1)
    #define   SET16ClientIF_CTRL0_CLKEN_Main1(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32ClientIF_CTRL0_rdmain_initval0(r32)         _BFGET_(r32, 2, 2)
    #define   SET32ClientIF_CTRL0_rdmain_initval0(r32,v)       _BFSET_(r32, 2, 2,v)
    #define   GET16ClientIF_CTRL0_rdmain_initval0(r16)         _BFGET_(r16, 2, 2)
    #define   SET16ClientIF_CTRL0_rdmain_initval0(r16,v)       _BFSET_(r16, 2, 2,v)

    #define   GET32ClientIF_CTRL0_rdmain_initval1(r32)         _BFGET_(r32, 3, 3)
    #define   SET32ClientIF_CTRL0_rdmain_initval1(r32,v)       _BFSET_(r32, 3, 3,v)
    #define   GET16ClientIF_CTRL0_rdmain_initval1(r16)         _BFGET_(r16, 3, 3)
    #define   SET16ClientIF_CTRL0_rdmain_initval1(r16,v)       _BFSET_(r16, 3, 3,v)

    #define   GET32ClientIF_CTRL0_rdm_mask_sftrst(r32)         _BFGET_(r32, 4, 4)
    #define   SET32ClientIF_CTRL0_rdm_mask_sftrst(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16ClientIF_CTRL0_rdm_mask_sftrst(r16)         _BFGET_(r16, 4, 4)
    #define   SET16ClientIF_CTRL0_rdm_mask_sftrst(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32ClientIF_CTRL0_packSel_MR0(r32)             _BFGET_(r32, 8, 5)
    #define   SET32ClientIF_CTRL0_packSel_MR0(r32,v)           _BFSET_(r32, 8, 5,v)
    #define   GET16ClientIF_CTRL0_packSel_MR0(r16)             _BFGET_(r16, 8, 5)
    #define   SET16ClientIF_CTRL0_packSel_MR0(r16,v)           _BFSET_(r16, 8, 5,v)

    #define   GET32ClientIF_CTRL0_packSel_MR1(r32)             _BFGET_(r32,10, 9)
    #define   SET32ClientIF_CTRL0_packSel_MR1(r32,v)           _BFSET_(r32,10, 9,v)
    #define   GET16ClientIF_CTRL0_packSel_MR1(r16)             _BFGET_(r16,10, 9)
    #define   SET16ClientIF_CTRL0_packSel_MR1(r16,v)           _BFSET_(r16,10, 9,v)

    #define   GET32ClientIF_CTRL0_ups420_idataSelM(r32)        _BFGET_(r32,11,11)
    #define   SET32ClientIF_CTRL0_ups420_idataSelM(r32,v)      _BFSET_(r32,11,11,v)
    #define   GET16ClientIF_CTRL0_ups420_idataSelM(r16)        _BFGET_(r16,11,11)
    #define   SET16ClientIF_CTRL0_ups420_idataSelM(r16,v)      _BFSET_(r16,11,11,v)

    #define   GET32ClientIF_CTRL0_read_sel_420SP(r32)          _BFGET_(r32,12,12)
    #define   SET32ClientIF_CTRL0_read_sel_420SP(r32,v)        _BFSET_(r32,12,12,v)
    #define   GET16ClientIF_CTRL0_read_sel_420SP(r16)          _BFGET_(r16,12,12)
    #define   SET16ClientIF_CTRL0_read_sel_420SP(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32ClientIF_CTRL0_ups420_idat_ctrl(r32)        _BFGET_(r32,15,13)
    #define   SET32ClientIF_CTRL0_ups420_idat_ctrl(r32,v)      _BFSET_(r32,15,13,v)
    #define   GET16ClientIF_CTRL0_ups420_idat_ctrl(r16)        _BFGET_(r16,15,13)
    #define   SET16ClientIF_CTRL0_ups420_idat_ctrl(r16,v)      _BFSET_(r16,15,13,v)

    #define     w32ClientIF_CTRL0                              {\
            UNSG32 uCTRL0_CLKEN_Main0                          :  1;\
            UNSG32 uCTRL0_CLKEN_Main1                          :  1;\
            UNSG32 uCTRL0_rdmain_initval0                      :  1;\
            UNSG32 uCTRL0_rdmain_initval1                      :  1;\
            UNSG32 uCTRL0_rdm_mask_sftrst                      :  1;\
            UNSG32 uCTRL0_packSel_MR0                          :  4;\
            UNSG32 uCTRL0_packSel_MR1                          :  2;\
            UNSG32 uCTRL0_ups420_idataSelM                     :  1;\
            UNSG32 uCTRL0_read_sel_420SP                       :  1;\
            UNSG32 uCTRL0_ups420_idat_ctrl                     :  3;\
            UNSG32 RSVDx10_b16                                 : 16;\
          }
    union { UNSG32 u32ClientIF_CTRL0;
            struct w32ClientIF_CTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_DUMMY_dummy(r32)                   _BFGET_(r32,31, 0)
    #define   SET32ClientIF_DUMMY_dummy(r32,v)                 _BFSET_(r32,31, 0,v)

    #define     w32ClientIF_DUMMY                              {\
            UNSG32 uDUMMY_dummy                                : 32;\
          }
    union { UNSG32 u32ClientIF_DUMMY;
            struct w32ClientIF_DUMMY;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_CTRL2_nonStdResEn_MR0(r32)         _BFGET_(r32, 0, 0)
    #define   SET32ClientIF_CTRL2_nonStdResEn_MR0(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16ClientIF_CTRL2_nonStdResEn_MR0(r16)         _BFGET_(r16, 0, 0)
    #define   SET16ClientIF_CTRL2_nonStdResEn_MR0(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32ClientIF_CTRL2_pixlineTot_MR0(r32)          _BFGET_(r32,13, 1)
    #define   SET32ClientIF_CTRL2_pixlineTot_MR0(r32,v)        _BFSET_(r32,13, 1,v)
    #define   GET16ClientIF_CTRL2_pixlineTot_MR0(r16)          _BFGET_(r16,13, 1)
    #define   SET16ClientIF_CTRL2_pixlineTot_MR0(r16,v)        _BFSET_(r16,13, 1,v)

    #define   GET32ClientIF_CTRL2_flushCnt_MR0(r32)            _BFGET_(r32,17,14)
    #define   SET32ClientIF_CTRL2_flushCnt_MR0(r32,v)          _BFSET_(r32,17,14,v)

    #define     w32ClientIF_CTRL2                              {\
            UNSG32 uCTRL2_nonStdResEn_MR0                      :  1;\
            UNSG32 uCTRL2_pixlineTot_MR0                       : 13;\
            UNSG32 uCTRL2_flushCnt_MR0                         :  4;\
            UNSG32 RSVDx18_b18                                 : 14;\
          }
    union { UNSG32 u32ClientIF_CTRL2;
            struct w32ClientIF_CTRL2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ClientIF_CTRL3_nonStdResEn_MR1(r32)         _BFGET_(r32, 0, 0)
    #define   SET32ClientIF_CTRL3_nonStdResEn_MR1(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16ClientIF_CTRL3_nonStdResEn_MR1(r16)         _BFGET_(r16, 0, 0)
    #define   SET16ClientIF_CTRL3_nonStdResEn_MR1(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32ClientIF_CTRL3_pixlineTot_MR1(r32)          _BFGET_(r32,13, 1)
    #define   SET32ClientIF_CTRL3_pixlineTot_MR1(r32,v)        _BFSET_(r32,13, 1,v)
    #define   GET16ClientIF_CTRL3_pixlineTot_MR1(r16)          _BFGET_(r16,13, 1)
    #define   SET16ClientIF_CTRL3_pixlineTot_MR1(r16,v)        _BFSET_(r16,13, 1,v)

    #define   GET32ClientIF_CTRL3_flushCnt_MR1(r32)            _BFGET_(r32,17,14)
    #define   SET32ClientIF_CTRL3_flushCnt_MR1(r32,v)          _BFSET_(r32,17,14,v)

    #define     w32ClientIF_CTRL3                              {\
            UNSG32 uCTRL3_nonStdResEn_MR1                      :  1;\
            UNSG32 uCTRL3_pixlineTot_MR1                       : 13;\
            UNSG32 uCTRL3_flushCnt_MR1                         :  4;\
            UNSG32 RSVDx1C_b18                                 : 14;\
          }
    union { UNSG32 u32ClientIF_CTRL3;
            struct w32ClientIF_CTRL3;
          };
    ///////////////////////////////////////////////////////////
              SIE_ReadClient                                   ie_RdClientVmxVm;
    ///////////////////////////////////////////////////////////
    } SIE_ClientIF;

    typedef union  T32ClientIF_MR0
          { UNSG32 u32;
            struct w32ClientIF_MR0;
                 } T32ClientIF_MR0;
    typedef union  T32ClientIF_MR0_word
          { UNSG32 u32;
            struct w32ClientIF_MR0_word;
                 } T32ClientIF_MR0_word;
    typedef union  T32ClientIF_MR1
          { UNSG32 u32;
            struct w32ClientIF_MR1;
                 } T32ClientIF_MR1;
    typedef union  T32ClientIF_MR1_word
          { UNSG32 u32;
            struct w32ClientIF_MR1_word;
                 } T32ClientIF_MR1_word;
    typedef union  T32ClientIF_CTRL0
          { UNSG32 u32;
            struct w32ClientIF_CTRL0;
                 } T32ClientIF_CTRL0;
    typedef union  T32ClientIF_DUMMY
          { UNSG32 u32;
            struct w32ClientIF_DUMMY;
                 } T32ClientIF_DUMMY;
    typedef union  T32ClientIF_CTRL2
          { UNSG32 u32;
            struct w32ClientIF_CTRL2;
                 } T32ClientIF_CTRL2;
    typedef union  T32ClientIF_CTRL3
          { UNSG32 u32;
            struct w32ClientIF_CTRL3;
                 } T32ClientIF_CTRL3;
    ///////////////////////////////////////////////////////////

    typedef union  TClientIF_MR0
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_MR0;
                   };
                 } TClientIF_MR0;
    typedef union  TClientIF_MR0_word
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_MR0_word;
                   };
                 } TClientIF_MR0_word;
    typedef union  TClientIF_MR1
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_MR1;
                   };
                 } TClientIF_MR1;
    typedef union  TClientIF_MR1_word
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_MR1_word;
                   };
                 } TClientIF_MR1_word;
    typedef union  TClientIF_CTRL0
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_CTRL0;
                   };
                 } TClientIF_CTRL0;
    typedef union  TClientIF_DUMMY
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_DUMMY;
                   };
                 } TClientIF_DUMMY;
    typedef union  TClientIF_CTRL2
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_CTRL2;
                   };
                 } TClientIF_CTRL2;
    typedef union  TClientIF_CTRL3
          { UNSG32 u32[1];
            struct {
            struct w32ClientIF_CTRL3;
                   };
                 } TClientIF_CTRL3;

    ///////////////////////////////////////////////////////////
     SIGN32 ClientIF_drvrd(SIE_ClientIF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 ClientIF_drvwr(SIE_ClientIF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void ClientIF_reset(SIE_ClientIF *p);
     SIGN32 ClientIF_cmp  (SIE_ClientIF *p, SIE_ClientIF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define ClientIF_check(p,pie,pfx,hLOG) ClientIF_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define ClientIF_print(p,    pfx,hLOG) ClientIF_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: ClientIF
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BETG                    biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 PL0                  
///               $TG_PL               PL0               REG          
///                                    ###
///                                    * Plane 0 Related registers (for Base Plane)
///                                    ###
///     @ 0x00008                      (P)
///     # 0x00008 PL1                  
///               $TG_PL               PL1               REG          
///                                    ###
///                                    * Plane 1 Related registers (for Main plane)
///                                    ###
///     @ 0x00010                      (P)
///     # 0x00010 PL2                  
///               $TG_PL               PL2               REG          
///                                    ###
///                                    * Plane 2 Related registers (for PIP/Graphics1 Plane)
///                                    ###
///     @ 0x00018                      (P)
///     # 0x00018 PL3                  
///               $TG_PL               PL3               REG          
///                                    ###
///                                    * Plane 3 Related registers (for Graphics2 Plane)
///                                    ###
///     @ 0x00020                      (P)
///     # 0x00020 PL4                  
///               $TG_PL               PL4               REG          
///                                    ###
///                                    * Plane 4 Related registers (for FIX0 Plane)
///                                    ###
///     @ 0x00028                      (P)
///     # 0x00028 PL5                  
///               $TG_PL               PL5               REG          
///                                    ###
///                                    * Plane 5 Related registers (for FIX1 Plane)
///                                    ###
///     @ 0x00030                      (P)
///     # 0x00030 PL6                  
///               $TG_PL               PL6               REG          
///                                    ###
///                                    * Plane 6 Related registers (for FIX2 Plane)
///                                    ###
///     @ 0x00038                      (P)
///     # 0x00038 PL7                  
///               $TG_PL               PL7               REG          
///                                    ###
///                                    * Plane 7 Related registers (for FIX3 Plane)
///                                    ###
///     @ 0x00040                      (P)
///     # 0x00040 PL8                  
///               $TG_PL               PL8               REG          
///                                    ###
///                                    * Plane 8 Related registers (for overlay output read)
///                                    ###
///     @ 0x00048                      (P)
///     # 0x00048 PL1_CR               
///               $TG_PL               PL1_CR            REG          
///                                    ###
///                                    * Plane 1 Crop Related registers (for taking cropped input of Main Plane as Overlay Input)
///                                    ###
///     @ 0x00050                      (P)
///     # 0x00050 PL2_CR               
///               $TG_PL               PL2_CR            REG          
///                                    ###
///                                    * Plane 2 Crop Related registers (for taking cropped input of PIP/Graphics1 Plane as Overlay Input)
///                                    ###
///     @ 0x00058                      (P)
///     # 0x00058 PL3_CR               
///               $TG_PL               PL3_CR            REG          
///                                    ###
///                                    * Plane 3 Crop Related registers (for taking cropped input of Graphics-2 Plane as Overlay Input)
///                                    ###
///     @ 0x00060                      (P)
///     # 0x00060 PL4_CR               
///               $TG_PL               PL4_CR            REG          
///                                    ###
///                                    * Plane 4 Crop Related registers
///                                    ###
///     @ 0x00068                      (P)
///     # 0x00068 PL5_CR               
///               $TG_PL               PL5_CR            REG          
///                                    ###
///                                    * Plane 5 Crop Related registers
///                                    ###
///     @ 0x00070                      (P)
///     # 0x00070 PL6_CR               
///               $TG_PL               PL6_CR            REG          
///                                    ###
///                                    * Plane 6 Crop Related registers
///                                    ###
///     @ 0x00078                      (P)
///     # 0x00078 PL7_CR               
///               $TG_PL               PL7_CR            REG          
///                                    ###
///                                    * Plane 7 Crop Related registers
///                                    ###
///     @ 0x00080                      (P)
///     # 0x00080 PL8_CR               
///               $TG_PL               PL8_CR            REG          
///                                    ###
///                                    * Plane 8 Crop Related registers
///                                    ###
///     @ 0x00088                      (P)
///     # 0x00088 PL_FLD               
///               $TG_PL               PL_FLD            REG          
///                                    ###
///                                    * Field Related registers
///                                    ###
///     @ 0x00090                      (P)
///     # 0x00090 TG_PRG               
///               $TG_PRG              TG_PRG            REG          
///                                    ###
///                                    * Timing Generator programming registers
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     180B, bits:    1090b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_BETG
#define h_BETG (){}

    #define     RA_BETG_PL0                                    0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL1                                    0x0008
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL2                                    0x0010
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL3                                    0x0018
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL4                                    0x0020
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL5                                    0x0028
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL6                                    0x0030
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL7                                    0x0038
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL8                                    0x0040
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL1_CR                                 0x0048
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL2_CR                                 0x0050
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL3_CR                                 0x0058
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL4_CR                                 0x0060
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL5_CR                                 0x0068
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL6_CR                                 0x0070
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL7_CR                                 0x0078
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL8_CR                                 0x0080
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_PL_FLD                                 0x0088
    ///////////////////////////////////////////////////////////
    #define     RA_BETG_TG_PRG                                 0x0090
    ///////////////////////////////////////////////////////////

    typedef struct SIE_BETG {
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL0;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL1;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL2;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL3;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL4;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL5;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL6;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL7;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL8;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL1_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL2_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL3_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL4_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL5_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL6_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL7_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL8_CR;
    ///////////////////////////////////////////////////////////
              SIE_TG_PL                                        ie_PL_FLD;
    ///////////////////////////////////////////////////////////
              SIE_TG_PRG                                       ie_TG_PRG;
    ///////////////////////////////////////////////////////////
    } SIE_BETG;

    ///////////////////////////////////////////////////////////
     SIGN32 BETG_drvrd(SIE_BETG *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 BETG_drvwr(SIE_BETG *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void BETG_reset(SIE_BETG *p);
     SIGN32 BETG_cmp  (SIE_BETG *p, SIE_BETG *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define BETG_check(p,pie,pfx,hLOG) BETG_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define BETG_print(p,    pfx,hLOG) BETG_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: BETG
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE DITHER                  biu              (4,4)
///     ###
///     * Register specification of interface DITHER
///     * Defines the size of the dither
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 2  mode                      0x2
///                                    ###
///                                    * Selects dithering method
///                                    * 0: Simple truncation
///                                    * 1: rounding
///                                    * 2: 1D Error diffusion(truncation)
///                                    * 3: 1D Error diffusion(rounding)
///                                    ###
///               %unsigned 2  ctrl                      0x0
///                                    ###
///                                    * Dither Output Control
///                                    * [0]: Dither Off(input bits=output bits)
///                                    * 0: 2lsb Dither off(Input bits-2=Output bits)
///                                    * 1: 4lsb Dither off(Input bits-4=Output bits)
///                                    * [1]: Dither ON/OFF
///                                    * 0: Dither ON
///                                    * 1: Dither OFF
///                                    ###
///               %unsigned 1  ycmode                    0x0
///                                    ###
///                                    * 1: Input in YUV422 or YUV420 format
///                                    * only 2 components Y and C(U and V alternate clocks) dithered.
///                                    * 0: Input in RGB or YUV444 format.
///                                    * all 3 components are dithered
///                                    * End of dither register group
///                                    ###
///               %%        27         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       5b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_DITHER
#define h_DITHER (){}

    #define     RA_DITHER_CFG0                                 0x0000

    #define     BA_DITHER_CFG0_mode                            0x0000
    #define     B16DITHER_CFG0_mode                            0x0000
    #define   LSb32DITHER_CFG0_mode                               0
    #define   LSb16DITHER_CFG0_mode                               0
    #define       bDITHER_CFG0_mode                            2
    #define   MSK32DITHER_CFG0_mode                               0x00000003

    #define     BA_DITHER_CFG0_ctrl                            0x0000
    #define     B16DITHER_CFG0_ctrl                            0x0000
    #define   LSb32DITHER_CFG0_ctrl                               2
    #define   LSb16DITHER_CFG0_ctrl                               2
    #define       bDITHER_CFG0_ctrl                            2
    #define   MSK32DITHER_CFG0_ctrl                               0x0000000C

    #define     BA_DITHER_CFG0_ycmode                          0x0000
    #define     B16DITHER_CFG0_ycmode                          0x0000
    #define   LSb32DITHER_CFG0_ycmode                             4
    #define   LSb16DITHER_CFG0_ycmode                             4
    #define       bDITHER_CFG0_ycmode                          1
    #define   MSK32DITHER_CFG0_ycmode                             0x00000010
    ///////////////////////////////////////////////////////////

    typedef struct SIE_DITHER {
    ///////////////////////////////////////////////////////////
    #define   GET32DITHER_CFG0_mode(r32)                       _BFGET_(r32, 1, 0)
    #define   SET32DITHER_CFG0_mode(r32,v)                     _BFSET_(r32, 1, 0,v)
    #define   GET16DITHER_CFG0_mode(r16)                       _BFGET_(r16, 1, 0)
    #define   SET16DITHER_CFG0_mode(r16,v)                     _BFSET_(r16, 1, 0,v)

    #define   GET32DITHER_CFG0_ctrl(r32)                       _BFGET_(r32, 3, 2)
    #define   SET32DITHER_CFG0_ctrl(r32,v)                     _BFSET_(r32, 3, 2,v)
    #define   GET16DITHER_CFG0_ctrl(r16)                       _BFGET_(r16, 3, 2)
    #define   SET16DITHER_CFG0_ctrl(r16,v)                     _BFSET_(r16, 3, 2,v)

    #define   GET32DITHER_CFG0_ycmode(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32DITHER_CFG0_ycmode(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16DITHER_CFG0_ycmode(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16DITHER_CFG0_ycmode(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define     w32DITHER_CFG0                                 {\
            UNSG32 uCFG0_mode                                  :  2;\
            UNSG32 uCFG0_ctrl                                  :  2;\
            UNSG32 uCFG0_ycmode                                :  1;\
            UNSG32 RSVDx0_b5                                   : 27;\
          }
    union { UNSG32 u32DITHER_CFG0;
            struct w32DITHER_CFG0;
          };
    ///////////////////////////////////////////////////////////
    } SIE_DITHER;

    typedef union  T32DITHER_CFG0
          { UNSG32 u32;
            struct w32DITHER_CFG0;
                 } T32DITHER_CFG0;
    ///////////////////////////////////////////////////////////

    typedef union  TDITHER_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32DITHER_CFG0;
                   };
                 } TDITHER_CFG0;

    ///////////////////////////////////////////////////////////
     SIGN32 DITHER_drvrd(SIE_DITHER *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 DITHER_drvwr(SIE_DITHER *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void DITHER_reset(SIE_DITHER *p);
     SIGN32 DITHER_cmp  (SIE_DITHER *p, SIE_DITHER *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define DITHER_check(p,pie,pfx,hLOG) DITHER_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define DITHER_print(p,    pfx,hLOG) DITHER_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: DITHER
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE DNS444_422              biu              (4,4)
///     ###
///     * Required registers for Down-sampler
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %signmagn 13 c4_14_11tap_regs          21
///                                    ###
///                                    * Programmable coefficients for 11tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %signmagn 13 c5_13_11tap_regs          0
///                                    ###
///                                    * Programmable coefficients for 11tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00004 CFG1                 (P)
///               %signmagn 13 c6_12_11tap_regs          4268
///                                    ###
///                                    * Programmable coefficients for 11tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %signmagn 13 c7_11_11tap_regs          0
///                                    ###
///                                    * Programmable coefficients for 11tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00008 CFG2                 (P)
///               %signmagn 13 c8_10_11tap_regs          1182
///                                    ###
///                                    * Programmable coefficients for 11tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %signmagn 13 c9_11tap_regs             2034
///                                    ###
///                                    * Programmable coefficients for 11tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x0000C CFG3                 (P)
///               %signmagn 13 c6_12_7tap_regs           4132
///                                    ###
///                                    * Programmable coefficients for 7tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %signmagn 13 c7_11_7tap_regs           0
///                                    ###
///                                    * Programmable coefficients for 7tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00010 CFG4                 (P)
///               %signmagn 13 c8_10_7tap_regs           1032
///                                    ###
///                                    * Programmable coefficients for 7tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %signmagn 13 c9_7tap_regs              2104
///                                    ###
///                                    * Programmable coefficients for 7tap in Dns. The value is signed magnitude form with 13 bit (s0.12 format) as sign bit
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00014 CFG5                 (P)
///               %unsigned 8  edge_thresh_y             0x28
///                                    ###
///                                    * 8bit fixed Luma threshold for adaptive DNS during 8/10/12bit data pipe
///                                    ###
///               %unsigned 8  edge_thresh_c             0x28
///                                    ###
///                                    * 8bit fixed Chroma threshold for adaptive DNS during 8/10/12bit data pipe
///                                    ###
///               %unsigned 2  mode_regs                 0x3
///                                    ###
///                                    * en[0]: Sampler enable/disable
///                                    * 0: disables down sampler
///                                    * 1: enables  down sampler
///                                    * en[1]:
///                                    * 1: enables adaptive sampling 0: Fixed 11 taps
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x00018 CFG6                 (P)
///               %unsigned 12 yblank                    0x0
///                                    ###
///                                    * Blanking Interval forced data for Luma Channel
///                                    ###
///               %unsigned 12 cblank                    0x200
///                                    ###
///                                    * Blanking Interval forced data for Chroma Channel
///                                    ###
///               %unsigned 1  use_blank_regs            0x1
///                                    ###
///                                    * 1: Use programmed Blank data at video border.
///                                    * 0: Use pixel repeat at Video Border area
///                                    ###
///               %%        7          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      28B, bits:     173b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_DNS444_422
#define h_DNS444_422 (){}

    #define     RA_DNS444_422_CFG0                             0x0000

    #define     BA_DNS444_422_CFG0_c4_14_11tap_regs            0x0000
    #define     B16DNS444_422_CFG0_c4_14_11tap_regs            0x0000
    #define   LSb32DNS444_422_CFG0_c4_14_11tap_regs               0
    #define   LSb16DNS444_422_CFG0_c4_14_11tap_regs               0
    #define       bDNS444_422_CFG0_c4_14_11tap_regs            13
    #define   MSK32DNS444_422_CFG0_c4_14_11tap_regs               0x00001FFF

    #define     BA_DNS444_422_CFG0_c5_13_11tap_regs            0x0001
    #define     B16DNS444_422_CFG0_c5_13_11tap_regs            0x0000
    #define   LSb32DNS444_422_CFG0_c5_13_11tap_regs               13
    #define   LSb16DNS444_422_CFG0_c5_13_11tap_regs               13
    #define       bDNS444_422_CFG0_c5_13_11tap_regs            13
    #define   MSK32DNS444_422_CFG0_c5_13_11tap_regs               0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_DNS444_422_CFG1                             0x0004

    #define     BA_DNS444_422_CFG1_c6_12_11tap_regs            0x0004
    #define     B16DNS444_422_CFG1_c6_12_11tap_regs            0x0004
    #define   LSb32DNS444_422_CFG1_c6_12_11tap_regs               0
    #define   LSb16DNS444_422_CFG1_c6_12_11tap_regs               0
    #define       bDNS444_422_CFG1_c6_12_11tap_regs            13
    #define   MSK32DNS444_422_CFG1_c6_12_11tap_regs               0x00001FFF

    #define     BA_DNS444_422_CFG1_c7_11_11tap_regs            0x0005
    #define     B16DNS444_422_CFG1_c7_11_11tap_regs            0x0004
    #define   LSb32DNS444_422_CFG1_c7_11_11tap_regs               13
    #define   LSb16DNS444_422_CFG1_c7_11_11tap_regs               13
    #define       bDNS444_422_CFG1_c7_11_11tap_regs            13
    #define   MSK32DNS444_422_CFG1_c7_11_11tap_regs               0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_DNS444_422_CFG2                             0x0008

    #define     BA_DNS444_422_CFG2_c8_10_11tap_regs            0x0008
    #define     B16DNS444_422_CFG2_c8_10_11tap_regs            0x0008
    #define   LSb32DNS444_422_CFG2_c8_10_11tap_regs               0
    #define   LSb16DNS444_422_CFG2_c8_10_11tap_regs               0
    #define       bDNS444_422_CFG2_c8_10_11tap_regs            13
    #define   MSK32DNS444_422_CFG2_c8_10_11tap_regs               0x00001FFF

    #define     BA_DNS444_422_CFG2_c9_11tap_regs               0x0009
    #define     B16DNS444_422_CFG2_c9_11tap_regs               0x0008
    #define   LSb32DNS444_422_CFG2_c9_11tap_regs                  13
    #define   LSb16DNS444_422_CFG2_c9_11tap_regs                  13
    #define       bDNS444_422_CFG2_c9_11tap_regs               13
    #define   MSK32DNS444_422_CFG2_c9_11tap_regs                  0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_DNS444_422_CFG3                             0x000C

    #define     BA_DNS444_422_CFG3_c6_12_7tap_regs             0x000C
    #define     B16DNS444_422_CFG3_c6_12_7tap_regs             0x000C
    #define   LSb32DNS444_422_CFG3_c6_12_7tap_regs                0
    #define   LSb16DNS444_422_CFG3_c6_12_7tap_regs                0
    #define       bDNS444_422_CFG3_c6_12_7tap_regs             13
    #define   MSK32DNS444_422_CFG3_c6_12_7tap_regs                0x00001FFF

    #define     BA_DNS444_422_CFG3_c7_11_7tap_regs             0x000D
    #define     B16DNS444_422_CFG3_c7_11_7tap_regs             0x000C
    #define   LSb32DNS444_422_CFG3_c7_11_7tap_regs                13
    #define   LSb16DNS444_422_CFG3_c7_11_7tap_regs                13
    #define       bDNS444_422_CFG3_c7_11_7tap_regs             13
    #define   MSK32DNS444_422_CFG3_c7_11_7tap_regs                0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_DNS444_422_CFG4                             0x0010

    #define     BA_DNS444_422_CFG4_c8_10_7tap_regs             0x0010
    #define     B16DNS444_422_CFG4_c8_10_7tap_regs             0x0010
    #define   LSb32DNS444_422_CFG4_c8_10_7tap_regs                0
    #define   LSb16DNS444_422_CFG4_c8_10_7tap_regs                0
    #define       bDNS444_422_CFG4_c8_10_7tap_regs             13
    #define   MSK32DNS444_422_CFG4_c8_10_7tap_regs                0x00001FFF

    #define     BA_DNS444_422_CFG4_c9_7tap_regs                0x0011
    #define     B16DNS444_422_CFG4_c9_7tap_regs                0x0010
    #define   LSb32DNS444_422_CFG4_c9_7tap_regs                   13
    #define   LSb16DNS444_422_CFG4_c9_7tap_regs                   13
    #define       bDNS444_422_CFG4_c9_7tap_regs                13
    #define   MSK32DNS444_422_CFG4_c9_7tap_regs                   0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_DNS444_422_CFG5                             0x0014

    #define     BA_DNS444_422_CFG5_edge_thresh_y               0x0014
    #define     B16DNS444_422_CFG5_edge_thresh_y               0x0014
    #define   LSb32DNS444_422_CFG5_edge_thresh_y                  0
    #define   LSb16DNS444_422_CFG5_edge_thresh_y                  0
    #define       bDNS444_422_CFG5_edge_thresh_y               8
    #define   MSK32DNS444_422_CFG5_edge_thresh_y                  0x000000FF

    #define     BA_DNS444_422_CFG5_edge_thresh_c               0x0015
    #define     B16DNS444_422_CFG5_edge_thresh_c               0x0014
    #define   LSb32DNS444_422_CFG5_edge_thresh_c                  8
    #define   LSb16DNS444_422_CFG5_edge_thresh_c                  8
    #define       bDNS444_422_CFG5_edge_thresh_c               8
    #define   MSK32DNS444_422_CFG5_edge_thresh_c                  0x0000FF00

    #define     BA_DNS444_422_CFG5_mode_regs                   0x0016
    #define     B16DNS444_422_CFG5_mode_regs                   0x0016
    #define   LSb32DNS444_422_CFG5_mode_regs                      16
    #define   LSb16DNS444_422_CFG5_mode_regs                      0
    #define       bDNS444_422_CFG5_mode_regs                   2
    #define   MSK32DNS444_422_CFG5_mode_regs                      0x00030000
    ///////////////////////////////////////////////////////////
    #define     RA_DNS444_422_CFG6                             0x0018

    #define     BA_DNS444_422_CFG6_yblank                      0x0018
    #define     B16DNS444_422_CFG6_yblank                      0x0018
    #define   LSb32DNS444_422_CFG6_yblank                         0
    #define   LSb16DNS444_422_CFG6_yblank                         0
    #define       bDNS444_422_CFG6_yblank                      12
    #define   MSK32DNS444_422_CFG6_yblank                         0x00000FFF

    #define     BA_DNS444_422_CFG6_cblank                      0x0019
    #define     B16DNS444_422_CFG6_cblank                      0x0018
    #define   LSb32DNS444_422_CFG6_cblank                         12
    #define   LSb16DNS444_422_CFG6_cblank                         12
    #define       bDNS444_422_CFG6_cblank                      12
    #define   MSK32DNS444_422_CFG6_cblank                         0x00FFF000

    #define     BA_DNS444_422_CFG6_use_blank_regs              0x001B
    #define     B16DNS444_422_CFG6_use_blank_regs              0x001A
    #define   LSb32DNS444_422_CFG6_use_blank_regs                 24
    #define   LSb16DNS444_422_CFG6_use_blank_regs                 8
    #define       bDNS444_422_CFG6_use_blank_regs              1
    #define   MSK32DNS444_422_CFG6_use_blank_regs                 0x01000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_DNS444_422 {
    ///////////////////////////////////////////////////////////
    #define   GET32DNS444_422_CFG0_c4_14_11tap_regs(r32)       _BFGET_(r32,12, 0)
    #define   SET32DNS444_422_CFG0_c4_14_11tap_regs(r32,v)     _BFSET_(r32,12, 0,v)
    #define   GET16DNS444_422_CFG0_c4_14_11tap_regs(r16)       _BFGET_(r16,12, 0)
    #define   SET16DNS444_422_CFG0_c4_14_11tap_regs(r16,v)     _BFSET_(r16,12, 0,v)

    #define   GET32DNS444_422_CFG0_c5_13_11tap_regs(r32)       _BFGET_(r32,25,13)
    #define   SET32DNS444_422_CFG0_c5_13_11tap_regs(r32,v)     _BFSET_(r32,25,13,v)

    #define     w32DNS444_422_CFG0                             {\
            UNSG32 mCFG0_c4_14_11tap_regs                      : 13;\
            UNSG32 mCFG0_c5_13_11tap_regs                      : 13;\
            UNSG32 RSVDx0_b26                                  :  6;\
          }
    union { UNSG32 u32DNS444_422_CFG0;
            struct w32DNS444_422_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DNS444_422_CFG1_c6_12_11tap_regs(r32)       _BFGET_(r32,12, 0)
    #define   SET32DNS444_422_CFG1_c6_12_11tap_regs(r32,v)     _BFSET_(r32,12, 0,v)
    #define   GET16DNS444_422_CFG1_c6_12_11tap_regs(r16)       _BFGET_(r16,12, 0)
    #define   SET16DNS444_422_CFG1_c6_12_11tap_regs(r16,v)     _BFSET_(r16,12, 0,v)

    #define   GET32DNS444_422_CFG1_c7_11_11tap_regs(r32)       _BFGET_(r32,25,13)
    #define   SET32DNS444_422_CFG1_c7_11_11tap_regs(r32,v)     _BFSET_(r32,25,13,v)

    #define     w32DNS444_422_CFG1                             {\
            UNSG32 mCFG1_c6_12_11tap_regs                      : 13;\
            UNSG32 mCFG1_c7_11_11tap_regs                      : 13;\
            UNSG32 RSVDx4_b26                                  :  6;\
          }
    union { UNSG32 u32DNS444_422_CFG1;
            struct w32DNS444_422_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DNS444_422_CFG2_c8_10_11tap_regs(r32)       _BFGET_(r32,12, 0)
    #define   SET32DNS444_422_CFG2_c8_10_11tap_regs(r32,v)     _BFSET_(r32,12, 0,v)
    #define   GET16DNS444_422_CFG2_c8_10_11tap_regs(r16)       _BFGET_(r16,12, 0)
    #define   SET16DNS444_422_CFG2_c8_10_11tap_regs(r16,v)     _BFSET_(r16,12, 0,v)

    #define   GET32DNS444_422_CFG2_c9_11tap_regs(r32)          _BFGET_(r32,25,13)
    #define   SET32DNS444_422_CFG2_c9_11tap_regs(r32,v)        _BFSET_(r32,25,13,v)

    #define     w32DNS444_422_CFG2                             {\
            UNSG32 mCFG2_c8_10_11tap_regs                      : 13;\
            UNSG32 mCFG2_c9_11tap_regs                         : 13;\
            UNSG32 RSVDx8_b26                                  :  6;\
          }
    union { UNSG32 u32DNS444_422_CFG2;
            struct w32DNS444_422_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DNS444_422_CFG3_c6_12_7tap_regs(r32)        _BFGET_(r32,12, 0)
    #define   SET32DNS444_422_CFG3_c6_12_7tap_regs(r32,v)      _BFSET_(r32,12, 0,v)
    #define   GET16DNS444_422_CFG3_c6_12_7tap_regs(r16)        _BFGET_(r16,12, 0)
    #define   SET16DNS444_422_CFG3_c6_12_7tap_regs(r16,v)      _BFSET_(r16,12, 0,v)

    #define   GET32DNS444_422_CFG3_c7_11_7tap_regs(r32)        _BFGET_(r32,25,13)
    #define   SET32DNS444_422_CFG3_c7_11_7tap_regs(r32,v)      _BFSET_(r32,25,13,v)

    #define     w32DNS444_422_CFG3                             {\
            UNSG32 mCFG3_c6_12_7tap_regs                       : 13;\
            UNSG32 mCFG3_c7_11_7tap_regs                       : 13;\
            UNSG32 RSVDxC_b26                                  :  6;\
          }
    union { UNSG32 u32DNS444_422_CFG3;
            struct w32DNS444_422_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DNS444_422_CFG4_c8_10_7tap_regs(r32)        _BFGET_(r32,12, 0)
    #define   SET32DNS444_422_CFG4_c8_10_7tap_regs(r32,v)      _BFSET_(r32,12, 0,v)
    #define   GET16DNS444_422_CFG4_c8_10_7tap_regs(r16)        _BFGET_(r16,12, 0)
    #define   SET16DNS444_422_CFG4_c8_10_7tap_regs(r16,v)      _BFSET_(r16,12, 0,v)

    #define   GET32DNS444_422_CFG4_c9_7tap_regs(r32)           _BFGET_(r32,25,13)
    #define   SET32DNS444_422_CFG4_c9_7tap_regs(r32,v)         _BFSET_(r32,25,13,v)

    #define     w32DNS444_422_CFG4                             {\
            UNSG32 mCFG4_c8_10_7tap_regs                       : 13;\
            UNSG32 mCFG4_c9_7tap_regs                          : 13;\
            UNSG32 RSVDx10_b26                                 :  6;\
          }
    union { UNSG32 u32DNS444_422_CFG4;
            struct w32DNS444_422_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DNS444_422_CFG5_edge_thresh_y(r32)          _BFGET_(r32, 7, 0)
    #define   SET32DNS444_422_CFG5_edge_thresh_y(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16DNS444_422_CFG5_edge_thresh_y(r16)          _BFGET_(r16, 7, 0)
    #define   SET16DNS444_422_CFG5_edge_thresh_y(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32DNS444_422_CFG5_edge_thresh_c(r32)          _BFGET_(r32,15, 8)
    #define   SET32DNS444_422_CFG5_edge_thresh_c(r32,v)        _BFSET_(r32,15, 8,v)
    #define   GET16DNS444_422_CFG5_edge_thresh_c(r16)          _BFGET_(r16,15, 8)
    #define   SET16DNS444_422_CFG5_edge_thresh_c(r16,v)        _BFSET_(r16,15, 8,v)

    #define   GET32DNS444_422_CFG5_mode_regs(r32)              _BFGET_(r32,17,16)
    #define   SET32DNS444_422_CFG5_mode_regs(r32,v)            _BFSET_(r32,17,16,v)
    #define   GET16DNS444_422_CFG5_mode_regs(r16)              _BFGET_(r16, 1, 0)
    #define   SET16DNS444_422_CFG5_mode_regs(r16,v)            _BFSET_(r16, 1, 0,v)

    #define     w32DNS444_422_CFG5                             {\
            UNSG32 uCFG5_edge_thresh_y                         :  8;\
            UNSG32 uCFG5_edge_thresh_c                         :  8;\
            UNSG32 uCFG5_mode_regs                             :  2;\
            UNSG32 RSVDx14_b18                                 : 14;\
          }
    union { UNSG32 u32DNS444_422_CFG5;
            struct w32DNS444_422_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DNS444_422_CFG6_yblank(r32)                 _BFGET_(r32,11, 0)
    #define   SET32DNS444_422_CFG6_yblank(r32,v)               _BFSET_(r32,11, 0,v)
    #define   GET16DNS444_422_CFG6_yblank(r16)                 _BFGET_(r16,11, 0)
    #define   SET16DNS444_422_CFG6_yblank(r16,v)               _BFSET_(r16,11, 0,v)

    #define   GET32DNS444_422_CFG6_cblank(r32)                 _BFGET_(r32,23,12)
    #define   SET32DNS444_422_CFG6_cblank(r32,v)               _BFSET_(r32,23,12,v)

    #define   GET32DNS444_422_CFG6_use_blank_regs(r32)         _BFGET_(r32,24,24)
    #define   SET32DNS444_422_CFG6_use_blank_regs(r32,v)       _BFSET_(r32,24,24,v)
    #define   GET16DNS444_422_CFG6_use_blank_regs(r16)         _BFGET_(r16, 8, 8)
    #define   SET16DNS444_422_CFG6_use_blank_regs(r16,v)       _BFSET_(r16, 8, 8,v)

    #define     w32DNS444_422_CFG6                             {\
            UNSG32 uCFG6_yblank                                : 12;\
            UNSG32 uCFG6_cblank                                : 12;\
            UNSG32 uCFG6_use_blank_regs                        :  1;\
            UNSG32 RSVDx18_b25                                 :  7;\
          }
    union { UNSG32 u32DNS444_422_CFG6;
            struct w32DNS444_422_CFG6;
          };
    ///////////////////////////////////////////////////////////
    } SIE_DNS444_422;

    typedef union  T32DNS444_422_CFG0
          { UNSG32 u32;
            struct w32DNS444_422_CFG0;
                 } T32DNS444_422_CFG0;
    typedef union  T32DNS444_422_CFG1
          { UNSG32 u32;
            struct w32DNS444_422_CFG1;
                 } T32DNS444_422_CFG1;
    typedef union  T32DNS444_422_CFG2
          { UNSG32 u32;
            struct w32DNS444_422_CFG2;
                 } T32DNS444_422_CFG2;
    typedef union  T32DNS444_422_CFG3
          { UNSG32 u32;
            struct w32DNS444_422_CFG3;
                 } T32DNS444_422_CFG3;
    typedef union  T32DNS444_422_CFG4
          { UNSG32 u32;
            struct w32DNS444_422_CFG4;
                 } T32DNS444_422_CFG4;
    typedef union  T32DNS444_422_CFG5
          { UNSG32 u32;
            struct w32DNS444_422_CFG5;
                 } T32DNS444_422_CFG5;
    typedef union  T32DNS444_422_CFG6
          { UNSG32 u32;
            struct w32DNS444_422_CFG6;
                 } T32DNS444_422_CFG6;
    ///////////////////////////////////////////////////////////

    typedef union  TDNS444_422_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32DNS444_422_CFG0;
                   };
                 } TDNS444_422_CFG0;
    typedef union  TDNS444_422_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32DNS444_422_CFG1;
                   };
                 } TDNS444_422_CFG1;
    typedef union  TDNS444_422_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32DNS444_422_CFG2;
                   };
                 } TDNS444_422_CFG2;
    typedef union  TDNS444_422_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32DNS444_422_CFG3;
                   };
                 } TDNS444_422_CFG3;
    typedef union  TDNS444_422_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32DNS444_422_CFG4;
                   };
                 } TDNS444_422_CFG4;
    typedef union  TDNS444_422_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32DNS444_422_CFG5;
                   };
                 } TDNS444_422_CFG5;
    typedef union  TDNS444_422_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32DNS444_422_CFG6;
                   };
                 } TDNS444_422_CFG6;

    ///////////////////////////////////////////////////////////
     SIGN32 DNS444_422_drvrd(SIE_DNS444_422 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 DNS444_422_drvwr(SIE_DNS444_422 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void DNS444_422_reset(SIE_DNS444_422 *p);
     SIGN32 DNS444_422_cmp  (SIE_DNS444_422 *p, SIE_DNS444_422 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define DNS444_422_check(p,pie,pfx,hLOG) DNS444_422_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define DNS444_422_print(p,    pfx,hLOG) DNS444_422_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: DNS444_422
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE CSC_C17O24              biu              (4,4)
///     ###
///     * Register specification of interface CSC_C17O24
///     * Defines the size of the CSC_C17O24
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %signmagn 17 C0                        4096
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00004 CFG1                 (P)
///               %signmagn 17 C1                        0
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00008 CFG2                 (P)
///               %signmagn 17 C2                        0
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x0000C CFG3                 (P)
///               %signmagn 17 C3                        0
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00010 CFG4                 (P)
///               %signmagn 17 C4                        4096
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00014 CFG5                 (P)
///               %signmagn 17 C5                        0
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00018 CFG6                 (P)
///               %signmagn 17 C6                        0
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x0001C CFG7                 (P)
///               %signmagn 17 C7                        0
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00020 CFG8                 (P)
///               %signmagn 17 C8                        4096
///                                    ###
///                                    * Signed Magnitude Coefficient in s.4.12f format
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00024 CFG9                 (P)
///               %signmagn 24 OFF1                      0
///                                    ###
///                                    * Offset value for channel 1 in s.14.9f format
///                                    * Internally multiplied by 8 to make s.14.12f
///                                    * Range depends on the maximum of CSC input and output bitwidth.
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00028 CFG10                (P)
///               %signmagn 24 OFF2                      0
///                                    ###
///                                    * Offset value for channel 2 in s.14.9f format
///                                    * Internally multiplied by 8 to make s.14.12f
///                                    * Range depends on the maximum of CSC input and output bitwidth.
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0002C CFG11                (P)
///               %signmagn 24 OFF3                      0
///                                    ###
///                                    * Offset value for channel 3 in s.14.9f format
///                                    * Internally multiplied by 8 to make s.14.12f
///                                    * Range depends on the maximum of CSC input and output bitwidth.
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00030 CFG12                (P)
///               %unsigned 12 CL1MIN                    0x0
///                                    ###
///                                    * Minimum threshold for input clamp for channel 1
///                                    * Range depends on the CSC input and output bits.
///                                    * Range 0 to Max(input bitwidth, output bitwidth)
///                                    ###
///               %unsigned 12 CL1MAX                    0x3FF
///                                    ###
///                                    * Maximum threshold for input clamp for channel 1
///                                    * Range depends on the CSC input and output bits.
///                                    * Range 0 to Max(input bitwidth, output bitwidth)
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00034 CFG13                (P)
///               %unsigned 12 CL2MIN                    0x0
///                                    ###
///                                    * Minimum threshold for input clamp for channel 2
///                                    * Range depends on the CSC input and output bits.
///                                    * Range 0 to Max(input bitwidth, output bitwidth)
///                                    ###
///               %unsigned 12 CL2MAX                    0x3FF
///                                    ###
///                                    * Maximum threshold for input clamp for channel 2
///                                    * Range depends on the CSC input and output bits.
///                                    * Range 0 to Max(input bitwidth, output bitwidth)
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00038 CFG14                (P)
///               %unsigned 12 CL3MIN                    0x0
///                                    ###
///                                    * Minimum threshold for input clamp for channel 3
///                                    * Range depends on the CSC input and output bits.
///                                    * Range 0 to Max(input bitwidth, output bitwidth)
///                                    ###
///               %unsigned 12 CL3MAX                    0x3FF
///                                    ###
///                                    * Maximum threshold for input clamp for channel 3
///                                    * Range depends on the CSC input and output bits.
///                                    * Range 0 to Max(input bitwidth, output bitwidth)
///                                    * End of CSC_C14O24 register group
///                                    ###
///               %%        8          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      60B, bits:     297b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_CSC_C17O24
#define h_CSC_C17O24 (){}

    #define     RA_CSC_C17O24_CFG0                             0x0000

    #define     BA_CSC_C17O24_CFG0_C0                          0x0000
    #define     B16CSC_C17O24_CFG0_C0                          0x0000
    #define   LSb32CSC_C17O24_CFG0_C0                             0
    #define   LSb16CSC_C17O24_CFG0_C0                             0
    #define       bCSC_C17O24_CFG0_C0                          17
    #define   MSK32CSC_C17O24_CFG0_C0                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG1                             0x0004

    #define     BA_CSC_C17O24_CFG1_C1                          0x0004
    #define     B16CSC_C17O24_CFG1_C1                          0x0004
    #define   LSb32CSC_C17O24_CFG1_C1                             0
    #define   LSb16CSC_C17O24_CFG1_C1                             0
    #define       bCSC_C17O24_CFG1_C1                          17
    #define   MSK32CSC_C17O24_CFG1_C1                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG2                             0x0008

    #define     BA_CSC_C17O24_CFG2_C2                          0x0008
    #define     B16CSC_C17O24_CFG2_C2                          0x0008
    #define   LSb32CSC_C17O24_CFG2_C2                             0
    #define   LSb16CSC_C17O24_CFG2_C2                             0
    #define       bCSC_C17O24_CFG2_C2                          17
    #define   MSK32CSC_C17O24_CFG2_C2                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG3                             0x000C

    #define     BA_CSC_C17O24_CFG3_C3                          0x000C
    #define     B16CSC_C17O24_CFG3_C3                          0x000C
    #define   LSb32CSC_C17O24_CFG3_C3                             0
    #define   LSb16CSC_C17O24_CFG3_C3                             0
    #define       bCSC_C17O24_CFG3_C3                          17
    #define   MSK32CSC_C17O24_CFG3_C3                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG4                             0x0010

    #define     BA_CSC_C17O24_CFG4_C4                          0x0010
    #define     B16CSC_C17O24_CFG4_C4                          0x0010
    #define   LSb32CSC_C17O24_CFG4_C4                             0
    #define   LSb16CSC_C17O24_CFG4_C4                             0
    #define       bCSC_C17O24_CFG4_C4                          17
    #define   MSK32CSC_C17O24_CFG4_C4                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG5                             0x0014

    #define     BA_CSC_C17O24_CFG5_C5                          0x0014
    #define     B16CSC_C17O24_CFG5_C5                          0x0014
    #define   LSb32CSC_C17O24_CFG5_C5                             0
    #define   LSb16CSC_C17O24_CFG5_C5                             0
    #define       bCSC_C17O24_CFG5_C5                          17
    #define   MSK32CSC_C17O24_CFG5_C5                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG6                             0x0018

    #define     BA_CSC_C17O24_CFG6_C6                          0x0018
    #define     B16CSC_C17O24_CFG6_C6                          0x0018
    #define   LSb32CSC_C17O24_CFG6_C6                             0
    #define   LSb16CSC_C17O24_CFG6_C6                             0
    #define       bCSC_C17O24_CFG6_C6                          17
    #define   MSK32CSC_C17O24_CFG6_C6                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG7                             0x001C

    #define     BA_CSC_C17O24_CFG7_C7                          0x001C
    #define     B16CSC_C17O24_CFG7_C7                          0x001C
    #define   LSb32CSC_C17O24_CFG7_C7                             0
    #define   LSb16CSC_C17O24_CFG7_C7                             0
    #define       bCSC_C17O24_CFG7_C7                          17
    #define   MSK32CSC_C17O24_CFG7_C7                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG8                             0x0020

    #define     BA_CSC_C17O24_CFG8_C8                          0x0020
    #define     B16CSC_C17O24_CFG8_C8                          0x0020
    #define   LSb32CSC_C17O24_CFG8_C8                             0
    #define   LSb16CSC_C17O24_CFG8_C8                             0
    #define       bCSC_C17O24_CFG8_C8                          17
    #define   MSK32CSC_C17O24_CFG8_C8                             0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG9                             0x0024

    #define     BA_CSC_C17O24_CFG9_OFF1                        0x0024
    #define     B16CSC_C17O24_CFG9_OFF1                        0x0024
    #define   LSb32CSC_C17O24_CFG9_OFF1                           0
    #define   LSb16CSC_C17O24_CFG9_OFF1                           0
    #define       bCSC_C17O24_CFG9_OFF1                        24
    #define   MSK32CSC_C17O24_CFG9_OFF1                           0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG10                            0x0028

    #define     BA_CSC_C17O24_CFG10_OFF2                       0x0028
    #define     B16CSC_C17O24_CFG10_OFF2                       0x0028
    #define   LSb32CSC_C17O24_CFG10_OFF2                          0
    #define   LSb16CSC_C17O24_CFG10_OFF2                          0
    #define       bCSC_C17O24_CFG10_OFF2                       24
    #define   MSK32CSC_C17O24_CFG10_OFF2                          0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG11                            0x002C

    #define     BA_CSC_C17O24_CFG11_OFF3                       0x002C
    #define     B16CSC_C17O24_CFG11_OFF3                       0x002C
    #define   LSb32CSC_C17O24_CFG11_OFF3                          0
    #define   LSb16CSC_C17O24_CFG11_OFF3                          0
    #define       bCSC_C17O24_CFG11_OFF3                       24
    #define   MSK32CSC_C17O24_CFG11_OFF3                          0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG12                            0x0030

    #define     BA_CSC_C17O24_CFG12_CL1MIN                     0x0030
    #define     B16CSC_C17O24_CFG12_CL1MIN                     0x0030
    #define   LSb32CSC_C17O24_CFG12_CL1MIN                        0
    #define   LSb16CSC_C17O24_CFG12_CL1MIN                        0
    #define       bCSC_C17O24_CFG12_CL1MIN                     12
    #define   MSK32CSC_C17O24_CFG12_CL1MIN                        0x00000FFF

    #define     BA_CSC_C17O24_CFG12_CL1MAX                     0x0031
    #define     B16CSC_C17O24_CFG12_CL1MAX                     0x0030
    #define   LSb32CSC_C17O24_CFG12_CL1MAX                        12
    #define   LSb16CSC_C17O24_CFG12_CL1MAX                        12
    #define       bCSC_C17O24_CFG12_CL1MAX                     12
    #define   MSK32CSC_C17O24_CFG12_CL1MAX                        0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG13                            0x0034

    #define     BA_CSC_C17O24_CFG13_CL2MIN                     0x0034
    #define     B16CSC_C17O24_CFG13_CL2MIN                     0x0034
    #define   LSb32CSC_C17O24_CFG13_CL2MIN                        0
    #define   LSb16CSC_C17O24_CFG13_CL2MIN                        0
    #define       bCSC_C17O24_CFG13_CL2MIN                     12
    #define   MSK32CSC_C17O24_CFG13_CL2MIN                        0x00000FFF

    #define     BA_CSC_C17O24_CFG13_CL2MAX                     0x0035
    #define     B16CSC_C17O24_CFG13_CL2MAX                     0x0034
    #define   LSb32CSC_C17O24_CFG13_CL2MAX                        12
    #define   LSb16CSC_C17O24_CFG13_CL2MAX                        12
    #define       bCSC_C17O24_CFG13_CL2MAX                     12
    #define   MSK32CSC_C17O24_CFG13_CL2MAX                        0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_CSC_C17O24_CFG14                            0x0038

    #define     BA_CSC_C17O24_CFG14_CL3MIN                     0x0038
    #define     B16CSC_C17O24_CFG14_CL3MIN                     0x0038
    #define   LSb32CSC_C17O24_CFG14_CL3MIN                        0
    #define   LSb16CSC_C17O24_CFG14_CL3MIN                        0
    #define       bCSC_C17O24_CFG14_CL3MIN                     12
    #define   MSK32CSC_C17O24_CFG14_CL3MIN                        0x00000FFF

    #define     BA_CSC_C17O24_CFG14_CL3MAX                     0x0039
    #define     B16CSC_C17O24_CFG14_CL3MAX                     0x0038
    #define   LSb32CSC_C17O24_CFG14_CL3MAX                        12
    #define   LSb16CSC_C17O24_CFG14_CL3MAX                        12
    #define       bCSC_C17O24_CFG14_CL3MAX                     12
    #define   MSK32CSC_C17O24_CFG14_CL3MAX                        0x00FFF000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_CSC_C17O24 {
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG0_C0(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG0_C0(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG0                             {\
            UNSG32 mCFG0_C0                                    : 17;\
            UNSG32 RSVDx0_b17                                  : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG0;
            struct w32CSC_C17O24_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG1_C1(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG1_C1(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG1                             {\
            UNSG32 mCFG1_C1                                    : 17;\
            UNSG32 RSVDx4_b17                                  : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG1;
            struct w32CSC_C17O24_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG2_C2(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG2_C2(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG2                             {\
            UNSG32 mCFG2_C2                                    : 17;\
            UNSG32 RSVDx8_b17                                  : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG2;
            struct w32CSC_C17O24_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG3_C3(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG3_C3(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG3                             {\
            UNSG32 mCFG3_C3                                    : 17;\
            UNSG32 RSVDxC_b17                                  : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG3;
            struct w32CSC_C17O24_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG4_C4(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG4_C4(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG4                             {\
            UNSG32 mCFG4_C4                                    : 17;\
            UNSG32 RSVDx10_b17                                 : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG4;
            struct w32CSC_C17O24_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG5_C5(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG5_C5(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG5                             {\
            UNSG32 mCFG5_C5                                    : 17;\
            UNSG32 RSVDx14_b17                                 : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG5;
            struct w32CSC_C17O24_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG6_C6(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG6_C6(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG6                             {\
            UNSG32 mCFG6_C6                                    : 17;\
            UNSG32 RSVDx18_b17                                 : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG6;
            struct w32CSC_C17O24_CFG6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG7_C7(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG7_C7(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG7                             {\
            UNSG32 mCFG7_C7                                    : 17;\
            UNSG32 RSVDx1C_b17                                 : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG7;
            struct w32CSC_C17O24_CFG7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG8_C8(r32)                     _BFGET_(r32,16, 0)
    #define   SET32CSC_C17O24_CFG8_C8(r32,v)                   _BFSET_(r32,16, 0,v)

    #define     w32CSC_C17O24_CFG8                             {\
            UNSG32 mCFG8_C8                                    : 17;\
            UNSG32 RSVDx20_b17                                 : 15;\
          }
    union { UNSG32 u32CSC_C17O24_CFG8;
            struct w32CSC_C17O24_CFG8;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG9_OFF1(r32)                   _BFGET_(r32,23, 0)
    #define   SET32CSC_C17O24_CFG9_OFF1(r32,v)                 _BFSET_(r32,23, 0,v)

    #define     w32CSC_C17O24_CFG9                             {\
            UNSG32 mCFG9_OFF1                                  : 24;\
            UNSG32 RSVDx24_b24                                 :  8;\
          }
    union { UNSG32 u32CSC_C17O24_CFG9;
            struct w32CSC_C17O24_CFG9;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG10_OFF2(r32)                  _BFGET_(r32,23, 0)
    #define   SET32CSC_C17O24_CFG10_OFF2(r32,v)                _BFSET_(r32,23, 0,v)

    #define     w32CSC_C17O24_CFG10                            {\
            UNSG32 mCFG10_OFF2                                 : 24;\
            UNSG32 RSVDx28_b24                                 :  8;\
          }
    union { UNSG32 u32CSC_C17O24_CFG10;
            struct w32CSC_C17O24_CFG10;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG11_OFF3(r32)                  _BFGET_(r32,23, 0)
    #define   SET32CSC_C17O24_CFG11_OFF3(r32,v)                _BFSET_(r32,23, 0,v)

    #define     w32CSC_C17O24_CFG11                            {\
            UNSG32 mCFG11_OFF3                                 : 24;\
            UNSG32 RSVDx2C_b24                                 :  8;\
          }
    union { UNSG32 u32CSC_C17O24_CFG11;
            struct w32CSC_C17O24_CFG11;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG12_CL1MIN(r32)                _BFGET_(r32,11, 0)
    #define   SET32CSC_C17O24_CFG12_CL1MIN(r32,v)              _BFSET_(r32,11, 0,v)
    #define   GET16CSC_C17O24_CFG12_CL1MIN(r16)                _BFGET_(r16,11, 0)
    #define   SET16CSC_C17O24_CFG12_CL1MIN(r16,v)              _BFSET_(r16,11, 0,v)

    #define   GET32CSC_C17O24_CFG12_CL1MAX(r32)                _BFGET_(r32,23,12)
    #define   SET32CSC_C17O24_CFG12_CL1MAX(r32,v)              _BFSET_(r32,23,12,v)

    #define     w32CSC_C17O24_CFG12                            {\
            UNSG32 uCFG12_CL1MIN                               : 12;\
            UNSG32 uCFG12_CL1MAX                               : 12;\
            UNSG32 RSVDx30_b24                                 :  8;\
          }
    union { UNSG32 u32CSC_C17O24_CFG12;
            struct w32CSC_C17O24_CFG12;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG13_CL2MIN(r32)                _BFGET_(r32,11, 0)
    #define   SET32CSC_C17O24_CFG13_CL2MIN(r32,v)              _BFSET_(r32,11, 0,v)
    #define   GET16CSC_C17O24_CFG13_CL2MIN(r16)                _BFGET_(r16,11, 0)
    #define   SET16CSC_C17O24_CFG13_CL2MIN(r16,v)              _BFSET_(r16,11, 0,v)

    #define   GET32CSC_C17O24_CFG13_CL2MAX(r32)                _BFGET_(r32,23,12)
    #define   SET32CSC_C17O24_CFG13_CL2MAX(r32,v)              _BFSET_(r32,23,12,v)

    #define     w32CSC_C17O24_CFG13                            {\
            UNSG32 uCFG13_CL2MIN                               : 12;\
            UNSG32 uCFG13_CL2MAX                               : 12;\
            UNSG32 RSVDx34_b24                                 :  8;\
          }
    union { UNSG32 u32CSC_C17O24_CFG13;
            struct w32CSC_C17O24_CFG13;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSC_C17O24_CFG14_CL3MIN(r32)                _BFGET_(r32,11, 0)
    #define   SET32CSC_C17O24_CFG14_CL3MIN(r32,v)              _BFSET_(r32,11, 0,v)
    #define   GET16CSC_C17O24_CFG14_CL3MIN(r16)                _BFGET_(r16,11, 0)
    #define   SET16CSC_C17O24_CFG14_CL3MIN(r16,v)              _BFSET_(r16,11, 0,v)

    #define   GET32CSC_C17O24_CFG14_CL3MAX(r32)                _BFGET_(r32,23,12)
    #define   SET32CSC_C17O24_CFG14_CL3MAX(r32,v)              _BFSET_(r32,23,12,v)

    #define     w32CSC_C17O24_CFG14                            {\
            UNSG32 uCFG14_CL3MIN                               : 12;\
            UNSG32 uCFG14_CL3MAX                               : 12;\
            UNSG32 RSVDx38_b24                                 :  8;\
          }
    union { UNSG32 u32CSC_C17O24_CFG14;
            struct w32CSC_C17O24_CFG14;
          };
    ///////////////////////////////////////////////////////////
    } SIE_CSC_C17O24;

    typedef union  T32CSC_C17O24_CFG0
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG0;
                 } T32CSC_C17O24_CFG0;
    typedef union  T32CSC_C17O24_CFG1
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG1;
                 } T32CSC_C17O24_CFG1;
    typedef union  T32CSC_C17O24_CFG2
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG2;
                 } T32CSC_C17O24_CFG2;
    typedef union  T32CSC_C17O24_CFG3
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG3;
                 } T32CSC_C17O24_CFG3;
    typedef union  T32CSC_C17O24_CFG4
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG4;
                 } T32CSC_C17O24_CFG4;
    typedef union  T32CSC_C17O24_CFG5
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG5;
                 } T32CSC_C17O24_CFG5;
    typedef union  T32CSC_C17O24_CFG6
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG6;
                 } T32CSC_C17O24_CFG6;
    typedef union  T32CSC_C17O24_CFG7
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG7;
                 } T32CSC_C17O24_CFG7;
    typedef union  T32CSC_C17O24_CFG8
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG8;
                 } T32CSC_C17O24_CFG8;
    typedef union  T32CSC_C17O24_CFG9
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG9;
                 } T32CSC_C17O24_CFG9;
    typedef union  T32CSC_C17O24_CFG10
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG10;
                 } T32CSC_C17O24_CFG10;
    typedef union  T32CSC_C17O24_CFG11
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG11;
                 } T32CSC_C17O24_CFG11;
    typedef union  T32CSC_C17O24_CFG12
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG12;
                 } T32CSC_C17O24_CFG12;
    typedef union  T32CSC_C17O24_CFG13
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG13;
                 } T32CSC_C17O24_CFG13;
    typedef union  T32CSC_C17O24_CFG14
          { UNSG32 u32;
            struct w32CSC_C17O24_CFG14;
                 } T32CSC_C17O24_CFG14;
    ///////////////////////////////////////////////////////////

    typedef union  TCSC_C17O24_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG0;
                   };
                 } TCSC_C17O24_CFG0;
    typedef union  TCSC_C17O24_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG1;
                   };
                 } TCSC_C17O24_CFG1;
    typedef union  TCSC_C17O24_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG2;
                   };
                 } TCSC_C17O24_CFG2;
    typedef union  TCSC_C17O24_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG3;
                   };
                 } TCSC_C17O24_CFG3;
    typedef union  TCSC_C17O24_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG4;
                   };
                 } TCSC_C17O24_CFG4;
    typedef union  TCSC_C17O24_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG5;
                   };
                 } TCSC_C17O24_CFG5;
    typedef union  TCSC_C17O24_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG6;
                   };
                 } TCSC_C17O24_CFG6;
    typedef union  TCSC_C17O24_CFG7
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG7;
                   };
                 } TCSC_C17O24_CFG7;
    typedef union  TCSC_C17O24_CFG8
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG8;
                   };
                 } TCSC_C17O24_CFG8;
    typedef union  TCSC_C17O24_CFG9
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG9;
                   };
                 } TCSC_C17O24_CFG9;
    typedef union  TCSC_C17O24_CFG10
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG10;
                   };
                 } TCSC_C17O24_CFG10;
    typedef union  TCSC_C17O24_CFG11
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG11;
                   };
                 } TCSC_C17O24_CFG11;
    typedef union  TCSC_C17O24_CFG12
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG12;
                   };
                 } TCSC_C17O24_CFG12;
    typedef union  TCSC_C17O24_CFG13
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG13;
                   };
                 } TCSC_C17O24_CFG13;
    typedef union  TCSC_C17O24_CFG14
          { UNSG32 u32[1];
            struct {
            struct w32CSC_C17O24_CFG14;
                   };
                 } TCSC_C17O24_CFG14;

    ///////////////////////////////////////////////////////////
     SIGN32 CSC_C17O24_drvrd(SIE_CSC_C17O24 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 CSC_C17O24_drvwr(SIE_CSC_C17O24 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void CSC_C17O24_reset(SIE_CSC_C17O24 *p);
     SIGN32 CSC_C17O24_cmp  (SIE_CSC_C17O24 *p, SIE_CSC_C17O24 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define CSC_C17O24_check(p,pie,pfx,hLOG) CSC_C17O24_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define CSC_C17O24_print(p,    pfx,hLOG) CSC_C17O24_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: CSC_C17O24
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE UPS_420_422_HDMI_12b    biu              (4,4)
///     ###
///     * Register specification of interface UPS_420_422_HDMI_12b
///     * Defines the size of the UPS_420_422_HDMI_12b
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 1  enable                    0x0
///                                    ###
///                                    * 1'd1 : enable ups420_422
///                                    * 1'd0 : bypass
///                                    ###
///               %unsigned 1  msbswap                   0x0
///                                    ###
///                                    * 1'd0 : it assume first pixel consist of msb 5bit of chroma(C) and second pixel have lsb 5bit of chroma(C).
///                                    * 1'd1 : vice versa(means it assume first pixel consist of lsb 5bit of Chroma and second pixel have msb 5bit of chroma.
///                                    ###
///               %unsigned 1  cswap_regs                0x0
///                                    ###
///                                    * if enable, swaps output choma
///                                    ###
///               %unsigned 1  yshift_regs               0x0
///                                    ###
///                                    * Advances output luma by 1 clock.
///                                    ###
///               %unsigned 1  cshift_regs               0x0
///                                    ###
///                                    * Delayed output chroma by 1 clock
///                                    ###
///               %unsigned 1  sft_rst                   0x0
///                                    ###
///                                    * This is active high clear or soft reset bit. When it is high, UPS_420_422 reset to initial state.
///                                    ###
///               %unsigned 1  use_blank                 0x0
///                                    ###
///                                    * 0 : Use boundary pixel repetition for boundary interpolation
///                                    * 1 : Use blank pixel programmed using yblank_regs and cblank_regs for boundary interpolation.
///                                    ###
///               %unsigned 12 yblank_regs               0x0
///                                    ###
///                                    * luma blank value for initial and end of line pixel taps.
///                                    ###
///               %unsigned 12 cblank_regs               0x800
///                                    ###
///                                    * chroma blank value for initial and end of line pixel taps.
///                                    ###
///               %unsigned 1  hdmi_to_sp_en             0x0
///                                    ###
///                                    * Output data format is YUV420 SP.
///                                    ###
///     @ 0x00004 CFG1                 (P)
///               %unsigned 13 ups_c0                    0x0
///                                    ###
///                                    * 13 bit upsampler coefficient 0 in 2s complement format.
///                                    ###
///               %unsigned 13 ups_c1                    0x0
///                                    ###
///                                    * 13 bit upsampler coefficient 1 in 2s complement format.
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00008 CFG2                 (P)
///               %unsigned 13 ups_c2                    0x0
///                                    ###
///                                    * 13 bit upsampler coefficient 2 in 2s complement format.
///                                    ###
///               %unsigned 13 ups_c3                    0x0
///                                    ###
///                                    * 13 bit upsampler coefficient 3 in 2s complement format.
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x0000C CFG3                 (P)
///               %unsigned 13 ups_c4                    0x400
///                                    ###
///                                    * 13 bit upsampler coefficient 4 in 2s complement format.
///                                    ###
///               %unsigned 13 ups_c5                    0x800
///                                    ###
///                                    * 13 bit upsampler coefficient 5 in 2s complement format.
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00010 CFG4                 (P)
///               %unsigned 13 ups_c6                    0x400
///                                    ###
///                                    * 13 bit upsampler coefficient 6 in 2s complement format.
///                                    ###
///               %%        19         # Stuffing bits...
///     @ 0x00014 CFG5                 (P)
///               %unsigned 13 hres_regs                 0xF00
///                                    ###
///                                    * this should be programmed with active pixel count in a line.
///                                    ###
///               %unsigned 13 htot_regs                 0x1130
///                                    ###
///                                    * this should be programmed with total pixel count in line.
///                                    ###
///               %unsigned 1  auto_pixcnt               0x0
///                                    ###
///                                    * 0: hres_regs and htot_regs will be used to generate hde timing and delay.
///                                    * 1: automatically count hres and htotal pixel count. This will require hde is blanking region.
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x00018 CFG6                 (P)
///               %unsigned 6  top_crop                  0x0
///                                    ###
///                                    * =0 for HDMI pack.
///                                    * Crop for top lines.(It should be multiple of 2)
///                                    ###
///               %unsigned 6  bot_crop                  0x0
///                                    ###
///                                    * =0 for HDMI pack.
///                                    * Crop for bot lines.(It should be multiple of 2)
///                                    ###
///               %unsigned 6  left_crop                 0x0
///                                    ###
///                                    * =0 for HDMI pack.
///                                    * Crop for left pixels.
///                                    ###
///               %unsigned 6  right_crop                0x0
///                                    ###
///                                    * =0 for HDMI pack.
///                                    * Crop for right pixels.
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0001C CFG7                 (P)
///               %unsigned 13 vres_regs                 0x870
///                                    ###
///                                    * Input vertical resolution
///                                    ###
///               %%        19         # Stuffing bits...
///     @ 0x00020 CFG8                 (P)
///               %unsigned 1  pdwn_regs                 0x0
///                                    ###
///                                    * Wired to internal SRAMs' pwdn port.
///                                    ###
///               %unsigned 1  pdlvmc_regs               0x0
///                                    ###
///                                    * Wired to internal SRAMs' pdlvmc port.
///                                    ###
///               %unsigned 1  pdfvssm_regs              0x0
///                                    ###
///                                    * Wired to internal SRAMs' pdfvssm port.
///                                    ###
///               %unsigned 2  dpwr_regs                 0x3
///                                    ###
///                                    * Internal Dynamic power control.
///                                    * Bit[1] - cg_en: controls clock to internal logic.
///                                    * 1: enables internal dynamic clock gating.
///                                    * 0: disables internal dynamic clock gating.
///                                    * Bit[0] - ctrl_cen: controls CEN to SRAMs
///                                    * 1: enables SRAMs dynamically.
///                                    * 0: SRAMs always enabled.
///                                    * End of UPS_420_422_HDMI_12b register group
///                                    ###
///               %%        27         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      36B, bits:     192b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_UPS_420_422_HDMI_12b
#define h_UPS_420_422_HDMI_12b (){}

    #define     RA_UPS_420_422_HDMI_12b_CFG0                   0x0000

    #define     BA_UPS_420_422_HDMI_12b_CFG0_enable            0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_enable            0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_enable               0
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_enable               0
    #define       bUPS_420_422_HDMI_12b_CFG0_enable            1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_enable               0x00000001

    #define     BA_UPS_420_422_HDMI_12b_CFG0_msbswap           0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_msbswap           0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_msbswap              1
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_msbswap              1
    #define       bUPS_420_422_HDMI_12b_CFG0_msbswap           1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_msbswap              0x00000002

    #define     BA_UPS_420_422_HDMI_12b_CFG0_cswap_regs        0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_cswap_regs        0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_cswap_regs           2
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_cswap_regs           2
    #define       bUPS_420_422_HDMI_12b_CFG0_cswap_regs        1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_cswap_regs           0x00000004

    #define     BA_UPS_420_422_HDMI_12b_CFG0_yshift_regs       0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_yshift_regs       0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_yshift_regs          3
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_yshift_regs          3
    #define       bUPS_420_422_HDMI_12b_CFG0_yshift_regs       1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_yshift_regs          0x00000008

    #define     BA_UPS_420_422_HDMI_12b_CFG0_cshift_regs       0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_cshift_regs       0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_cshift_regs          4
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_cshift_regs          4
    #define       bUPS_420_422_HDMI_12b_CFG0_cshift_regs       1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_cshift_regs          0x00000010

    #define     BA_UPS_420_422_HDMI_12b_CFG0_sft_rst           0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_sft_rst           0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_sft_rst              5
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_sft_rst              5
    #define       bUPS_420_422_HDMI_12b_CFG0_sft_rst           1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_sft_rst              0x00000020

    #define     BA_UPS_420_422_HDMI_12b_CFG0_use_blank         0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_use_blank         0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_use_blank            6
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_use_blank            6
    #define       bUPS_420_422_HDMI_12b_CFG0_use_blank         1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_use_blank            0x00000040

    #define     BA_UPS_420_422_HDMI_12b_CFG0_yblank_regs       0x0000
    #define     B16UPS_420_422_HDMI_12b_CFG0_yblank_regs       0x0000
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_yblank_regs          7
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_yblank_regs          7
    #define       bUPS_420_422_HDMI_12b_CFG0_yblank_regs       12
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_yblank_regs          0x0007FF80

    #define     BA_UPS_420_422_HDMI_12b_CFG0_cblank_regs       0x0002
    #define     B16UPS_420_422_HDMI_12b_CFG0_cblank_regs       0x0002
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_cblank_regs          19
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_cblank_regs          3
    #define       bUPS_420_422_HDMI_12b_CFG0_cblank_regs       12
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_cblank_regs          0x7FF80000

    #define     BA_UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en     0x0003
    #define     B16UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en     0x0002
    #define   LSb32UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en        31
    #define   LSb16UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en        15
    #define       bUPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en     1
    #define   MSK32UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en        0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG1                   0x0004

    #define     BA_UPS_420_422_HDMI_12b_CFG1_ups_c0            0x0004
    #define     B16UPS_420_422_HDMI_12b_CFG1_ups_c0            0x0004
    #define   LSb32UPS_420_422_HDMI_12b_CFG1_ups_c0               0
    #define   LSb16UPS_420_422_HDMI_12b_CFG1_ups_c0               0
    #define       bUPS_420_422_HDMI_12b_CFG1_ups_c0            13
    #define   MSK32UPS_420_422_HDMI_12b_CFG1_ups_c0               0x00001FFF

    #define     BA_UPS_420_422_HDMI_12b_CFG1_ups_c1            0x0005
    #define     B16UPS_420_422_HDMI_12b_CFG1_ups_c1            0x0004
    #define   LSb32UPS_420_422_HDMI_12b_CFG1_ups_c1               13
    #define   LSb16UPS_420_422_HDMI_12b_CFG1_ups_c1               13
    #define       bUPS_420_422_HDMI_12b_CFG1_ups_c1            13
    #define   MSK32UPS_420_422_HDMI_12b_CFG1_ups_c1               0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG2                   0x0008

    #define     BA_UPS_420_422_HDMI_12b_CFG2_ups_c2            0x0008
    #define     B16UPS_420_422_HDMI_12b_CFG2_ups_c2            0x0008
    #define   LSb32UPS_420_422_HDMI_12b_CFG2_ups_c2               0
    #define   LSb16UPS_420_422_HDMI_12b_CFG2_ups_c2               0
    #define       bUPS_420_422_HDMI_12b_CFG2_ups_c2            13
    #define   MSK32UPS_420_422_HDMI_12b_CFG2_ups_c2               0x00001FFF

    #define     BA_UPS_420_422_HDMI_12b_CFG2_ups_c3            0x0009
    #define     B16UPS_420_422_HDMI_12b_CFG2_ups_c3            0x0008
    #define   LSb32UPS_420_422_HDMI_12b_CFG2_ups_c3               13
    #define   LSb16UPS_420_422_HDMI_12b_CFG2_ups_c3               13
    #define       bUPS_420_422_HDMI_12b_CFG2_ups_c3            13
    #define   MSK32UPS_420_422_HDMI_12b_CFG2_ups_c3               0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG3                   0x000C

    #define     BA_UPS_420_422_HDMI_12b_CFG3_ups_c4            0x000C
    #define     B16UPS_420_422_HDMI_12b_CFG3_ups_c4            0x000C
    #define   LSb32UPS_420_422_HDMI_12b_CFG3_ups_c4               0
    #define   LSb16UPS_420_422_HDMI_12b_CFG3_ups_c4               0
    #define       bUPS_420_422_HDMI_12b_CFG3_ups_c4            13
    #define   MSK32UPS_420_422_HDMI_12b_CFG3_ups_c4               0x00001FFF

    #define     BA_UPS_420_422_HDMI_12b_CFG3_ups_c5            0x000D
    #define     B16UPS_420_422_HDMI_12b_CFG3_ups_c5            0x000C
    #define   LSb32UPS_420_422_HDMI_12b_CFG3_ups_c5               13
    #define   LSb16UPS_420_422_HDMI_12b_CFG3_ups_c5               13
    #define       bUPS_420_422_HDMI_12b_CFG3_ups_c5            13
    #define   MSK32UPS_420_422_HDMI_12b_CFG3_ups_c5               0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG4                   0x0010

    #define     BA_UPS_420_422_HDMI_12b_CFG4_ups_c6            0x0010
    #define     B16UPS_420_422_HDMI_12b_CFG4_ups_c6            0x0010
    #define   LSb32UPS_420_422_HDMI_12b_CFG4_ups_c6               0
    #define   LSb16UPS_420_422_HDMI_12b_CFG4_ups_c6               0
    #define       bUPS_420_422_HDMI_12b_CFG4_ups_c6            13
    #define   MSK32UPS_420_422_HDMI_12b_CFG4_ups_c6               0x00001FFF
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG5                   0x0014

    #define     BA_UPS_420_422_HDMI_12b_CFG5_hres_regs         0x0014
    #define     B16UPS_420_422_HDMI_12b_CFG5_hres_regs         0x0014
    #define   LSb32UPS_420_422_HDMI_12b_CFG5_hres_regs            0
    #define   LSb16UPS_420_422_HDMI_12b_CFG5_hres_regs            0
    #define       bUPS_420_422_HDMI_12b_CFG5_hres_regs         13
    #define   MSK32UPS_420_422_HDMI_12b_CFG5_hres_regs            0x00001FFF

    #define     BA_UPS_420_422_HDMI_12b_CFG5_htot_regs         0x0015
    #define     B16UPS_420_422_HDMI_12b_CFG5_htot_regs         0x0014
    #define   LSb32UPS_420_422_HDMI_12b_CFG5_htot_regs            13
    #define   LSb16UPS_420_422_HDMI_12b_CFG5_htot_regs            13
    #define       bUPS_420_422_HDMI_12b_CFG5_htot_regs         13
    #define   MSK32UPS_420_422_HDMI_12b_CFG5_htot_regs            0x03FFE000

    #define     BA_UPS_420_422_HDMI_12b_CFG5_auto_pixcnt       0x0017
    #define     B16UPS_420_422_HDMI_12b_CFG5_auto_pixcnt       0x0016
    #define   LSb32UPS_420_422_HDMI_12b_CFG5_auto_pixcnt          26
    #define   LSb16UPS_420_422_HDMI_12b_CFG5_auto_pixcnt          10
    #define       bUPS_420_422_HDMI_12b_CFG5_auto_pixcnt       1
    #define   MSK32UPS_420_422_HDMI_12b_CFG5_auto_pixcnt          0x04000000
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG6                   0x0018

    #define     BA_UPS_420_422_HDMI_12b_CFG6_top_crop          0x0018
    #define     B16UPS_420_422_HDMI_12b_CFG6_top_crop          0x0018
    #define   LSb32UPS_420_422_HDMI_12b_CFG6_top_crop             0
    #define   LSb16UPS_420_422_HDMI_12b_CFG6_top_crop             0
    #define       bUPS_420_422_HDMI_12b_CFG6_top_crop          6
    #define   MSK32UPS_420_422_HDMI_12b_CFG6_top_crop             0x0000003F

    #define     BA_UPS_420_422_HDMI_12b_CFG6_bot_crop          0x0018
    #define     B16UPS_420_422_HDMI_12b_CFG6_bot_crop          0x0018
    #define   LSb32UPS_420_422_HDMI_12b_CFG6_bot_crop             6
    #define   LSb16UPS_420_422_HDMI_12b_CFG6_bot_crop             6
    #define       bUPS_420_422_HDMI_12b_CFG6_bot_crop          6
    #define   MSK32UPS_420_422_HDMI_12b_CFG6_bot_crop             0x00000FC0

    #define     BA_UPS_420_422_HDMI_12b_CFG6_left_crop         0x0019
    #define     B16UPS_420_422_HDMI_12b_CFG6_left_crop         0x0018
    #define   LSb32UPS_420_422_HDMI_12b_CFG6_left_crop            12
    #define   LSb16UPS_420_422_HDMI_12b_CFG6_left_crop            12
    #define       bUPS_420_422_HDMI_12b_CFG6_left_crop         6
    #define   MSK32UPS_420_422_HDMI_12b_CFG6_left_crop            0x0003F000

    #define     BA_UPS_420_422_HDMI_12b_CFG6_right_crop        0x001A
    #define     B16UPS_420_422_HDMI_12b_CFG6_right_crop        0x001A
    #define   LSb32UPS_420_422_HDMI_12b_CFG6_right_crop           18
    #define   LSb16UPS_420_422_HDMI_12b_CFG6_right_crop           2
    #define       bUPS_420_422_HDMI_12b_CFG6_right_crop        6
    #define   MSK32UPS_420_422_HDMI_12b_CFG6_right_crop           0x00FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG7                   0x001C

    #define     BA_UPS_420_422_HDMI_12b_CFG7_vres_regs         0x001C
    #define     B16UPS_420_422_HDMI_12b_CFG7_vres_regs         0x001C
    #define   LSb32UPS_420_422_HDMI_12b_CFG7_vres_regs            0
    #define   LSb16UPS_420_422_HDMI_12b_CFG7_vres_regs            0
    #define       bUPS_420_422_HDMI_12b_CFG7_vres_regs         13
    #define   MSK32UPS_420_422_HDMI_12b_CFG7_vres_regs            0x00001FFF
    ///////////////////////////////////////////////////////////
    #define     RA_UPS_420_422_HDMI_12b_CFG8                   0x0020

    #define     BA_UPS_420_422_HDMI_12b_CFG8_pdwn_regs         0x0020
    #define     B16UPS_420_422_HDMI_12b_CFG8_pdwn_regs         0x0020
    #define   LSb32UPS_420_422_HDMI_12b_CFG8_pdwn_regs            0
    #define   LSb16UPS_420_422_HDMI_12b_CFG8_pdwn_regs            0
    #define       bUPS_420_422_HDMI_12b_CFG8_pdwn_regs         1
    #define   MSK32UPS_420_422_HDMI_12b_CFG8_pdwn_regs            0x00000001

    #define     BA_UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs       0x0020
    #define     B16UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs       0x0020
    #define   LSb32UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs          1
    #define   LSb16UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs          1
    #define       bUPS_420_422_HDMI_12b_CFG8_pdlvmc_regs       1
    #define   MSK32UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs          0x00000002

    #define     BA_UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs      0x0020
    #define     B16UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs      0x0020
    #define   LSb32UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs         2
    #define   LSb16UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs         2
    #define       bUPS_420_422_HDMI_12b_CFG8_pdfvssm_regs      1
    #define   MSK32UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs         0x00000004

    #define     BA_UPS_420_422_HDMI_12b_CFG8_dpwr_regs         0x0020
    #define     B16UPS_420_422_HDMI_12b_CFG8_dpwr_regs         0x0020
    #define   LSb32UPS_420_422_HDMI_12b_CFG8_dpwr_regs            3
    #define   LSb16UPS_420_422_HDMI_12b_CFG8_dpwr_regs            3
    #define       bUPS_420_422_HDMI_12b_CFG8_dpwr_regs         2
    #define   MSK32UPS_420_422_HDMI_12b_CFG8_dpwr_regs            0x00000018
    ///////////////////////////////////////////////////////////

    typedef struct SIE_UPS_420_422_HDMI_12b {
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG0_enable(r32)       _BFGET_(r32, 0, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_enable(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_enable(r16)       _BFGET_(r16, 0, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_enable(r16,v)     _BFSET_(r16, 0, 0,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_msbswap(r32)      _BFGET_(r32, 1, 1)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_msbswap(r32,v)    _BFSET_(r32, 1, 1,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_msbswap(r16)      _BFGET_(r16, 1, 1)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_msbswap(r16,v)    _BFSET_(r16, 1, 1,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_cswap_regs(r32)   _BFGET_(r32, 2, 2)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_cswap_regs(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_cswap_regs(r16)   _BFGET_(r16, 2, 2)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_cswap_regs(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_yshift_regs(r32)  _BFGET_(r32, 3, 3)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_yshift_regs(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_yshift_regs(r16)  _BFGET_(r16, 3, 3)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_yshift_regs(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_cshift_regs(r32)  _BFGET_(r32, 4, 4)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_cshift_regs(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_cshift_regs(r16)  _BFGET_(r16, 4, 4)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_cshift_regs(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_sft_rst(r32)      _BFGET_(r32, 5, 5)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_sft_rst(r32,v)    _BFSET_(r32, 5, 5,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_sft_rst(r16)      _BFGET_(r16, 5, 5)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_sft_rst(r16,v)    _BFSET_(r16, 5, 5,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_use_blank(r32)    _BFGET_(r32, 6, 6)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_use_blank(r32,v)  _BFSET_(r32, 6, 6,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_use_blank(r16)    _BFGET_(r16, 6, 6)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_use_blank(r16,v)  _BFSET_(r16, 6, 6,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_yblank_regs(r32)  _BFGET_(r32,18, 7)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_yblank_regs(r32,v) _BFSET_(r32,18, 7,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_cblank_regs(r32)  _BFGET_(r32,30,19)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_cblank_regs(r32,v) _BFSET_(r32,30,19,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_cblank_regs(r16)  _BFGET_(r16,14, 3)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_cblank_regs(r16,v) _BFSET_(r16,14, 3,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en(r32) _BFGET_(r32,31,31)
    #define   SET32UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en(r32,v) _BFSET_(r32,31,31,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en(r16) _BFGET_(r16,15,15)
    #define   SET16UPS_420_422_HDMI_12b_CFG0_hdmi_to_sp_en(r16,v) _BFSET_(r16,15,15,v)

    #define     w32UPS_420_422_HDMI_12b_CFG0                   {\
            UNSG32 uCFG0_enable                                :  1;\
            UNSG32 uCFG0_msbswap                               :  1;\
            UNSG32 uCFG0_cswap_regs                            :  1;\
            UNSG32 uCFG0_yshift_regs                           :  1;\
            UNSG32 uCFG0_cshift_regs                           :  1;\
            UNSG32 uCFG0_sft_rst                               :  1;\
            UNSG32 uCFG0_use_blank                             :  1;\
            UNSG32 uCFG0_yblank_regs                           : 12;\
            UNSG32 uCFG0_cblank_regs                           : 12;\
            UNSG32 uCFG0_hdmi_to_sp_en                         :  1;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG0;
            struct w32UPS_420_422_HDMI_12b_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG1_ups_c0(r32)       _BFGET_(r32,12, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG1_ups_c0(r32,v)     _BFSET_(r32,12, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG1_ups_c0(r16)       _BFGET_(r16,12, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG1_ups_c0(r16,v)     _BFSET_(r16,12, 0,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG1_ups_c1(r32)       _BFGET_(r32,25,13)
    #define   SET32UPS_420_422_HDMI_12b_CFG1_ups_c1(r32,v)     _BFSET_(r32,25,13,v)

    #define     w32UPS_420_422_HDMI_12b_CFG1                   {\
            UNSG32 uCFG1_ups_c0                                : 13;\
            UNSG32 uCFG1_ups_c1                                : 13;\
            UNSG32 RSVDx4_b26                                  :  6;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG1;
            struct w32UPS_420_422_HDMI_12b_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG2_ups_c2(r32)       _BFGET_(r32,12, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG2_ups_c2(r32,v)     _BFSET_(r32,12, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG2_ups_c2(r16)       _BFGET_(r16,12, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG2_ups_c2(r16,v)     _BFSET_(r16,12, 0,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG2_ups_c3(r32)       _BFGET_(r32,25,13)
    #define   SET32UPS_420_422_HDMI_12b_CFG2_ups_c3(r32,v)     _BFSET_(r32,25,13,v)

    #define     w32UPS_420_422_HDMI_12b_CFG2                   {\
            UNSG32 uCFG2_ups_c2                                : 13;\
            UNSG32 uCFG2_ups_c3                                : 13;\
            UNSG32 RSVDx8_b26                                  :  6;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG2;
            struct w32UPS_420_422_HDMI_12b_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG3_ups_c4(r32)       _BFGET_(r32,12, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG3_ups_c4(r32,v)     _BFSET_(r32,12, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG3_ups_c4(r16)       _BFGET_(r16,12, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG3_ups_c4(r16,v)     _BFSET_(r16,12, 0,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG3_ups_c5(r32)       _BFGET_(r32,25,13)
    #define   SET32UPS_420_422_HDMI_12b_CFG3_ups_c5(r32,v)     _BFSET_(r32,25,13,v)

    #define     w32UPS_420_422_HDMI_12b_CFG3                   {\
            UNSG32 uCFG3_ups_c4                                : 13;\
            UNSG32 uCFG3_ups_c5                                : 13;\
            UNSG32 RSVDxC_b26                                  :  6;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG3;
            struct w32UPS_420_422_HDMI_12b_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG4_ups_c6(r32)       _BFGET_(r32,12, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG4_ups_c6(r32,v)     _BFSET_(r32,12, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG4_ups_c6(r16)       _BFGET_(r16,12, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG4_ups_c6(r16,v)     _BFSET_(r16,12, 0,v)

    #define     w32UPS_420_422_HDMI_12b_CFG4                   {\
            UNSG32 uCFG4_ups_c6                                : 13;\
            UNSG32 RSVDx10_b13                                 : 19;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG4;
            struct w32UPS_420_422_HDMI_12b_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG5_hres_regs(r32)    _BFGET_(r32,12, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG5_hres_regs(r32,v)  _BFSET_(r32,12, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG5_hres_regs(r16)    _BFGET_(r16,12, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG5_hres_regs(r16,v)  _BFSET_(r16,12, 0,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG5_htot_regs(r32)    _BFGET_(r32,25,13)
    #define   SET32UPS_420_422_HDMI_12b_CFG5_htot_regs(r32,v)  _BFSET_(r32,25,13,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG5_auto_pixcnt(r32)  _BFGET_(r32,26,26)
    #define   SET32UPS_420_422_HDMI_12b_CFG5_auto_pixcnt(r32,v) _BFSET_(r32,26,26,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG5_auto_pixcnt(r16)  _BFGET_(r16,10,10)
    #define   SET16UPS_420_422_HDMI_12b_CFG5_auto_pixcnt(r16,v) _BFSET_(r16,10,10,v)

    #define     w32UPS_420_422_HDMI_12b_CFG5                   {\
            UNSG32 uCFG5_hres_regs                             : 13;\
            UNSG32 uCFG5_htot_regs                             : 13;\
            UNSG32 uCFG5_auto_pixcnt                           :  1;\
            UNSG32 RSVDx14_b27                                 :  5;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG5;
            struct w32UPS_420_422_HDMI_12b_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG6_top_crop(r32)     _BFGET_(r32, 5, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG6_top_crop(r32,v)   _BFSET_(r32, 5, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG6_top_crop(r16)     _BFGET_(r16, 5, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG6_top_crop(r16,v)   _BFSET_(r16, 5, 0,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG6_bot_crop(r32)     _BFGET_(r32,11, 6)
    #define   SET32UPS_420_422_HDMI_12b_CFG6_bot_crop(r32,v)   _BFSET_(r32,11, 6,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG6_bot_crop(r16)     _BFGET_(r16,11, 6)
    #define   SET16UPS_420_422_HDMI_12b_CFG6_bot_crop(r16,v)   _BFSET_(r16,11, 6,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG6_left_crop(r32)    _BFGET_(r32,17,12)
    #define   SET32UPS_420_422_HDMI_12b_CFG6_left_crop(r32,v)  _BFSET_(r32,17,12,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG6_right_crop(r32)   _BFGET_(r32,23,18)
    #define   SET32UPS_420_422_HDMI_12b_CFG6_right_crop(r32,v) _BFSET_(r32,23,18,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG6_right_crop(r16)   _BFGET_(r16, 7, 2)
    #define   SET16UPS_420_422_HDMI_12b_CFG6_right_crop(r16,v) _BFSET_(r16, 7, 2,v)

    #define     w32UPS_420_422_HDMI_12b_CFG6                   {\
            UNSG32 uCFG6_top_crop                              :  6;\
            UNSG32 uCFG6_bot_crop                              :  6;\
            UNSG32 uCFG6_left_crop                             :  6;\
            UNSG32 uCFG6_right_crop                            :  6;\
            UNSG32 RSVDx18_b24                                 :  8;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG6;
            struct w32UPS_420_422_HDMI_12b_CFG6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG7_vres_regs(r32)    _BFGET_(r32,12, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG7_vres_regs(r32,v)  _BFSET_(r32,12, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG7_vres_regs(r16)    _BFGET_(r16,12, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG7_vres_regs(r16,v)  _BFSET_(r16,12, 0,v)

    #define     w32UPS_420_422_HDMI_12b_CFG7                   {\
            UNSG32 uCFG7_vres_regs                             : 13;\
            UNSG32 RSVDx1C_b13                                 : 19;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG7;
            struct w32UPS_420_422_HDMI_12b_CFG7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32UPS_420_422_HDMI_12b_CFG8_pdwn_regs(r32)    _BFGET_(r32, 0, 0)
    #define   SET32UPS_420_422_HDMI_12b_CFG8_pdwn_regs(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG8_pdwn_regs(r16)    _BFGET_(r16, 0, 0)
    #define   SET16UPS_420_422_HDMI_12b_CFG8_pdwn_regs(r16,v)  _BFSET_(r16, 0, 0,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs(r32)  _BFGET_(r32, 1, 1)
    #define   SET32UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs(r16)  _BFGET_(r16, 1, 1)
    #define   SET16UPS_420_422_HDMI_12b_CFG8_pdlvmc_regs(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs(r32) _BFGET_(r32, 2, 2)
    #define   SET32UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs(r16) _BFGET_(r16, 2, 2)
    #define   SET16UPS_420_422_HDMI_12b_CFG8_pdfvssm_regs(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32UPS_420_422_HDMI_12b_CFG8_dpwr_regs(r32)    _BFGET_(r32, 4, 3)
    #define   SET32UPS_420_422_HDMI_12b_CFG8_dpwr_regs(r32,v)  _BFSET_(r32, 4, 3,v)
    #define   GET16UPS_420_422_HDMI_12b_CFG8_dpwr_regs(r16)    _BFGET_(r16, 4, 3)
    #define   SET16UPS_420_422_HDMI_12b_CFG8_dpwr_regs(r16,v)  _BFSET_(r16, 4, 3,v)

    #define     w32UPS_420_422_HDMI_12b_CFG8                   {\
            UNSG32 uCFG8_pdwn_regs                             :  1;\
            UNSG32 uCFG8_pdlvmc_regs                           :  1;\
            UNSG32 uCFG8_pdfvssm_regs                          :  1;\
            UNSG32 uCFG8_dpwr_regs                             :  2;\
            UNSG32 RSVDx20_b5                                  : 27;\
          }
    union { UNSG32 u32UPS_420_422_HDMI_12b_CFG8;
            struct w32UPS_420_422_HDMI_12b_CFG8;
          };
    ///////////////////////////////////////////////////////////
    } SIE_UPS_420_422_HDMI_12b;

    typedef union  T32UPS_420_422_HDMI_12b_CFG0
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG0;
                 } T32UPS_420_422_HDMI_12b_CFG0;
    typedef union  T32UPS_420_422_HDMI_12b_CFG1
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG1;
                 } T32UPS_420_422_HDMI_12b_CFG1;
    typedef union  T32UPS_420_422_HDMI_12b_CFG2
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG2;
                 } T32UPS_420_422_HDMI_12b_CFG2;
    typedef union  T32UPS_420_422_HDMI_12b_CFG3
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG3;
                 } T32UPS_420_422_HDMI_12b_CFG3;
    typedef union  T32UPS_420_422_HDMI_12b_CFG4
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG4;
                 } T32UPS_420_422_HDMI_12b_CFG4;
    typedef union  T32UPS_420_422_HDMI_12b_CFG5
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG5;
                 } T32UPS_420_422_HDMI_12b_CFG5;
    typedef union  T32UPS_420_422_HDMI_12b_CFG6
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG6;
                 } T32UPS_420_422_HDMI_12b_CFG6;
    typedef union  T32UPS_420_422_HDMI_12b_CFG7
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG7;
                 } T32UPS_420_422_HDMI_12b_CFG7;
    typedef union  T32UPS_420_422_HDMI_12b_CFG8
          { UNSG32 u32;
            struct w32UPS_420_422_HDMI_12b_CFG8;
                 } T32UPS_420_422_HDMI_12b_CFG8;
    ///////////////////////////////////////////////////////////

    typedef union  TUPS_420_422_HDMI_12b_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG0;
                   };
                 } TUPS_420_422_HDMI_12b_CFG0;
    typedef union  TUPS_420_422_HDMI_12b_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG1;
                   };
                 } TUPS_420_422_HDMI_12b_CFG1;
    typedef union  TUPS_420_422_HDMI_12b_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG2;
                   };
                 } TUPS_420_422_HDMI_12b_CFG2;
    typedef union  TUPS_420_422_HDMI_12b_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG3;
                   };
                 } TUPS_420_422_HDMI_12b_CFG3;
    typedef union  TUPS_420_422_HDMI_12b_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG4;
                   };
                 } TUPS_420_422_HDMI_12b_CFG4;
    typedef union  TUPS_420_422_HDMI_12b_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG5;
                   };
                 } TUPS_420_422_HDMI_12b_CFG5;
    typedef union  TUPS_420_422_HDMI_12b_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG6;
                   };
                 } TUPS_420_422_HDMI_12b_CFG6;
    typedef union  TUPS_420_422_HDMI_12b_CFG7
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG7;
                   };
                 } TUPS_420_422_HDMI_12b_CFG7;
    typedef union  TUPS_420_422_HDMI_12b_CFG8
          { UNSG32 u32[1];
            struct {
            struct w32UPS_420_422_HDMI_12b_CFG8;
                   };
                 } TUPS_420_422_HDMI_12b_CFG8;

    ///////////////////////////////////////////////////////////
     SIGN32 UPS_420_422_HDMI_12b_drvrd(SIE_UPS_420_422_HDMI_12b *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 UPS_420_422_HDMI_12b_drvwr(SIE_UPS_420_422_HDMI_12b *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void UPS_420_422_HDMI_12b_reset(SIE_UPS_420_422_HDMI_12b *p);
     SIGN32 UPS_420_422_HDMI_12b_cmp  (SIE_UPS_420_422_HDMI_12b *p, SIE_UPS_420_422_HDMI_12b *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define UPS_420_422_HDMI_12b_check(p,pie,pfx,hLOG) UPS_420_422_HDMI_12b_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define UPS_420_422_HDMI_12b_print(p,    pfx,hLOG) UPS_420_422_HDMI_12b_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: UPS_420_422_HDMI_12b
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE PATGEN                  biu              (4,4)
///     ###
///     * Register specification of interface PATGEN
///     * Defines the size of the patgen
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 2  ihcntl                    0x0
///                                    ###
///                                    * PAT_HCNTL_REGS
///                                    ###
///               %unsigned 2  ivcntl                    0x0
///                                    ###
///                                    * PAT_VCNTL_REGS
///                                    ###
///               %unsigned 8  ihpitch                   0x0
///                                    ###
///                                    * PAT_HPITCH_REGS
///                                    ###
///               %unsigned 8  ivpitch                   0x0
///                                    ###
///                                    * PAT_VPITCH_REGS
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00004 CFG1                 (P)
///               %unsigned 24 ucolor_hp                 0x0
///                                    ###
///                                    * {PAT_UCOLHP_2,PAT_UCOLHP_1,PAT_UCOLHP_0}
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00008 CFG2                 (P)
///               %unsigned 24 ucolor_vp                 0x0
///                                    ###
///                                    * {PAT_UCOLVP_2,PAT_UCOLVP_1,PAT_UCOLVP_0}
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0000C CFG3                 (P)
///               %unsigned 24 ufseed                    0x0
///                                    ###
///                                    * {PAT_UFSEED_2,PAT_UFSEED_1,PAT_UFSEED_0}
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00010 CFG4                 (P)
///               %unsigned 16 ihres                     0x0
///                                    ###
///                                    * PAT_IHRES_REGS
///                                    ###
///               %unsigned 16 ivres                     0x0
///                                    ###
///                                    * PAT_IVRES_REGS
///                                    ###
///     @ 0x00014 CFG5                 (P)
///               %unsigned 16 ihtot                     0x0
///                                    ###
///                                    * PAT_IHTOT_REGS
///                                    ###
///               %unsigned 16 ivtot                     0x0
///                                    ###
///                                    * PAT_IVTOT_REGS
///                                    ###
///     @ 0x00018 CFG6                 (P)
///               %unsigned 16 ihsw                      0x0
///                                    ###
///                                    * PAT_IHSW_REGS
///                                    ###
///               %unsigned 16 ivsw                      0x0
///                                    ###
///                                    * PAT_IVSW_REGS
///                                    ###
///     @ 0x0001C CFG7                 (P)
///               %unsigned 16 ihst                      0x0
///                                    ###
///                                    * PAT_IHST_REGS
///                                    ###
///               %unsigned 16 ivst                      0x0
///                                    ###
///                                    * PAT_IVST_REGS
///                                    ###
///     @ 0x00020 CFG8                 (P)
///               %unsigned 6  lcolor_hp                 0x0
///                                    ###
///                                    * LCOLHP_REGS
///                                    ###
///               %unsigned 6  lcolor_vp                 0x0
///                                    ###
///                                    * LCOLVP_REGS
///                                    ###
///               %unsigned 6  lfseed                    0x0
///                                    ###
///                                    * LFSEED_REGS
///                                    ###
///               %unsigned 2  cad_mode                  0x0
///                                    ###
///                                    * CAD_MODE_REGS
///                                    ###
///               %unsigned 1  imode                     0x0
///                                    ###
///                                    * IMODE_REGS
///                                    ###
///               %unsigned 5  rff                       0x0
///                                    ###
///                                    * RFF_REGS
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00024 CFG9                 (P)
///               %unsigned 24 ufseed1                   0x0
///                                    ###
///                                    * {PAT_UFSEED1_2,PAT_UFSEED1_1,PAT_UFSEED1_0}
///                                    ###
///               %unsigned 6  lfseed1                   0x0
///                                    ###
///                                    * LFSEED1_REGS
///                                    * End of patgen register group
///                                    ###
///               %%        2          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      40B, bits:     276b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_PATGEN
#define h_PATGEN (){}

    #define     RA_PATGEN_CFG0                                 0x0000

    #define     BA_PATGEN_CFG0_ihcntl                          0x0000
    #define     B16PATGEN_CFG0_ihcntl                          0x0000
    #define   LSb32PATGEN_CFG0_ihcntl                             0
    #define   LSb16PATGEN_CFG0_ihcntl                             0
    #define       bPATGEN_CFG0_ihcntl                          2
    #define   MSK32PATGEN_CFG0_ihcntl                             0x00000003

    #define     BA_PATGEN_CFG0_ivcntl                          0x0000
    #define     B16PATGEN_CFG0_ivcntl                          0x0000
    #define   LSb32PATGEN_CFG0_ivcntl                             2
    #define   LSb16PATGEN_CFG0_ivcntl                             2
    #define       bPATGEN_CFG0_ivcntl                          2
    #define   MSK32PATGEN_CFG0_ivcntl                             0x0000000C

    #define     BA_PATGEN_CFG0_ihpitch                         0x0000
    #define     B16PATGEN_CFG0_ihpitch                         0x0000
    #define   LSb32PATGEN_CFG0_ihpitch                            4
    #define   LSb16PATGEN_CFG0_ihpitch                            4
    #define       bPATGEN_CFG0_ihpitch                         8
    #define   MSK32PATGEN_CFG0_ihpitch                            0x00000FF0

    #define     BA_PATGEN_CFG0_ivpitch                         0x0001
    #define     B16PATGEN_CFG0_ivpitch                         0x0000
    #define   LSb32PATGEN_CFG0_ivpitch                            12
    #define   LSb16PATGEN_CFG0_ivpitch                            12
    #define       bPATGEN_CFG0_ivpitch                         8
    #define   MSK32PATGEN_CFG0_ivpitch                            0x000FF000
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG1                                 0x0004

    #define     BA_PATGEN_CFG1_ucolor_hp                       0x0004
    #define     B16PATGEN_CFG1_ucolor_hp                       0x0004
    #define   LSb32PATGEN_CFG1_ucolor_hp                          0
    #define   LSb16PATGEN_CFG1_ucolor_hp                          0
    #define       bPATGEN_CFG1_ucolor_hp                       24
    #define   MSK32PATGEN_CFG1_ucolor_hp                          0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG2                                 0x0008

    #define     BA_PATGEN_CFG2_ucolor_vp                       0x0008
    #define     B16PATGEN_CFG2_ucolor_vp                       0x0008
    #define   LSb32PATGEN_CFG2_ucolor_vp                          0
    #define   LSb16PATGEN_CFG2_ucolor_vp                          0
    #define       bPATGEN_CFG2_ucolor_vp                       24
    #define   MSK32PATGEN_CFG2_ucolor_vp                          0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG3                                 0x000C

    #define     BA_PATGEN_CFG3_ufseed                          0x000C
    #define     B16PATGEN_CFG3_ufseed                          0x000C
    #define   LSb32PATGEN_CFG3_ufseed                             0
    #define   LSb16PATGEN_CFG3_ufseed                             0
    #define       bPATGEN_CFG3_ufseed                          24
    #define   MSK32PATGEN_CFG3_ufseed                             0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG4                                 0x0010

    #define     BA_PATGEN_CFG4_ihres                           0x0010
    #define     B16PATGEN_CFG4_ihres                           0x0010
    #define   LSb32PATGEN_CFG4_ihres                              0
    #define   LSb16PATGEN_CFG4_ihres                              0
    #define       bPATGEN_CFG4_ihres                           16
    #define   MSK32PATGEN_CFG4_ihres                              0x0000FFFF

    #define     BA_PATGEN_CFG4_ivres                           0x0012
    #define     B16PATGEN_CFG4_ivres                           0x0012
    #define   LSb32PATGEN_CFG4_ivres                              16
    #define   LSb16PATGEN_CFG4_ivres                              0
    #define       bPATGEN_CFG4_ivres                           16
    #define   MSK32PATGEN_CFG4_ivres                              0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG5                                 0x0014

    #define     BA_PATGEN_CFG5_ihtot                           0x0014
    #define     B16PATGEN_CFG5_ihtot                           0x0014
    #define   LSb32PATGEN_CFG5_ihtot                              0
    #define   LSb16PATGEN_CFG5_ihtot                              0
    #define       bPATGEN_CFG5_ihtot                           16
    #define   MSK32PATGEN_CFG5_ihtot                              0x0000FFFF

    #define     BA_PATGEN_CFG5_ivtot                           0x0016
    #define     B16PATGEN_CFG5_ivtot                           0x0016
    #define   LSb32PATGEN_CFG5_ivtot                              16
    #define   LSb16PATGEN_CFG5_ivtot                              0
    #define       bPATGEN_CFG5_ivtot                           16
    #define   MSK32PATGEN_CFG5_ivtot                              0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG6                                 0x0018

    #define     BA_PATGEN_CFG6_ihsw                            0x0018
    #define     B16PATGEN_CFG6_ihsw                            0x0018
    #define   LSb32PATGEN_CFG6_ihsw                               0
    #define   LSb16PATGEN_CFG6_ihsw                               0
    #define       bPATGEN_CFG6_ihsw                            16
    #define   MSK32PATGEN_CFG6_ihsw                               0x0000FFFF

    #define     BA_PATGEN_CFG6_ivsw                            0x001A
    #define     B16PATGEN_CFG6_ivsw                            0x001A
    #define   LSb32PATGEN_CFG6_ivsw                               16
    #define   LSb16PATGEN_CFG6_ivsw                               0
    #define       bPATGEN_CFG6_ivsw                            16
    #define   MSK32PATGEN_CFG6_ivsw                               0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG7                                 0x001C

    #define     BA_PATGEN_CFG7_ihst                            0x001C
    #define     B16PATGEN_CFG7_ihst                            0x001C
    #define   LSb32PATGEN_CFG7_ihst                               0
    #define   LSb16PATGEN_CFG7_ihst                               0
    #define       bPATGEN_CFG7_ihst                            16
    #define   MSK32PATGEN_CFG7_ihst                               0x0000FFFF

    #define     BA_PATGEN_CFG7_ivst                            0x001E
    #define     B16PATGEN_CFG7_ivst                            0x001E
    #define   LSb32PATGEN_CFG7_ivst                               16
    #define   LSb16PATGEN_CFG7_ivst                               0
    #define       bPATGEN_CFG7_ivst                            16
    #define   MSK32PATGEN_CFG7_ivst                               0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG8                                 0x0020

    #define     BA_PATGEN_CFG8_lcolor_hp                       0x0020
    #define     B16PATGEN_CFG8_lcolor_hp                       0x0020
    #define   LSb32PATGEN_CFG8_lcolor_hp                          0
    #define   LSb16PATGEN_CFG8_lcolor_hp                          0
    #define       bPATGEN_CFG8_lcolor_hp                       6
    #define   MSK32PATGEN_CFG8_lcolor_hp                          0x0000003F

    #define     BA_PATGEN_CFG8_lcolor_vp                       0x0020
    #define     B16PATGEN_CFG8_lcolor_vp                       0x0020
    #define   LSb32PATGEN_CFG8_lcolor_vp                          6
    #define   LSb16PATGEN_CFG8_lcolor_vp                          6
    #define       bPATGEN_CFG8_lcolor_vp                       6
    #define   MSK32PATGEN_CFG8_lcolor_vp                          0x00000FC0

    #define     BA_PATGEN_CFG8_lfseed                          0x0021
    #define     B16PATGEN_CFG8_lfseed                          0x0020
    #define   LSb32PATGEN_CFG8_lfseed                             12
    #define   LSb16PATGEN_CFG8_lfseed                             12
    #define       bPATGEN_CFG8_lfseed                          6
    #define   MSK32PATGEN_CFG8_lfseed                             0x0003F000

    #define     BA_PATGEN_CFG8_cad_mode                        0x0022
    #define     B16PATGEN_CFG8_cad_mode                        0x0022
    #define   LSb32PATGEN_CFG8_cad_mode                           18
    #define   LSb16PATGEN_CFG8_cad_mode                           2
    #define       bPATGEN_CFG8_cad_mode                        2
    #define   MSK32PATGEN_CFG8_cad_mode                           0x000C0000

    #define     BA_PATGEN_CFG8_imode                           0x0022
    #define     B16PATGEN_CFG8_imode                           0x0022
    #define   LSb32PATGEN_CFG8_imode                              20
    #define   LSb16PATGEN_CFG8_imode                              4
    #define       bPATGEN_CFG8_imode                           1
    #define   MSK32PATGEN_CFG8_imode                              0x00100000

    #define     BA_PATGEN_CFG8_rff                             0x0022
    #define     B16PATGEN_CFG8_rff                             0x0022
    #define   LSb32PATGEN_CFG8_rff                                21
    #define   LSb16PATGEN_CFG8_rff                                5
    #define       bPATGEN_CFG8_rff                             5
    #define   MSK32PATGEN_CFG8_rff                                0x03E00000
    ///////////////////////////////////////////////////////////
    #define     RA_PATGEN_CFG9                                 0x0024

    #define     BA_PATGEN_CFG9_ufseed1                         0x0024
    #define     B16PATGEN_CFG9_ufseed1                         0x0024
    #define   LSb32PATGEN_CFG9_ufseed1                            0
    #define   LSb16PATGEN_CFG9_ufseed1                            0
    #define       bPATGEN_CFG9_ufseed1                         24
    #define   MSK32PATGEN_CFG9_ufseed1                            0x00FFFFFF

    #define     BA_PATGEN_CFG9_lfseed1                         0x0027
    #define     B16PATGEN_CFG9_lfseed1                         0x0026
    #define   LSb32PATGEN_CFG9_lfseed1                            24
    #define   LSb16PATGEN_CFG9_lfseed1                            8
    #define       bPATGEN_CFG9_lfseed1                         6
    #define   MSK32PATGEN_CFG9_lfseed1                            0x3F000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_PATGEN {
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG0_ihcntl(r32)                     _BFGET_(r32, 1, 0)
    #define   SET32PATGEN_CFG0_ihcntl(r32,v)                   _BFSET_(r32, 1, 0,v)
    #define   GET16PATGEN_CFG0_ihcntl(r16)                     _BFGET_(r16, 1, 0)
    #define   SET16PATGEN_CFG0_ihcntl(r16,v)                   _BFSET_(r16, 1, 0,v)

    #define   GET32PATGEN_CFG0_ivcntl(r32)                     _BFGET_(r32, 3, 2)
    #define   SET32PATGEN_CFG0_ivcntl(r32,v)                   _BFSET_(r32, 3, 2,v)
    #define   GET16PATGEN_CFG0_ivcntl(r16)                     _BFGET_(r16, 3, 2)
    #define   SET16PATGEN_CFG0_ivcntl(r16,v)                   _BFSET_(r16, 3, 2,v)

    #define   GET32PATGEN_CFG0_ihpitch(r32)                    _BFGET_(r32,11, 4)
    #define   SET32PATGEN_CFG0_ihpitch(r32,v)                  _BFSET_(r32,11, 4,v)
    #define   GET16PATGEN_CFG0_ihpitch(r16)                    _BFGET_(r16,11, 4)
    #define   SET16PATGEN_CFG0_ihpitch(r16,v)                  _BFSET_(r16,11, 4,v)

    #define   GET32PATGEN_CFG0_ivpitch(r32)                    _BFGET_(r32,19,12)
    #define   SET32PATGEN_CFG0_ivpitch(r32,v)                  _BFSET_(r32,19,12,v)

    #define     w32PATGEN_CFG0                                 {\
            UNSG32 uCFG0_ihcntl                                :  2;\
            UNSG32 uCFG0_ivcntl                                :  2;\
            UNSG32 uCFG0_ihpitch                               :  8;\
            UNSG32 uCFG0_ivpitch                               :  8;\
            UNSG32 RSVDx0_b20                                  : 12;\
          }
    union { UNSG32 u32PATGEN_CFG0;
            struct w32PATGEN_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG1_ucolor_hp(r32)                  _BFGET_(r32,23, 0)
    #define   SET32PATGEN_CFG1_ucolor_hp(r32,v)                _BFSET_(r32,23, 0,v)

    #define     w32PATGEN_CFG1                                 {\
            UNSG32 uCFG1_ucolor_hp                             : 24;\
            UNSG32 RSVDx4_b24                                  :  8;\
          }
    union { UNSG32 u32PATGEN_CFG1;
            struct w32PATGEN_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG2_ucolor_vp(r32)                  _BFGET_(r32,23, 0)
    #define   SET32PATGEN_CFG2_ucolor_vp(r32,v)                _BFSET_(r32,23, 0,v)

    #define     w32PATGEN_CFG2                                 {\
            UNSG32 uCFG2_ucolor_vp                             : 24;\
            UNSG32 RSVDx8_b24                                  :  8;\
          }
    union { UNSG32 u32PATGEN_CFG2;
            struct w32PATGEN_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG3_ufseed(r32)                     _BFGET_(r32,23, 0)
    #define   SET32PATGEN_CFG3_ufseed(r32,v)                   _BFSET_(r32,23, 0,v)

    #define     w32PATGEN_CFG3                                 {\
            UNSG32 uCFG3_ufseed                                : 24;\
            UNSG32 RSVDxC_b24                                  :  8;\
          }
    union { UNSG32 u32PATGEN_CFG3;
            struct w32PATGEN_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG4_ihres(r32)                      _BFGET_(r32,15, 0)
    #define   SET32PATGEN_CFG4_ihres(r32,v)                    _BFSET_(r32,15, 0,v)
    #define   GET16PATGEN_CFG4_ihres(r16)                      _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG4_ihres(r16,v)                    _BFSET_(r16,15, 0,v)

    #define   GET32PATGEN_CFG4_ivres(r32)                      _BFGET_(r32,31,16)
    #define   SET32PATGEN_CFG4_ivres(r32,v)                    _BFSET_(r32,31,16,v)
    #define   GET16PATGEN_CFG4_ivres(r16)                      _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG4_ivres(r16,v)                    _BFSET_(r16,15, 0,v)

    #define     w32PATGEN_CFG4                                 {\
            UNSG32 uCFG4_ihres                                 : 16;\
            UNSG32 uCFG4_ivres                                 : 16;\
          }
    union { UNSG32 u32PATGEN_CFG4;
            struct w32PATGEN_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG5_ihtot(r32)                      _BFGET_(r32,15, 0)
    #define   SET32PATGEN_CFG5_ihtot(r32,v)                    _BFSET_(r32,15, 0,v)
    #define   GET16PATGEN_CFG5_ihtot(r16)                      _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG5_ihtot(r16,v)                    _BFSET_(r16,15, 0,v)

    #define   GET32PATGEN_CFG5_ivtot(r32)                      _BFGET_(r32,31,16)
    #define   SET32PATGEN_CFG5_ivtot(r32,v)                    _BFSET_(r32,31,16,v)
    #define   GET16PATGEN_CFG5_ivtot(r16)                      _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG5_ivtot(r16,v)                    _BFSET_(r16,15, 0,v)

    #define     w32PATGEN_CFG5                                 {\
            UNSG32 uCFG5_ihtot                                 : 16;\
            UNSG32 uCFG5_ivtot                                 : 16;\
          }
    union { UNSG32 u32PATGEN_CFG5;
            struct w32PATGEN_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG6_ihsw(r32)                       _BFGET_(r32,15, 0)
    #define   SET32PATGEN_CFG6_ihsw(r32,v)                     _BFSET_(r32,15, 0,v)
    #define   GET16PATGEN_CFG6_ihsw(r16)                       _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG6_ihsw(r16,v)                     _BFSET_(r16,15, 0,v)

    #define   GET32PATGEN_CFG6_ivsw(r32)                       _BFGET_(r32,31,16)
    #define   SET32PATGEN_CFG6_ivsw(r32,v)                     _BFSET_(r32,31,16,v)
    #define   GET16PATGEN_CFG6_ivsw(r16)                       _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG6_ivsw(r16,v)                     _BFSET_(r16,15, 0,v)

    #define     w32PATGEN_CFG6                                 {\
            UNSG32 uCFG6_ihsw                                  : 16;\
            UNSG32 uCFG6_ivsw                                  : 16;\
          }
    union { UNSG32 u32PATGEN_CFG6;
            struct w32PATGEN_CFG6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG7_ihst(r32)                       _BFGET_(r32,15, 0)
    #define   SET32PATGEN_CFG7_ihst(r32,v)                     _BFSET_(r32,15, 0,v)
    #define   GET16PATGEN_CFG7_ihst(r16)                       _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG7_ihst(r16,v)                     _BFSET_(r16,15, 0,v)

    #define   GET32PATGEN_CFG7_ivst(r32)                       _BFGET_(r32,31,16)
    #define   SET32PATGEN_CFG7_ivst(r32,v)                     _BFSET_(r32,31,16,v)
    #define   GET16PATGEN_CFG7_ivst(r16)                       _BFGET_(r16,15, 0)
    #define   SET16PATGEN_CFG7_ivst(r16,v)                     _BFSET_(r16,15, 0,v)

    #define     w32PATGEN_CFG7                                 {\
            UNSG32 uCFG7_ihst                                  : 16;\
            UNSG32 uCFG7_ivst                                  : 16;\
          }
    union { UNSG32 u32PATGEN_CFG7;
            struct w32PATGEN_CFG7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG8_lcolor_hp(r32)                  _BFGET_(r32, 5, 0)
    #define   SET32PATGEN_CFG8_lcolor_hp(r32,v)                _BFSET_(r32, 5, 0,v)
    #define   GET16PATGEN_CFG8_lcolor_hp(r16)                  _BFGET_(r16, 5, 0)
    #define   SET16PATGEN_CFG8_lcolor_hp(r16,v)                _BFSET_(r16, 5, 0,v)

    #define   GET32PATGEN_CFG8_lcolor_vp(r32)                  _BFGET_(r32,11, 6)
    #define   SET32PATGEN_CFG8_lcolor_vp(r32,v)                _BFSET_(r32,11, 6,v)
    #define   GET16PATGEN_CFG8_lcolor_vp(r16)                  _BFGET_(r16,11, 6)
    #define   SET16PATGEN_CFG8_lcolor_vp(r16,v)                _BFSET_(r16,11, 6,v)

    #define   GET32PATGEN_CFG8_lfseed(r32)                     _BFGET_(r32,17,12)
    #define   SET32PATGEN_CFG8_lfseed(r32,v)                   _BFSET_(r32,17,12,v)

    #define   GET32PATGEN_CFG8_cad_mode(r32)                   _BFGET_(r32,19,18)
    #define   SET32PATGEN_CFG8_cad_mode(r32,v)                 _BFSET_(r32,19,18,v)
    #define   GET16PATGEN_CFG8_cad_mode(r16)                   _BFGET_(r16, 3, 2)
    #define   SET16PATGEN_CFG8_cad_mode(r16,v)                 _BFSET_(r16, 3, 2,v)

    #define   GET32PATGEN_CFG8_imode(r32)                      _BFGET_(r32,20,20)
    #define   SET32PATGEN_CFG8_imode(r32,v)                    _BFSET_(r32,20,20,v)
    #define   GET16PATGEN_CFG8_imode(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16PATGEN_CFG8_imode(r16,v)                    _BFSET_(r16, 4, 4,v)

    #define   GET32PATGEN_CFG8_rff(r32)                        _BFGET_(r32,25,21)
    #define   SET32PATGEN_CFG8_rff(r32,v)                      _BFSET_(r32,25,21,v)
    #define   GET16PATGEN_CFG8_rff(r16)                        _BFGET_(r16, 9, 5)
    #define   SET16PATGEN_CFG8_rff(r16,v)                      _BFSET_(r16, 9, 5,v)

    #define     w32PATGEN_CFG8                                 {\
            UNSG32 uCFG8_lcolor_hp                             :  6;\
            UNSG32 uCFG8_lcolor_vp                             :  6;\
            UNSG32 uCFG8_lfseed                                :  6;\
            UNSG32 uCFG8_cad_mode                              :  2;\
            UNSG32 uCFG8_imode                                 :  1;\
            UNSG32 uCFG8_rff                                   :  5;\
            UNSG32 RSVDx20_b26                                 :  6;\
          }
    union { UNSG32 u32PATGEN_CFG8;
            struct w32PATGEN_CFG8;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PATGEN_CFG9_ufseed1(r32)                    _BFGET_(r32,23, 0)
    #define   SET32PATGEN_CFG9_ufseed1(r32,v)                  _BFSET_(r32,23, 0,v)

    #define   GET32PATGEN_CFG9_lfseed1(r32)                    _BFGET_(r32,29,24)
    #define   SET32PATGEN_CFG9_lfseed1(r32,v)                  _BFSET_(r32,29,24,v)
    #define   GET16PATGEN_CFG9_lfseed1(r16)                    _BFGET_(r16,13, 8)
    #define   SET16PATGEN_CFG9_lfseed1(r16,v)                  _BFSET_(r16,13, 8,v)

    #define     w32PATGEN_CFG9                                 {\
            UNSG32 uCFG9_ufseed1                               : 24;\
            UNSG32 uCFG9_lfseed1                               :  6;\
            UNSG32 RSVDx24_b30                                 :  2;\
          }
    union { UNSG32 u32PATGEN_CFG9;
            struct w32PATGEN_CFG9;
          };
    ///////////////////////////////////////////////////////////
    } SIE_PATGEN;

    typedef union  T32PATGEN_CFG0
          { UNSG32 u32;
            struct w32PATGEN_CFG0;
                 } T32PATGEN_CFG0;
    typedef union  T32PATGEN_CFG1
          { UNSG32 u32;
            struct w32PATGEN_CFG1;
                 } T32PATGEN_CFG1;
    typedef union  T32PATGEN_CFG2
          { UNSG32 u32;
            struct w32PATGEN_CFG2;
                 } T32PATGEN_CFG2;
    typedef union  T32PATGEN_CFG3
          { UNSG32 u32;
            struct w32PATGEN_CFG3;
                 } T32PATGEN_CFG3;
    typedef union  T32PATGEN_CFG4
          { UNSG32 u32;
            struct w32PATGEN_CFG4;
                 } T32PATGEN_CFG4;
    typedef union  T32PATGEN_CFG5
          { UNSG32 u32;
            struct w32PATGEN_CFG5;
                 } T32PATGEN_CFG5;
    typedef union  T32PATGEN_CFG6
          { UNSG32 u32;
            struct w32PATGEN_CFG6;
                 } T32PATGEN_CFG6;
    typedef union  T32PATGEN_CFG7
          { UNSG32 u32;
            struct w32PATGEN_CFG7;
                 } T32PATGEN_CFG7;
    typedef union  T32PATGEN_CFG8
          { UNSG32 u32;
            struct w32PATGEN_CFG8;
                 } T32PATGEN_CFG8;
    typedef union  T32PATGEN_CFG9
          { UNSG32 u32;
            struct w32PATGEN_CFG9;
                 } T32PATGEN_CFG9;
    ///////////////////////////////////////////////////////////

    typedef union  TPATGEN_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG0;
                   };
                 } TPATGEN_CFG0;
    typedef union  TPATGEN_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG1;
                   };
                 } TPATGEN_CFG1;
    typedef union  TPATGEN_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG2;
                   };
                 } TPATGEN_CFG2;
    typedef union  TPATGEN_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG3;
                   };
                 } TPATGEN_CFG3;
    typedef union  TPATGEN_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG4;
                   };
                 } TPATGEN_CFG4;
    typedef union  TPATGEN_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG5;
                   };
                 } TPATGEN_CFG5;
    typedef union  TPATGEN_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG6;
                   };
                 } TPATGEN_CFG6;
    typedef union  TPATGEN_CFG7
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG7;
                   };
                 } TPATGEN_CFG7;
    typedef union  TPATGEN_CFG8
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG8;
                   };
                 } TPATGEN_CFG8;
    typedef union  TPATGEN_CFG9
          { UNSG32 u32[1];
            struct {
            struct w32PATGEN_CFG9;
                   };
                 } TPATGEN_CFG9;

    ///////////////////////////////////////////////////////////
     SIGN32 PATGEN_drvrd(SIE_PATGEN *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 PATGEN_drvwr(SIE_PATGEN *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void PATGEN_reset(SIE_PATGEN *p);
     SIGN32 PATGEN_cmp  (SIE_PATGEN *p, SIE_PATGEN *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define PATGEN_check(p,pie,pfx,hLOG) PATGEN_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define PATGEN_print(p,    pfx,hLOG) PATGEN_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: PATGEN
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE VIPSTS                  biu              (4,4)
///     ###
///     * Register specification of interface VIPSTS
///     * Defines the size of the time stamp
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 8  stcInitV0_0               0x0
///                                    ###
///                                    * STCINITV0_0_REGS
///                                    ###
///               %unsigned 8  stcInitV0_1               0x0
///                                    ###
///                                    * STCINITV0_1_REGS
///                                    ###
///               %unsigned 8  stcInitV0_2               0x0
///                                    ###
///                                    * STCINITV0_2_REGS
///                                    ###
///               %unsigned 8  stcInitV0_3               0x0
///                                    ###
///                                    * STCINITV0_3_REGS
///                                    ###
///     @ 0x00004 CFG1                 (P)
///               %unsigned 8  stcInitV0_4               0x0
///                                    ###
///                                    * STCINITV0_4_REGS
///                                    ###
///               %unsigned 8  stcInitV0_5               0x0
///                                    ###
///                                    * STCINITV0_5_REGS
///                                    ###
///               %unsigned 8  stcInitV0_6               0x0
///                                    ###
///                                    * STCINITV0_6_REGS
///                                    ###
///               %unsigned 8  stcInitV0_7               0x0
///                                    ###
///                                    * STCINITV0_7_REGS
///                                    ###
///     @ 0x00008 CFG2                 (P)
///               %unsigned 8  stcInitV1_0               0x0
///                                    ###
///                                    * STCINITV1_0_REGS
///                                    ###
///               %unsigned 8  stcInitV1_1               0x0
///                                    ###
///                                    * STCINITV1_1_REGS
///                                    ###
///               %unsigned 8  stcInitV1_2               0x0
///                                    ###
///                                    * STCINITV1_2_REGS
///                                    ###
///               %unsigned 8  stcInitV1_3               0x0
///                                    ###
///                                    * STCINITV1_3_REGS
///                                    ###
///     @ 0x0000C CFG3                 (P)
///               %unsigned 8  stcInitV1_4               0x0
///                                    ###
///                                    * STCINITV1_4_REGS
///                                    ###
///               %unsigned 8  stcInitV1_5               0x0
///                                    ###
///                                    * STCINITV1_5_REGS
///                                    ###
///               %unsigned 8  stcInitV1_6               0x0
///                                    ###
///                                    * STCINITV1_6_REGS
///                                    ###
///               %unsigned 8  stcInitV1_7               0x0
///                                    ###
///                                    * STCINITV1_7_REGS
///                                    ###
///     @ 0x00010 CFG4                 (P)
///               %unsigned 16 divValStc0_0              0x0
///                                    ###
///                                    * DIVVALSTC0_0_REGS
///                                    ###
///               %unsigned 16 divValStc0_1              0x0
///                                    ###
///                                    * DIVVALSTC0_1_REGS
///                                    ###
///     @ 0x00014 CFG5                 (P)
///               %unsigned 16 divValStc1_0              0x0
///                                    ###
///                                    * DIVVALSTC1_0_REGS
///                                    ###
///               %unsigned 16 divValStc1_1              0x0
///                                    ###
///                                    * DIVVALSTC1_1_REGS
///                                    ###
///     @ 0x00018 CFG6                 (P)
///               %unsigned 8  selSyncDviSts             0x0
///                                    ###
///                                    * SELSYNCDVISTS_REGS
///                                    ###
///               %unsigned 8  selSyncHdmiRxSts          0x0
///                                    ###
///                                    * SELSYNCHDMIRXSTS_REGS
///                                    ###
///               %unsigned 8  stsCtrl                   0x0
///                                    ###
///                                    * STSCTRL_REGS
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0001C STS0                 (R-)
///               %unsigned 8  dviSts0_0                 0x0
///                                    ###
///                                    * DVISTS0_0_REGS
///                                    ###
///               %unsigned 8  dviSts0_1                 0x0
///                                    ###
///                                    * DVISTS0_1_REGS
///                                    ###
///               %unsigned 8  dviSts0_2                 0x0
///                                    ###
///                                    * DVISTS0_2_REGS
///                                    ###
///               %unsigned 8  dviSts0_3                 0x0
///                                    ###
///                                    * DVISTS0_3_REGS
///                                    ###
///     @ 0x00020 STS1                 (R-)
///               %unsigned 8  dviSts0_4                 0x0
///                                    ###
///                                    * DVISTS0_4_REGS
///                                    ###
///               %unsigned 8  dviSts0_5                 0x0
///                                    ###
///                                    * DVISTS0_5_REGS
///                                    ###
///               %unsigned 8  dviSts0_6                 0x0
///                                    ###
///                                    * DVISTS0_6_REGS
///                                    ###
///               %unsigned 8  dviSts0_7                 0x0
///                                    ###
///                                    * DVISTS0_7_REGS
///                                    ###
///     @ 0x00024 STS2                 (R-)
///               %unsigned 8  dviSts1_0                 0x0
///                                    ###
///                                    * DVISTS1_0_REGS
///                                    ###
///               %unsigned 8  dviSts1_1                 0x0
///                                    ###
///                                    * DVISTS1_1_REGS
///                                    ###
///               %unsigned 8  dviSts1_2                 0x0
///                                    ###
///                                    * DVISTS1_2_REGS
///                                    ###
///               %unsigned 8  dviSts1_3                 0x0
///                                    ###
///                                    * DVISTS1_3_REGS
///                                    ###
///     @ 0x00028 STS3                 (R-)
///               %unsigned 8  dviSts1_4                 0x0
///                                    ###
///                                    * DVISTS1_4_REGS
///                                    ###
///               %unsigned 8  dviSts1_5                 0x0
///                                    ###
///                                    * DVISTS1_5_REGS
///                                    ###
///               %unsigned 8  dviSts1_6                 0x0
///                                    ###
///                                    * DVISTS1_6_REGS
///                                    ###
///               %unsigned 8  dviSts1_7                 0x0
///                                    ###
///                                    * DVISTS1_7_REGS
///                                    ###
///     @ 0x0002C STS4                 (R-)
///               %unsigned 8  hdmiRxSts0_0              0x0
///                                    ###
///                                    * HDMIRXSTS0_0_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts0_1              0x0
///                                    ###
///                                    * HDMIRXSTS0_1_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts0_2              0x0
///                                    ###
///                                    * HDMIRXSTS0_2_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts0_3              0x0
///                                    ###
///                                    * HDMIRXSTS0_3_REGS
///                                    ###
///     @ 0x00030 STS5                 (R-)
///               %unsigned 8  hdmiRxSts0_4              0x0
///                                    ###
///                                    * HDMIRXSTS0_4_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts0_5              0x0
///                                    ###
///                                    * HDMIRXSTS0_5_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts0_6              0x0
///                                    ###
///                                    * HDMIRXSTS0_6_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts0_7              0x0
///                                    ###
///                                    * HDMIRXSTS0_7_REGS
///                                    ###
///     @ 0x00034 STS6                 (R-)
///               %unsigned 8  hdmiRxSts1_0              0x0
///                                    ###
///                                    * HDMIRXSTS1_0_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts1_1              0x0
///                                    ###
///                                    * HDMIRXSTS1_1_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts1_2              0x0
///                                    ###
///                                    * HDMIRXSTS1_2_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts1_3              0x0
///                                    ###
///                                    * HDMIRXSTS1_3_REGS
///                                    ###
///     @ 0x00038 STS7                 (R-)
///               %unsigned 8  hdmiRxSts1_4              0x0
///                                    ###
///                                    * HDMIRXSTS1_4_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts1_5              0x0
///                                    ###
///                                    * HDMIRXSTS1_5_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts1_6              0x0
///                                    ###
///                                    * HDMIRXSTS1_6_REGS
///                                    ###
///               %unsigned 8  hdmiRxSts1_7              0x0
///                                    ###
///                                    * HDMIRXSTS1_7_REGS
///                                    ###
///     @ 0x0003C STS8                 (R-)
///               %unsigned 8  dviSts0_rd_0              0x0
///                                    ###
///                                    * DVISTS0_RD_0_REGS
///                                    ###
///               %unsigned 8  dviSts0_rd_1              0x0
///                                    ###
///                                    * DVISTS0_RD_1_REGS
///                                    ###
///               %unsigned 8  dviSts0_rd_2              0x0
///                                    ###
///                                    * DVISTS0_RD_2_REGS
///                                    ###
///               %unsigned 8  dviSts0_rd_3              0x0
///                                    ###
///                                    * DVISTS0_RD_3_REGS
///                                    ###
///     @ 0x00040 STS9                 (R-)
///               %unsigned 8  dviSts0_rd_4              0x0
///                                    ###
///                                    * DVISTS0_RD_4_REGS
///                                    ###
///               %unsigned 8  dviSts0_rd_5              0x0
///                                    ###
///                                    * DVISTS0_RD_5_REGS
///                                    ###
///               %unsigned 8  dviSts0_rd_6              0x0
///                                    ###
///                                    * DVISTS0_RD_6_REGS
///                                    ###
///               %unsigned 8  dviSts0_rd_7              0x0
///                                    ###
///                                    * DVISTS0_RD_7_REGS
///                                    ###
///     @ 0x00044 STS10                (R-)
///               %unsigned 8  dviSts1_rd_0              0x0
///                                    ###
///                                    * DVISTS1_RD_0_REGS
///                                    ###
///               %unsigned 8  dviSts1_rd_1              0x0
///                                    ###
///                                    * DVISTS1_RD_1_REGS
///                                    ###
///               %unsigned 8  dviSts1_rd_2              0x0
///                                    ###
///                                    * DVISTS1_RD_2_REGS
///                                    ###
///               %unsigned 8  dviSts1_rd_3              0x0
///                                    ###
///                                    * DVISTS1_RD_3_REGS
///                                    ###
///     @ 0x00048 STS11                (R-)
///               %unsigned 8  dviSts1_rd_4              0x0
///                                    ###
///                                    * DVISTS1_RD_4_REGS
///                                    ###
///               %unsigned 8  dviSts1_rd_5              0x0
///                                    ###
///                                    * DVISTS1_RD_5_REGS
///                                    ###
///               %unsigned 8  dviSts1_rd_6              0x0
///                                    ###
///                                    * DVISTS1_RD_6_REGS
///                                    ###
///               %unsigned 8  dviSts1_rd_7              0x0
///                                    ###
///                                    * DVISTS1_RD_7_REGS
///                                    * End of VIPSTS register group
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      76B, bits:     600b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_VIPSTS
#define h_VIPSTS (){}

    #define     RA_VIPSTS_CFG0                                 0x0000

    #define     BA_VIPSTS_CFG0_stcInitV0_0                     0x0000
    #define     B16VIPSTS_CFG0_stcInitV0_0                     0x0000
    #define   LSb32VIPSTS_CFG0_stcInitV0_0                        0
    #define   LSb16VIPSTS_CFG0_stcInitV0_0                        0
    #define       bVIPSTS_CFG0_stcInitV0_0                     8
    #define   MSK32VIPSTS_CFG0_stcInitV0_0                        0x000000FF

    #define     BA_VIPSTS_CFG0_stcInitV0_1                     0x0001
    #define     B16VIPSTS_CFG0_stcInitV0_1                     0x0000
    #define   LSb32VIPSTS_CFG0_stcInitV0_1                        8
    #define   LSb16VIPSTS_CFG0_stcInitV0_1                        8
    #define       bVIPSTS_CFG0_stcInitV0_1                     8
    #define   MSK32VIPSTS_CFG0_stcInitV0_1                        0x0000FF00

    #define     BA_VIPSTS_CFG0_stcInitV0_2                     0x0002
    #define     B16VIPSTS_CFG0_stcInitV0_2                     0x0002
    #define   LSb32VIPSTS_CFG0_stcInitV0_2                        16
    #define   LSb16VIPSTS_CFG0_stcInitV0_2                        0
    #define       bVIPSTS_CFG0_stcInitV0_2                     8
    #define   MSK32VIPSTS_CFG0_stcInitV0_2                        0x00FF0000

    #define     BA_VIPSTS_CFG0_stcInitV0_3                     0x0003
    #define     B16VIPSTS_CFG0_stcInitV0_3                     0x0002
    #define   LSb32VIPSTS_CFG0_stcInitV0_3                        24
    #define   LSb16VIPSTS_CFG0_stcInitV0_3                        8
    #define       bVIPSTS_CFG0_stcInitV0_3                     8
    #define   MSK32VIPSTS_CFG0_stcInitV0_3                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_CFG1                                 0x0004

    #define     BA_VIPSTS_CFG1_stcInitV0_4                     0x0004
    #define     B16VIPSTS_CFG1_stcInitV0_4                     0x0004
    #define   LSb32VIPSTS_CFG1_stcInitV0_4                        0
    #define   LSb16VIPSTS_CFG1_stcInitV0_4                        0
    #define       bVIPSTS_CFG1_stcInitV0_4                     8
    #define   MSK32VIPSTS_CFG1_stcInitV0_4                        0x000000FF

    #define     BA_VIPSTS_CFG1_stcInitV0_5                     0x0005
    #define     B16VIPSTS_CFG1_stcInitV0_5                     0x0004
    #define   LSb32VIPSTS_CFG1_stcInitV0_5                        8
    #define   LSb16VIPSTS_CFG1_stcInitV0_5                        8
    #define       bVIPSTS_CFG1_stcInitV0_5                     8
    #define   MSK32VIPSTS_CFG1_stcInitV0_5                        0x0000FF00

    #define     BA_VIPSTS_CFG1_stcInitV0_6                     0x0006
    #define     B16VIPSTS_CFG1_stcInitV0_6                     0x0006
    #define   LSb32VIPSTS_CFG1_stcInitV0_6                        16
    #define   LSb16VIPSTS_CFG1_stcInitV0_6                        0
    #define       bVIPSTS_CFG1_stcInitV0_6                     8
    #define   MSK32VIPSTS_CFG1_stcInitV0_6                        0x00FF0000

    #define     BA_VIPSTS_CFG1_stcInitV0_7                     0x0007
    #define     B16VIPSTS_CFG1_stcInitV0_7                     0x0006
    #define   LSb32VIPSTS_CFG1_stcInitV0_7                        24
    #define   LSb16VIPSTS_CFG1_stcInitV0_7                        8
    #define       bVIPSTS_CFG1_stcInitV0_7                     8
    #define   MSK32VIPSTS_CFG1_stcInitV0_7                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_CFG2                                 0x0008

    #define     BA_VIPSTS_CFG2_stcInitV1_0                     0x0008
    #define     B16VIPSTS_CFG2_stcInitV1_0                     0x0008
    #define   LSb32VIPSTS_CFG2_stcInitV1_0                        0
    #define   LSb16VIPSTS_CFG2_stcInitV1_0                        0
    #define       bVIPSTS_CFG2_stcInitV1_0                     8
    #define   MSK32VIPSTS_CFG2_stcInitV1_0                        0x000000FF

    #define     BA_VIPSTS_CFG2_stcInitV1_1                     0x0009
    #define     B16VIPSTS_CFG2_stcInitV1_1                     0x0008
    #define   LSb32VIPSTS_CFG2_stcInitV1_1                        8
    #define   LSb16VIPSTS_CFG2_stcInitV1_1                        8
    #define       bVIPSTS_CFG2_stcInitV1_1                     8
    #define   MSK32VIPSTS_CFG2_stcInitV1_1                        0x0000FF00

    #define     BA_VIPSTS_CFG2_stcInitV1_2                     0x000A
    #define     B16VIPSTS_CFG2_stcInitV1_2                     0x000A
    #define   LSb32VIPSTS_CFG2_stcInitV1_2                        16
    #define   LSb16VIPSTS_CFG2_stcInitV1_2                        0
    #define       bVIPSTS_CFG2_stcInitV1_2                     8
    #define   MSK32VIPSTS_CFG2_stcInitV1_2                        0x00FF0000

    #define     BA_VIPSTS_CFG2_stcInitV1_3                     0x000B
    #define     B16VIPSTS_CFG2_stcInitV1_3                     0x000A
    #define   LSb32VIPSTS_CFG2_stcInitV1_3                        24
    #define   LSb16VIPSTS_CFG2_stcInitV1_3                        8
    #define       bVIPSTS_CFG2_stcInitV1_3                     8
    #define   MSK32VIPSTS_CFG2_stcInitV1_3                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_CFG3                                 0x000C

    #define     BA_VIPSTS_CFG3_stcInitV1_4                     0x000C
    #define     B16VIPSTS_CFG3_stcInitV1_4                     0x000C
    #define   LSb32VIPSTS_CFG3_stcInitV1_4                        0
    #define   LSb16VIPSTS_CFG3_stcInitV1_4                        0
    #define       bVIPSTS_CFG3_stcInitV1_4                     8
    #define   MSK32VIPSTS_CFG3_stcInitV1_4                        0x000000FF

    #define     BA_VIPSTS_CFG3_stcInitV1_5                     0x000D
    #define     B16VIPSTS_CFG3_stcInitV1_5                     0x000C
    #define   LSb32VIPSTS_CFG3_stcInitV1_5                        8
    #define   LSb16VIPSTS_CFG3_stcInitV1_5                        8
    #define       bVIPSTS_CFG3_stcInitV1_5                     8
    #define   MSK32VIPSTS_CFG3_stcInitV1_5                        0x0000FF00

    #define     BA_VIPSTS_CFG3_stcInitV1_6                     0x000E
    #define     B16VIPSTS_CFG3_stcInitV1_6                     0x000E
    #define   LSb32VIPSTS_CFG3_stcInitV1_6                        16
    #define   LSb16VIPSTS_CFG3_stcInitV1_6                        0
    #define       bVIPSTS_CFG3_stcInitV1_6                     8
    #define   MSK32VIPSTS_CFG3_stcInitV1_6                        0x00FF0000

    #define     BA_VIPSTS_CFG3_stcInitV1_7                     0x000F
    #define     B16VIPSTS_CFG3_stcInitV1_7                     0x000E
    #define   LSb32VIPSTS_CFG3_stcInitV1_7                        24
    #define   LSb16VIPSTS_CFG3_stcInitV1_7                        8
    #define       bVIPSTS_CFG3_stcInitV1_7                     8
    #define   MSK32VIPSTS_CFG3_stcInitV1_7                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_CFG4                                 0x0010

    #define     BA_VIPSTS_CFG4_divValStc0_0                    0x0010
    #define     B16VIPSTS_CFG4_divValStc0_0                    0x0010
    #define   LSb32VIPSTS_CFG4_divValStc0_0                       0
    #define   LSb16VIPSTS_CFG4_divValStc0_0                       0
    #define       bVIPSTS_CFG4_divValStc0_0                    16
    #define   MSK32VIPSTS_CFG4_divValStc0_0                       0x0000FFFF

    #define     BA_VIPSTS_CFG4_divValStc0_1                    0x0012
    #define     B16VIPSTS_CFG4_divValStc0_1                    0x0012
    #define   LSb32VIPSTS_CFG4_divValStc0_1                       16
    #define   LSb16VIPSTS_CFG4_divValStc0_1                       0
    #define       bVIPSTS_CFG4_divValStc0_1                    16
    #define   MSK32VIPSTS_CFG4_divValStc0_1                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_CFG5                                 0x0014

    #define     BA_VIPSTS_CFG5_divValStc1_0                    0x0014
    #define     B16VIPSTS_CFG5_divValStc1_0                    0x0014
    #define   LSb32VIPSTS_CFG5_divValStc1_0                       0
    #define   LSb16VIPSTS_CFG5_divValStc1_0                       0
    #define       bVIPSTS_CFG5_divValStc1_0                    16
    #define   MSK32VIPSTS_CFG5_divValStc1_0                       0x0000FFFF

    #define     BA_VIPSTS_CFG5_divValStc1_1                    0x0016
    #define     B16VIPSTS_CFG5_divValStc1_1                    0x0016
    #define   LSb32VIPSTS_CFG5_divValStc1_1                       16
    #define   LSb16VIPSTS_CFG5_divValStc1_1                       0
    #define       bVIPSTS_CFG5_divValStc1_1                    16
    #define   MSK32VIPSTS_CFG5_divValStc1_1                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_CFG6                                 0x0018

    #define     BA_VIPSTS_CFG6_selSyncDviSts                   0x0018
    #define     B16VIPSTS_CFG6_selSyncDviSts                   0x0018
    #define   LSb32VIPSTS_CFG6_selSyncDviSts                      0
    #define   LSb16VIPSTS_CFG6_selSyncDviSts                      0
    #define       bVIPSTS_CFG6_selSyncDviSts                   8
    #define   MSK32VIPSTS_CFG6_selSyncDviSts                      0x000000FF

    #define     BA_VIPSTS_CFG6_selSyncHdmiRxSts                0x0019
    #define     B16VIPSTS_CFG6_selSyncHdmiRxSts                0x0018
    #define   LSb32VIPSTS_CFG6_selSyncHdmiRxSts                   8
    #define   LSb16VIPSTS_CFG6_selSyncHdmiRxSts                   8
    #define       bVIPSTS_CFG6_selSyncHdmiRxSts                8
    #define   MSK32VIPSTS_CFG6_selSyncHdmiRxSts                   0x0000FF00

    #define     BA_VIPSTS_CFG6_stsCtrl                         0x001A
    #define     B16VIPSTS_CFG6_stsCtrl                         0x001A
    #define   LSb32VIPSTS_CFG6_stsCtrl                            16
    #define   LSb16VIPSTS_CFG6_stsCtrl                            0
    #define       bVIPSTS_CFG6_stsCtrl                         8
    #define   MSK32VIPSTS_CFG6_stsCtrl                            0x00FF0000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS0                                 0x001C

    #define     BA_VIPSTS_STS0_dviSts0_0                       0x001C
    #define     B16VIPSTS_STS0_dviSts0_0                       0x001C
    #define   LSb32VIPSTS_STS0_dviSts0_0                          0
    #define   LSb16VIPSTS_STS0_dviSts0_0                          0
    #define       bVIPSTS_STS0_dviSts0_0                       8
    #define   MSK32VIPSTS_STS0_dviSts0_0                          0x000000FF

    #define     BA_VIPSTS_STS0_dviSts0_1                       0x001D
    #define     B16VIPSTS_STS0_dviSts0_1                       0x001C
    #define   LSb32VIPSTS_STS0_dviSts0_1                          8
    #define   LSb16VIPSTS_STS0_dviSts0_1                          8
    #define       bVIPSTS_STS0_dviSts0_1                       8
    #define   MSK32VIPSTS_STS0_dviSts0_1                          0x0000FF00

    #define     BA_VIPSTS_STS0_dviSts0_2                       0x001E
    #define     B16VIPSTS_STS0_dviSts0_2                       0x001E
    #define   LSb32VIPSTS_STS0_dviSts0_2                          16
    #define   LSb16VIPSTS_STS0_dviSts0_2                          0
    #define       bVIPSTS_STS0_dviSts0_2                       8
    #define   MSK32VIPSTS_STS0_dviSts0_2                          0x00FF0000

    #define     BA_VIPSTS_STS0_dviSts0_3                       0x001F
    #define     B16VIPSTS_STS0_dviSts0_3                       0x001E
    #define   LSb32VIPSTS_STS0_dviSts0_3                          24
    #define   LSb16VIPSTS_STS0_dviSts0_3                          8
    #define       bVIPSTS_STS0_dviSts0_3                       8
    #define   MSK32VIPSTS_STS0_dviSts0_3                          0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS1                                 0x0020

    #define     BA_VIPSTS_STS1_dviSts0_4                       0x0020
    #define     B16VIPSTS_STS1_dviSts0_4                       0x0020
    #define   LSb32VIPSTS_STS1_dviSts0_4                          0
    #define   LSb16VIPSTS_STS1_dviSts0_4                          0
    #define       bVIPSTS_STS1_dviSts0_4                       8
    #define   MSK32VIPSTS_STS1_dviSts0_4                          0x000000FF

    #define     BA_VIPSTS_STS1_dviSts0_5                       0x0021
    #define     B16VIPSTS_STS1_dviSts0_5                       0x0020
    #define   LSb32VIPSTS_STS1_dviSts0_5                          8
    #define   LSb16VIPSTS_STS1_dviSts0_5                          8
    #define       bVIPSTS_STS1_dviSts0_5                       8
    #define   MSK32VIPSTS_STS1_dviSts0_5                          0x0000FF00

    #define     BA_VIPSTS_STS1_dviSts0_6                       0x0022
    #define     B16VIPSTS_STS1_dviSts0_6                       0x0022
    #define   LSb32VIPSTS_STS1_dviSts0_6                          16
    #define   LSb16VIPSTS_STS1_dviSts0_6                          0
    #define       bVIPSTS_STS1_dviSts0_6                       8
    #define   MSK32VIPSTS_STS1_dviSts0_6                          0x00FF0000

    #define     BA_VIPSTS_STS1_dviSts0_7                       0x0023
    #define     B16VIPSTS_STS1_dviSts0_7                       0x0022
    #define   LSb32VIPSTS_STS1_dviSts0_7                          24
    #define   LSb16VIPSTS_STS1_dviSts0_7                          8
    #define       bVIPSTS_STS1_dviSts0_7                       8
    #define   MSK32VIPSTS_STS1_dviSts0_7                          0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS2                                 0x0024

    #define     BA_VIPSTS_STS2_dviSts1_0                       0x0024
    #define     B16VIPSTS_STS2_dviSts1_0                       0x0024
    #define   LSb32VIPSTS_STS2_dviSts1_0                          0
    #define   LSb16VIPSTS_STS2_dviSts1_0                          0
    #define       bVIPSTS_STS2_dviSts1_0                       8
    #define   MSK32VIPSTS_STS2_dviSts1_0                          0x000000FF

    #define     BA_VIPSTS_STS2_dviSts1_1                       0x0025
    #define     B16VIPSTS_STS2_dviSts1_1                       0x0024
    #define   LSb32VIPSTS_STS2_dviSts1_1                          8
    #define   LSb16VIPSTS_STS2_dviSts1_1                          8
    #define       bVIPSTS_STS2_dviSts1_1                       8
    #define   MSK32VIPSTS_STS2_dviSts1_1                          0x0000FF00

    #define     BA_VIPSTS_STS2_dviSts1_2                       0x0026
    #define     B16VIPSTS_STS2_dviSts1_2                       0x0026
    #define   LSb32VIPSTS_STS2_dviSts1_2                          16
    #define   LSb16VIPSTS_STS2_dviSts1_2                          0
    #define       bVIPSTS_STS2_dviSts1_2                       8
    #define   MSK32VIPSTS_STS2_dviSts1_2                          0x00FF0000

    #define     BA_VIPSTS_STS2_dviSts1_3                       0x0027
    #define     B16VIPSTS_STS2_dviSts1_3                       0x0026
    #define   LSb32VIPSTS_STS2_dviSts1_3                          24
    #define   LSb16VIPSTS_STS2_dviSts1_3                          8
    #define       bVIPSTS_STS2_dviSts1_3                       8
    #define   MSK32VIPSTS_STS2_dviSts1_3                          0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS3                                 0x0028

    #define     BA_VIPSTS_STS3_dviSts1_4                       0x0028
    #define     B16VIPSTS_STS3_dviSts1_4                       0x0028
    #define   LSb32VIPSTS_STS3_dviSts1_4                          0
    #define   LSb16VIPSTS_STS3_dviSts1_4                          0
    #define       bVIPSTS_STS3_dviSts1_4                       8
    #define   MSK32VIPSTS_STS3_dviSts1_4                          0x000000FF

    #define     BA_VIPSTS_STS3_dviSts1_5                       0x0029
    #define     B16VIPSTS_STS3_dviSts1_5                       0x0028
    #define   LSb32VIPSTS_STS3_dviSts1_5                          8
    #define   LSb16VIPSTS_STS3_dviSts1_5                          8
    #define       bVIPSTS_STS3_dviSts1_5                       8
    #define   MSK32VIPSTS_STS3_dviSts1_5                          0x0000FF00

    #define     BA_VIPSTS_STS3_dviSts1_6                       0x002A
    #define     B16VIPSTS_STS3_dviSts1_6                       0x002A
    #define   LSb32VIPSTS_STS3_dviSts1_6                          16
    #define   LSb16VIPSTS_STS3_dviSts1_6                          0
    #define       bVIPSTS_STS3_dviSts1_6                       8
    #define   MSK32VIPSTS_STS3_dviSts1_6                          0x00FF0000

    #define     BA_VIPSTS_STS3_dviSts1_7                       0x002B
    #define     B16VIPSTS_STS3_dviSts1_7                       0x002A
    #define   LSb32VIPSTS_STS3_dviSts1_7                          24
    #define   LSb16VIPSTS_STS3_dviSts1_7                          8
    #define       bVIPSTS_STS3_dviSts1_7                       8
    #define   MSK32VIPSTS_STS3_dviSts1_7                          0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS4                                 0x002C

    #define     BA_VIPSTS_STS4_hdmiRxSts0_0                    0x002C
    #define     B16VIPSTS_STS4_hdmiRxSts0_0                    0x002C
    #define   LSb32VIPSTS_STS4_hdmiRxSts0_0                       0
    #define   LSb16VIPSTS_STS4_hdmiRxSts0_0                       0
    #define       bVIPSTS_STS4_hdmiRxSts0_0                    8
    #define   MSK32VIPSTS_STS4_hdmiRxSts0_0                       0x000000FF

    #define     BA_VIPSTS_STS4_hdmiRxSts0_1                    0x002D
    #define     B16VIPSTS_STS4_hdmiRxSts0_1                    0x002C
    #define   LSb32VIPSTS_STS4_hdmiRxSts0_1                       8
    #define   LSb16VIPSTS_STS4_hdmiRxSts0_1                       8
    #define       bVIPSTS_STS4_hdmiRxSts0_1                    8
    #define   MSK32VIPSTS_STS4_hdmiRxSts0_1                       0x0000FF00

    #define     BA_VIPSTS_STS4_hdmiRxSts0_2                    0x002E
    #define     B16VIPSTS_STS4_hdmiRxSts0_2                    0x002E
    #define   LSb32VIPSTS_STS4_hdmiRxSts0_2                       16
    #define   LSb16VIPSTS_STS4_hdmiRxSts0_2                       0
    #define       bVIPSTS_STS4_hdmiRxSts0_2                    8
    #define   MSK32VIPSTS_STS4_hdmiRxSts0_2                       0x00FF0000

    #define     BA_VIPSTS_STS4_hdmiRxSts0_3                    0x002F
    #define     B16VIPSTS_STS4_hdmiRxSts0_3                    0x002E
    #define   LSb32VIPSTS_STS4_hdmiRxSts0_3                       24
    #define   LSb16VIPSTS_STS4_hdmiRxSts0_3                       8
    #define       bVIPSTS_STS4_hdmiRxSts0_3                    8
    #define   MSK32VIPSTS_STS4_hdmiRxSts0_3                       0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS5                                 0x0030

    #define     BA_VIPSTS_STS5_hdmiRxSts0_4                    0x0030
    #define     B16VIPSTS_STS5_hdmiRxSts0_4                    0x0030
    #define   LSb32VIPSTS_STS5_hdmiRxSts0_4                       0
    #define   LSb16VIPSTS_STS5_hdmiRxSts0_4                       0
    #define       bVIPSTS_STS5_hdmiRxSts0_4                    8
    #define   MSK32VIPSTS_STS5_hdmiRxSts0_4                       0x000000FF

    #define     BA_VIPSTS_STS5_hdmiRxSts0_5                    0x0031
    #define     B16VIPSTS_STS5_hdmiRxSts0_5                    0x0030
    #define   LSb32VIPSTS_STS5_hdmiRxSts0_5                       8
    #define   LSb16VIPSTS_STS5_hdmiRxSts0_5                       8
    #define       bVIPSTS_STS5_hdmiRxSts0_5                    8
    #define   MSK32VIPSTS_STS5_hdmiRxSts0_5                       0x0000FF00

    #define     BA_VIPSTS_STS5_hdmiRxSts0_6                    0x0032
    #define     B16VIPSTS_STS5_hdmiRxSts0_6                    0x0032
    #define   LSb32VIPSTS_STS5_hdmiRxSts0_6                       16
    #define   LSb16VIPSTS_STS5_hdmiRxSts0_6                       0
    #define       bVIPSTS_STS5_hdmiRxSts0_6                    8
    #define   MSK32VIPSTS_STS5_hdmiRxSts0_6                       0x00FF0000

    #define     BA_VIPSTS_STS5_hdmiRxSts0_7                    0x0033
    #define     B16VIPSTS_STS5_hdmiRxSts0_7                    0x0032
    #define   LSb32VIPSTS_STS5_hdmiRxSts0_7                       24
    #define   LSb16VIPSTS_STS5_hdmiRxSts0_7                       8
    #define       bVIPSTS_STS5_hdmiRxSts0_7                    8
    #define   MSK32VIPSTS_STS5_hdmiRxSts0_7                       0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS6                                 0x0034

    #define     BA_VIPSTS_STS6_hdmiRxSts1_0                    0x0034
    #define     B16VIPSTS_STS6_hdmiRxSts1_0                    0x0034
    #define   LSb32VIPSTS_STS6_hdmiRxSts1_0                       0
    #define   LSb16VIPSTS_STS6_hdmiRxSts1_0                       0
    #define       bVIPSTS_STS6_hdmiRxSts1_0                    8
    #define   MSK32VIPSTS_STS6_hdmiRxSts1_0                       0x000000FF

    #define     BA_VIPSTS_STS6_hdmiRxSts1_1                    0x0035
    #define     B16VIPSTS_STS6_hdmiRxSts1_1                    0x0034
    #define   LSb32VIPSTS_STS6_hdmiRxSts1_1                       8
    #define   LSb16VIPSTS_STS6_hdmiRxSts1_1                       8
    #define       bVIPSTS_STS6_hdmiRxSts1_1                    8
    #define   MSK32VIPSTS_STS6_hdmiRxSts1_1                       0x0000FF00

    #define     BA_VIPSTS_STS6_hdmiRxSts1_2                    0x0036
    #define     B16VIPSTS_STS6_hdmiRxSts1_2                    0x0036
    #define   LSb32VIPSTS_STS6_hdmiRxSts1_2                       16
    #define   LSb16VIPSTS_STS6_hdmiRxSts1_2                       0
    #define       bVIPSTS_STS6_hdmiRxSts1_2                    8
    #define   MSK32VIPSTS_STS6_hdmiRxSts1_2                       0x00FF0000

    #define     BA_VIPSTS_STS6_hdmiRxSts1_3                    0x0037
    #define     B16VIPSTS_STS6_hdmiRxSts1_3                    0x0036
    #define   LSb32VIPSTS_STS6_hdmiRxSts1_3                       24
    #define   LSb16VIPSTS_STS6_hdmiRxSts1_3                       8
    #define       bVIPSTS_STS6_hdmiRxSts1_3                    8
    #define   MSK32VIPSTS_STS6_hdmiRxSts1_3                       0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS7                                 0x0038

    #define     BA_VIPSTS_STS7_hdmiRxSts1_4                    0x0038
    #define     B16VIPSTS_STS7_hdmiRxSts1_4                    0x0038
    #define   LSb32VIPSTS_STS7_hdmiRxSts1_4                       0
    #define   LSb16VIPSTS_STS7_hdmiRxSts1_4                       0
    #define       bVIPSTS_STS7_hdmiRxSts1_4                    8
    #define   MSK32VIPSTS_STS7_hdmiRxSts1_4                       0x000000FF

    #define     BA_VIPSTS_STS7_hdmiRxSts1_5                    0x0039
    #define     B16VIPSTS_STS7_hdmiRxSts1_5                    0x0038
    #define   LSb32VIPSTS_STS7_hdmiRxSts1_5                       8
    #define   LSb16VIPSTS_STS7_hdmiRxSts1_5                       8
    #define       bVIPSTS_STS7_hdmiRxSts1_5                    8
    #define   MSK32VIPSTS_STS7_hdmiRxSts1_5                       0x0000FF00

    #define     BA_VIPSTS_STS7_hdmiRxSts1_6                    0x003A
    #define     B16VIPSTS_STS7_hdmiRxSts1_6                    0x003A
    #define   LSb32VIPSTS_STS7_hdmiRxSts1_6                       16
    #define   LSb16VIPSTS_STS7_hdmiRxSts1_6                       0
    #define       bVIPSTS_STS7_hdmiRxSts1_6                    8
    #define   MSK32VIPSTS_STS7_hdmiRxSts1_6                       0x00FF0000

    #define     BA_VIPSTS_STS7_hdmiRxSts1_7                    0x003B
    #define     B16VIPSTS_STS7_hdmiRxSts1_7                    0x003A
    #define   LSb32VIPSTS_STS7_hdmiRxSts1_7                       24
    #define   LSb16VIPSTS_STS7_hdmiRxSts1_7                       8
    #define       bVIPSTS_STS7_hdmiRxSts1_7                    8
    #define   MSK32VIPSTS_STS7_hdmiRxSts1_7                       0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS8                                 0x003C

    #define     BA_VIPSTS_STS8_dviSts0_rd_0                    0x003C
    #define     B16VIPSTS_STS8_dviSts0_rd_0                    0x003C
    #define   LSb32VIPSTS_STS8_dviSts0_rd_0                       0
    #define   LSb16VIPSTS_STS8_dviSts0_rd_0                       0
    #define       bVIPSTS_STS8_dviSts0_rd_0                    8
    #define   MSK32VIPSTS_STS8_dviSts0_rd_0                       0x000000FF

    #define     BA_VIPSTS_STS8_dviSts0_rd_1                    0x003D
    #define     B16VIPSTS_STS8_dviSts0_rd_1                    0x003C
    #define   LSb32VIPSTS_STS8_dviSts0_rd_1                       8
    #define   LSb16VIPSTS_STS8_dviSts0_rd_1                       8
    #define       bVIPSTS_STS8_dviSts0_rd_1                    8
    #define   MSK32VIPSTS_STS8_dviSts0_rd_1                       0x0000FF00

    #define     BA_VIPSTS_STS8_dviSts0_rd_2                    0x003E
    #define     B16VIPSTS_STS8_dviSts0_rd_2                    0x003E
    #define   LSb32VIPSTS_STS8_dviSts0_rd_2                       16
    #define   LSb16VIPSTS_STS8_dviSts0_rd_2                       0
    #define       bVIPSTS_STS8_dviSts0_rd_2                    8
    #define   MSK32VIPSTS_STS8_dviSts0_rd_2                       0x00FF0000

    #define     BA_VIPSTS_STS8_dviSts0_rd_3                    0x003F
    #define     B16VIPSTS_STS8_dviSts0_rd_3                    0x003E
    #define   LSb32VIPSTS_STS8_dviSts0_rd_3                       24
    #define   LSb16VIPSTS_STS8_dviSts0_rd_3                       8
    #define       bVIPSTS_STS8_dviSts0_rd_3                    8
    #define   MSK32VIPSTS_STS8_dviSts0_rd_3                       0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS9                                 0x0040

    #define     BA_VIPSTS_STS9_dviSts0_rd_4                    0x0040
    #define     B16VIPSTS_STS9_dviSts0_rd_4                    0x0040
    #define   LSb32VIPSTS_STS9_dviSts0_rd_4                       0
    #define   LSb16VIPSTS_STS9_dviSts0_rd_4                       0
    #define       bVIPSTS_STS9_dviSts0_rd_4                    8
    #define   MSK32VIPSTS_STS9_dviSts0_rd_4                       0x000000FF

    #define     BA_VIPSTS_STS9_dviSts0_rd_5                    0x0041
    #define     B16VIPSTS_STS9_dviSts0_rd_5                    0x0040
    #define   LSb32VIPSTS_STS9_dviSts0_rd_5                       8
    #define   LSb16VIPSTS_STS9_dviSts0_rd_5                       8
    #define       bVIPSTS_STS9_dviSts0_rd_5                    8
    #define   MSK32VIPSTS_STS9_dviSts0_rd_5                       0x0000FF00

    #define     BA_VIPSTS_STS9_dviSts0_rd_6                    0x0042
    #define     B16VIPSTS_STS9_dviSts0_rd_6                    0x0042
    #define   LSb32VIPSTS_STS9_dviSts0_rd_6                       16
    #define   LSb16VIPSTS_STS9_dviSts0_rd_6                       0
    #define       bVIPSTS_STS9_dviSts0_rd_6                    8
    #define   MSK32VIPSTS_STS9_dviSts0_rd_6                       0x00FF0000

    #define     BA_VIPSTS_STS9_dviSts0_rd_7                    0x0043
    #define     B16VIPSTS_STS9_dviSts0_rd_7                    0x0042
    #define   LSb32VIPSTS_STS9_dviSts0_rd_7                       24
    #define   LSb16VIPSTS_STS9_dviSts0_rd_7                       8
    #define       bVIPSTS_STS9_dviSts0_rd_7                    8
    #define   MSK32VIPSTS_STS9_dviSts0_rd_7                       0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS10                                0x0044

    #define     BA_VIPSTS_STS10_dviSts1_rd_0                   0x0044
    #define     B16VIPSTS_STS10_dviSts1_rd_0                   0x0044
    #define   LSb32VIPSTS_STS10_dviSts1_rd_0                      0
    #define   LSb16VIPSTS_STS10_dviSts1_rd_0                      0
    #define       bVIPSTS_STS10_dviSts1_rd_0                   8
    #define   MSK32VIPSTS_STS10_dviSts1_rd_0                      0x000000FF

    #define     BA_VIPSTS_STS10_dviSts1_rd_1                   0x0045
    #define     B16VIPSTS_STS10_dviSts1_rd_1                   0x0044
    #define   LSb32VIPSTS_STS10_dviSts1_rd_1                      8
    #define   LSb16VIPSTS_STS10_dviSts1_rd_1                      8
    #define       bVIPSTS_STS10_dviSts1_rd_1                   8
    #define   MSK32VIPSTS_STS10_dviSts1_rd_1                      0x0000FF00

    #define     BA_VIPSTS_STS10_dviSts1_rd_2                   0x0046
    #define     B16VIPSTS_STS10_dviSts1_rd_2                   0x0046
    #define   LSb32VIPSTS_STS10_dviSts1_rd_2                      16
    #define   LSb16VIPSTS_STS10_dviSts1_rd_2                      0
    #define       bVIPSTS_STS10_dviSts1_rd_2                   8
    #define   MSK32VIPSTS_STS10_dviSts1_rd_2                      0x00FF0000

    #define     BA_VIPSTS_STS10_dviSts1_rd_3                   0x0047
    #define     B16VIPSTS_STS10_dviSts1_rd_3                   0x0046
    #define   LSb32VIPSTS_STS10_dviSts1_rd_3                      24
    #define   LSb16VIPSTS_STS10_dviSts1_rd_3                      8
    #define       bVIPSTS_STS10_dviSts1_rd_3                   8
    #define   MSK32VIPSTS_STS10_dviSts1_rd_3                      0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSTS_STS11                                0x0048

    #define     BA_VIPSTS_STS11_dviSts1_rd_4                   0x0048
    #define     B16VIPSTS_STS11_dviSts1_rd_4                   0x0048
    #define   LSb32VIPSTS_STS11_dviSts1_rd_4                      0
    #define   LSb16VIPSTS_STS11_dviSts1_rd_4                      0
    #define       bVIPSTS_STS11_dviSts1_rd_4                   8
    #define   MSK32VIPSTS_STS11_dviSts1_rd_4                      0x000000FF

    #define     BA_VIPSTS_STS11_dviSts1_rd_5                   0x0049
    #define     B16VIPSTS_STS11_dviSts1_rd_5                   0x0048
    #define   LSb32VIPSTS_STS11_dviSts1_rd_5                      8
    #define   LSb16VIPSTS_STS11_dviSts1_rd_5                      8
    #define       bVIPSTS_STS11_dviSts1_rd_5                   8
    #define   MSK32VIPSTS_STS11_dviSts1_rd_5                      0x0000FF00

    #define     BA_VIPSTS_STS11_dviSts1_rd_6                   0x004A
    #define     B16VIPSTS_STS11_dviSts1_rd_6                   0x004A
    #define   LSb32VIPSTS_STS11_dviSts1_rd_6                      16
    #define   LSb16VIPSTS_STS11_dviSts1_rd_6                      0
    #define       bVIPSTS_STS11_dviSts1_rd_6                   8
    #define   MSK32VIPSTS_STS11_dviSts1_rd_6                      0x00FF0000

    #define     BA_VIPSTS_STS11_dviSts1_rd_7                   0x004B
    #define     B16VIPSTS_STS11_dviSts1_rd_7                   0x004A
    #define   LSb32VIPSTS_STS11_dviSts1_rd_7                      24
    #define   LSb16VIPSTS_STS11_dviSts1_rd_7                      8
    #define       bVIPSTS_STS11_dviSts1_rd_7                   8
    #define   MSK32VIPSTS_STS11_dviSts1_rd_7                      0xFF000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_VIPSTS {
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_CFG0_stcInitV0_0(r32)                _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_CFG0_stcInitV0_0(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_CFG0_stcInitV0_0(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG0_stcInitV0_0(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG0_stcInitV0_1(r32)                _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_CFG0_stcInitV0_1(r32,v)              _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_CFG0_stcInitV0_1(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG0_stcInitV0_1(r16,v)              _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_CFG0_stcInitV0_2(r32)                _BFGET_(r32,23,16)
    #define   SET32VIPSTS_CFG0_stcInitV0_2(r32,v)              _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_CFG0_stcInitV0_2(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG0_stcInitV0_2(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG0_stcInitV0_3(r32)                _BFGET_(r32,31,24)
    #define   SET32VIPSTS_CFG0_stcInitV0_3(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_CFG0_stcInitV0_3(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG0_stcInitV0_3(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_CFG0                                 {\
            UNSG32 uCFG0_stcInitV0_0                           :  8;\
            UNSG32 uCFG0_stcInitV0_1                           :  8;\
            UNSG32 uCFG0_stcInitV0_2                           :  8;\
            UNSG32 uCFG0_stcInitV0_3                           :  8;\
          }
    union { UNSG32 u32VIPSTS_CFG0;
            struct w32VIPSTS_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_CFG1_stcInitV0_4(r32)                _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_CFG1_stcInitV0_4(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_CFG1_stcInitV0_4(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG1_stcInitV0_4(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG1_stcInitV0_5(r32)                _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_CFG1_stcInitV0_5(r32,v)              _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_CFG1_stcInitV0_5(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG1_stcInitV0_5(r16,v)              _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_CFG1_stcInitV0_6(r32)                _BFGET_(r32,23,16)
    #define   SET32VIPSTS_CFG1_stcInitV0_6(r32,v)              _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_CFG1_stcInitV0_6(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG1_stcInitV0_6(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG1_stcInitV0_7(r32)                _BFGET_(r32,31,24)
    #define   SET32VIPSTS_CFG1_stcInitV0_7(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_CFG1_stcInitV0_7(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG1_stcInitV0_7(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_CFG1                                 {\
            UNSG32 uCFG1_stcInitV0_4                           :  8;\
            UNSG32 uCFG1_stcInitV0_5                           :  8;\
            UNSG32 uCFG1_stcInitV0_6                           :  8;\
            UNSG32 uCFG1_stcInitV0_7                           :  8;\
          }
    union { UNSG32 u32VIPSTS_CFG1;
            struct w32VIPSTS_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_CFG2_stcInitV1_0(r32)                _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_CFG2_stcInitV1_0(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_CFG2_stcInitV1_0(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG2_stcInitV1_0(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG2_stcInitV1_1(r32)                _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_CFG2_stcInitV1_1(r32,v)              _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_CFG2_stcInitV1_1(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG2_stcInitV1_1(r16,v)              _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_CFG2_stcInitV1_2(r32)                _BFGET_(r32,23,16)
    #define   SET32VIPSTS_CFG2_stcInitV1_2(r32,v)              _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_CFG2_stcInitV1_2(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG2_stcInitV1_2(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG2_stcInitV1_3(r32)                _BFGET_(r32,31,24)
    #define   SET32VIPSTS_CFG2_stcInitV1_3(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_CFG2_stcInitV1_3(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG2_stcInitV1_3(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_CFG2                                 {\
            UNSG32 uCFG2_stcInitV1_0                           :  8;\
            UNSG32 uCFG2_stcInitV1_1                           :  8;\
            UNSG32 uCFG2_stcInitV1_2                           :  8;\
            UNSG32 uCFG2_stcInitV1_3                           :  8;\
          }
    union { UNSG32 u32VIPSTS_CFG2;
            struct w32VIPSTS_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_CFG3_stcInitV1_4(r32)                _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_CFG3_stcInitV1_4(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_CFG3_stcInitV1_4(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG3_stcInitV1_4(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG3_stcInitV1_5(r32)                _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_CFG3_stcInitV1_5(r32,v)              _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_CFG3_stcInitV1_5(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG3_stcInitV1_5(r16,v)              _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_CFG3_stcInitV1_6(r32)                _BFGET_(r32,23,16)
    #define   SET32VIPSTS_CFG3_stcInitV1_6(r32,v)              _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_CFG3_stcInitV1_6(r16)                _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG3_stcInitV1_6(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG3_stcInitV1_7(r32)                _BFGET_(r32,31,24)
    #define   SET32VIPSTS_CFG3_stcInitV1_7(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_CFG3_stcInitV1_7(r16)                _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG3_stcInitV1_7(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_CFG3                                 {\
            UNSG32 uCFG3_stcInitV1_4                           :  8;\
            UNSG32 uCFG3_stcInitV1_5                           :  8;\
            UNSG32 uCFG3_stcInitV1_6                           :  8;\
            UNSG32 uCFG3_stcInitV1_7                           :  8;\
          }
    union { UNSG32 u32VIPSTS_CFG3;
            struct w32VIPSTS_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_CFG4_divValStc0_0(r32)               _BFGET_(r32,15, 0)
    #define   SET32VIPSTS_CFG4_divValStc0_0(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16VIPSTS_CFG4_divValStc0_0(r16)               _BFGET_(r16,15, 0)
    #define   SET16VIPSTS_CFG4_divValStc0_0(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32VIPSTS_CFG4_divValStc0_1(r32)               _BFGET_(r32,31,16)
    #define   SET32VIPSTS_CFG4_divValStc0_1(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16VIPSTS_CFG4_divValStc0_1(r16)               _BFGET_(r16,15, 0)
    #define   SET16VIPSTS_CFG4_divValStc0_1(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32VIPSTS_CFG4                                 {\
            UNSG32 uCFG4_divValStc0_0                          : 16;\
            UNSG32 uCFG4_divValStc0_1                          : 16;\
          }
    union { UNSG32 u32VIPSTS_CFG4;
            struct w32VIPSTS_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_CFG5_divValStc1_0(r32)               _BFGET_(r32,15, 0)
    #define   SET32VIPSTS_CFG5_divValStc1_0(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16VIPSTS_CFG5_divValStc1_0(r16)               _BFGET_(r16,15, 0)
    #define   SET16VIPSTS_CFG5_divValStc1_0(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32VIPSTS_CFG5_divValStc1_1(r32)               _BFGET_(r32,31,16)
    #define   SET32VIPSTS_CFG5_divValStc1_1(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16VIPSTS_CFG5_divValStc1_1(r16)               _BFGET_(r16,15, 0)
    #define   SET16VIPSTS_CFG5_divValStc1_1(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32VIPSTS_CFG5                                 {\
            UNSG32 uCFG5_divValStc1_0                          : 16;\
            UNSG32 uCFG5_divValStc1_1                          : 16;\
          }
    union { UNSG32 u32VIPSTS_CFG5;
            struct w32VIPSTS_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_CFG6_selSyncDviSts(r32)              _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_CFG6_selSyncDviSts(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_CFG6_selSyncDviSts(r16)              _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG6_selSyncDviSts(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_CFG6_selSyncHdmiRxSts(r32)           _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_CFG6_selSyncHdmiRxSts(r32,v)         _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_CFG6_selSyncHdmiRxSts(r16)           _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_CFG6_selSyncHdmiRxSts(r16,v)         _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_CFG6_stsCtrl(r32)                    _BFGET_(r32,23,16)
    #define   SET32VIPSTS_CFG6_stsCtrl(r32,v)                  _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_CFG6_stsCtrl(r16)                    _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_CFG6_stsCtrl(r16,v)                  _BFSET_(r16, 7, 0,v)

    #define     w32VIPSTS_CFG6                                 {\
            UNSG32 uCFG6_selSyncDviSts                         :  8;\
            UNSG32 uCFG6_selSyncHdmiRxSts                      :  8;\
            UNSG32 uCFG6_stsCtrl                               :  8;\
            UNSG32 RSVDx18_b24                                 :  8;\
          }
    union { UNSG32 u32VIPSTS_CFG6;
            struct w32VIPSTS_CFG6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS0_dviSts0_0(r32)                  _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS0_dviSts0_0(r32,v)                _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS0_dviSts0_0(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS0_dviSts0_0(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS0_dviSts0_1(r32)                  _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS0_dviSts0_1(r32,v)                _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS0_dviSts0_1(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS0_dviSts0_1(r16,v)                _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS0_dviSts0_2(r32)                  _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS0_dviSts0_2(r32,v)                _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS0_dviSts0_2(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS0_dviSts0_2(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS0_dviSts0_3(r32)                  _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS0_dviSts0_3(r32,v)                _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS0_dviSts0_3(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS0_dviSts0_3(r16,v)                _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS0                                 {\
            UNSG32 uSTS0_dviSts0_0                             :  8;\
            UNSG32 uSTS0_dviSts0_1                             :  8;\
            UNSG32 uSTS0_dviSts0_2                             :  8;\
            UNSG32 uSTS0_dviSts0_3                             :  8;\
          }
    union { UNSG32 u32VIPSTS_STS0;
            struct w32VIPSTS_STS0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS1_dviSts0_4(r32)                  _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS1_dviSts0_4(r32,v)                _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS1_dviSts0_4(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS1_dviSts0_4(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS1_dviSts0_5(r32)                  _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS1_dviSts0_5(r32,v)                _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS1_dviSts0_5(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS1_dviSts0_5(r16,v)                _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS1_dviSts0_6(r32)                  _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS1_dviSts0_6(r32,v)                _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS1_dviSts0_6(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS1_dviSts0_6(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS1_dviSts0_7(r32)                  _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS1_dviSts0_7(r32,v)                _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS1_dviSts0_7(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS1_dviSts0_7(r16,v)                _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS1                                 {\
            UNSG32 uSTS1_dviSts0_4                             :  8;\
            UNSG32 uSTS1_dviSts0_5                             :  8;\
            UNSG32 uSTS1_dviSts0_6                             :  8;\
            UNSG32 uSTS1_dviSts0_7                             :  8;\
          }
    union { UNSG32 u32VIPSTS_STS1;
            struct w32VIPSTS_STS1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS2_dviSts1_0(r32)                  _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS2_dviSts1_0(r32,v)                _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS2_dviSts1_0(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS2_dviSts1_0(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS2_dviSts1_1(r32)                  _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS2_dviSts1_1(r32,v)                _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS2_dviSts1_1(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS2_dviSts1_1(r16,v)                _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS2_dviSts1_2(r32)                  _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS2_dviSts1_2(r32,v)                _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS2_dviSts1_2(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS2_dviSts1_2(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS2_dviSts1_3(r32)                  _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS2_dviSts1_3(r32,v)                _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS2_dviSts1_3(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS2_dviSts1_3(r16,v)                _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS2                                 {\
            UNSG32 uSTS2_dviSts1_0                             :  8;\
            UNSG32 uSTS2_dviSts1_1                             :  8;\
            UNSG32 uSTS2_dviSts1_2                             :  8;\
            UNSG32 uSTS2_dviSts1_3                             :  8;\
          }
    union { UNSG32 u32VIPSTS_STS2;
            struct w32VIPSTS_STS2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS3_dviSts1_4(r32)                  _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS3_dviSts1_4(r32,v)                _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS3_dviSts1_4(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS3_dviSts1_4(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS3_dviSts1_5(r32)                  _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS3_dviSts1_5(r32,v)                _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS3_dviSts1_5(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS3_dviSts1_5(r16,v)                _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS3_dviSts1_6(r32)                  _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS3_dviSts1_6(r32,v)                _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS3_dviSts1_6(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS3_dviSts1_6(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS3_dviSts1_7(r32)                  _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS3_dviSts1_7(r32,v)                _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS3_dviSts1_7(r16)                  _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS3_dviSts1_7(r16,v)                _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS3                                 {\
            UNSG32 uSTS3_dviSts1_4                             :  8;\
            UNSG32 uSTS3_dviSts1_5                             :  8;\
            UNSG32 uSTS3_dviSts1_6                             :  8;\
            UNSG32 uSTS3_dviSts1_7                             :  8;\
          }
    union { UNSG32 u32VIPSTS_STS3;
            struct w32VIPSTS_STS3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS4_hdmiRxSts0_0(r32)               _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS4_hdmiRxSts0_0(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS4_hdmiRxSts0_0(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS4_hdmiRxSts0_0(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS4_hdmiRxSts0_1(r32)               _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS4_hdmiRxSts0_1(r32,v)             _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS4_hdmiRxSts0_1(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS4_hdmiRxSts0_1(r16,v)             _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS4_hdmiRxSts0_2(r32)               _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS4_hdmiRxSts0_2(r32,v)             _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS4_hdmiRxSts0_2(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS4_hdmiRxSts0_2(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS4_hdmiRxSts0_3(r32)               _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS4_hdmiRxSts0_3(r32,v)             _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS4_hdmiRxSts0_3(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS4_hdmiRxSts0_3(r16,v)             _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS4                                 {\
            UNSG32 uSTS4_hdmiRxSts0_0                          :  8;\
            UNSG32 uSTS4_hdmiRxSts0_1                          :  8;\
            UNSG32 uSTS4_hdmiRxSts0_2                          :  8;\
            UNSG32 uSTS4_hdmiRxSts0_3                          :  8;\
          }
    union { UNSG32 u32VIPSTS_STS4;
            struct w32VIPSTS_STS4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS5_hdmiRxSts0_4(r32)               _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS5_hdmiRxSts0_4(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS5_hdmiRxSts0_4(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS5_hdmiRxSts0_4(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS5_hdmiRxSts0_5(r32)               _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS5_hdmiRxSts0_5(r32,v)             _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS5_hdmiRxSts0_5(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS5_hdmiRxSts0_5(r16,v)             _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS5_hdmiRxSts0_6(r32)               _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS5_hdmiRxSts0_6(r32,v)             _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS5_hdmiRxSts0_6(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS5_hdmiRxSts0_6(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS5_hdmiRxSts0_7(r32)               _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS5_hdmiRxSts0_7(r32,v)             _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS5_hdmiRxSts0_7(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS5_hdmiRxSts0_7(r16,v)             _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS5                                 {\
            UNSG32 uSTS5_hdmiRxSts0_4                          :  8;\
            UNSG32 uSTS5_hdmiRxSts0_5                          :  8;\
            UNSG32 uSTS5_hdmiRxSts0_6                          :  8;\
            UNSG32 uSTS5_hdmiRxSts0_7                          :  8;\
          }
    union { UNSG32 u32VIPSTS_STS5;
            struct w32VIPSTS_STS5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS6_hdmiRxSts1_0(r32)               _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS6_hdmiRxSts1_0(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS6_hdmiRxSts1_0(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS6_hdmiRxSts1_0(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS6_hdmiRxSts1_1(r32)               _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS6_hdmiRxSts1_1(r32,v)             _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS6_hdmiRxSts1_1(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS6_hdmiRxSts1_1(r16,v)             _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS6_hdmiRxSts1_2(r32)               _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS6_hdmiRxSts1_2(r32,v)             _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS6_hdmiRxSts1_2(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS6_hdmiRxSts1_2(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS6_hdmiRxSts1_3(r32)               _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS6_hdmiRxSts1_3(r32,v)             _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS6_hdmiRxSts1_3(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS6_hdmiRxSts1_3(r16,v)             _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS6                                 {\
            UNSG32 uSTS6_hdmiRxSts1_0                          :  8;\
            UNSG32 uSTS6_hdmiRxSts1_1                          :  8;\
            UNSG32 uSTS6_hdmiRxSts1_2                          :  8;\
            UNSG32 uSTS6_hdmiRxSts1_3                          :  8;\
          }
    union { UNSG32 u32VIPSTS_STS6;
            struct w32VIPSTS_STS6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS7_hdmiRxSts1_4(r32)               _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS7_hdmiRxSts1_4(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS7_hdmiRxSts1_4(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS7_hdmiRxSts1_4(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS7_hdmiRxSts1_5(r32)               _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS7_hdmiRxSts1_5(r32,v)             _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS7_hdmiRxSts1_5(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS7_hdmiRxSts1_5(r16,v)             _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS7_hdmiRxSts1_6(r32)               _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS7_hdmiRxSts1_6(r32,v)             _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS7_hdmiRxSts1_6(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS7_hdmiRxSts1_6(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS7_hdmiRxSts1_7(r32)               _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS7_hdmiRxSts1_7(r32,v)             _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS7_hdmiRxSts1_7(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS7_hdmiRxSts1_7(r16,v)             _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS7                                 {\
            UNSG32 uSTS7_hdmiRxSts1_4                          :  8;\
            UNSG32 uSTS7_hdmiRxSts1_5                          :  8;\
            UNSG32 uSTS7_hdmiRxSts1_6                          :  8;\
            UNSG32 uSTS7_hdmiRxSts1_7                          :  8;\
          }
    union { UNSG32 u32VIPSTS_STS7;
            struct w32VIPSTS_STS7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS8_dviSts0_rd_0(r32)               _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS8_dviSts0_rd_0(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS8_dviSts0_rd_0(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS8_dviSts0_rd_0(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS8_dviSts0_rd_1(r32)               _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS8_dviSts0_rd_1(r32,v)             _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS8_dviSts0_rd_1(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS8_dviSts0_rd_1(r16,v)             _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS8_dviSts0_rd_2(r32)               _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS8_dviSts0_rd_2(r32,v)             _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS8_dviSts0_rd_2(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS8_dviSts0_rd_2(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS8_dviSts0_rd_3(r32)               _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS8_dviSts0_rd_3(r32,v)             _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS8_dviSts0_rd_3(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS8_dviSts0_rd_3(r16,v)             _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS8                                 {\
            UNSG32 uSTS8_dviSts0_rd_0                          :  8;\
            UNSG32 uSTS8_dviSts0_rd_1                          :  8;\
            UNSG32 uSTS8_dviSts0_rd_2                          :  8;\
            UNSG32 uSTS8_dviSts0_rd_3                          :  8;\
          }
    union { UNSG32 u32VIPSTS_STS8;
            struct w32VIPSTS_STS8;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS9_dviSts0_rd_4(r32)               _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS9_dviSts0_rd_4(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS9_dviSts0_rd_4(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS9_dviSts0_rd_4(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS9_dviSts0_rd_5(r32)               _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS9_dviSts0_rd_5(r32,v)             _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS9_dviSts0_rd_5(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS9_dviSts0_rd_5(r16,v)             _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS9_dviSts0_rd_6(r32)               _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS9_dviSts0_rd_6(r32,v)             _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS9_dviSts0_rd_6(r16)               _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS9_dviSts0_rd_6(r16,v)             _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS9_dviSts0_rd_7(r32)               _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS9_dviSts0_rd_7(r32,v)             _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS9_dviSts0_rd_7(r16)               _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS9_dviSts0_rd_7(r16,v)             _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS9                                 {\
            UNSG32 uSTS9_dviSts0_rd_4                          :  8;\
            UNSG32 uSTS9_dviSts0_rd_5                          :  8;\
            UNSG32 uSTS9_dviSts0_rd_6                          :  8;\
            UNSG32 uSTS9_dviSts0_rd_7                          :  8;\
          }
    union { UNSG32 u32VIPSTS_STS9;
            struct w32VIPSTS_STS9;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS10_dviSts1_rd_0(r32)              _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS10_dviSts1_rd_0(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS10_dviSts1_rd_0(r16)              _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS10_dviSts1_rd_0(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS10_dviSts1_rd_1(r32)              _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS10_dviSts1_rd_1(r32,v)            _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS10_dviSts1_rd_1(r16)              _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS10_dviSts1_rd_1(r16,v)            _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS10_dviSts1_rd_2(r32)              _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS10_dviSts1_rd_2(r32,v)            _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS10_dviSts1_rd_2(r16)              _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS10_dviSts1_rd_2(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS10_dviSts1_rd_3(r32)              _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS10_dviSts1_rd_3(r32,v)            _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS10_dviSts1_rd_3(r16)              _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS10_dviSts1_rd_3(r16,v)            _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS10                                {\
            UNSG32 uSTS10_dviSts1_rd_0                         :  8;\
            UNSG32 uSTS10_dviSts1_rd_1                         :  8;\
            UNSG32 uSTS10_dviSts1_rd_2                         :  8;\
            UNSG32 uSTS10_dviSts1_rd_3                         :  8;\
          }
    union { UNSG32 u32VIPSTS_STS10;
            struct w32VIPSTS_STS10;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSTS_STS11_dviSts1_rd_4(r32)              _BFGET_(r32, 7, 0)
    #define   SET32VIPSTS_STS11_dviSts1_rd_4(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16VIPSTS_STS11_dviSts1_rd_4(r16)              _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS11_dviSts1_rd_4(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS11_dviSts1_rd_5(r32)              _BFGET_(r32,15, 8)
    #define   SET32VIPSTS_STS11_dviSts1_rd_5(r32,v)            _BFSET_(r32,15, 8,v)
    #define   GET16VIPSTS_STS11_dviSts1_rd_5(r16)              _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS11_dviSts1_rd_5(r16,v)            _BFSET_(r16,15, 8,v)

    #define   GET32VIPSTS_STS11_dviSts1_rd_6(r32)              _BFGET_(r32,23,16)
    #define   SET32VIPSTS_STS11_dviSts1_rd_6(r32,v)            _BFSET_(r32,23,16,v)
    #define   GET16VIPSTS_STS11_dviSts1_rd_6(r16)              _BFGET_(r16, 7, 0)
    #define   SET16VIPSTS_STS11_dviSts1_rd_6(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32VIPSTS_STS11_dviSts1_rd_7(r32)              _BFGET_(r32,31,24)
    #define   SET32VIPSTS_STS11_dviSts1_rd_7(r32,v)            _BFSET_(r32,31,24,v)
    #define   GET16VIPSTS_STS11_dviSts1_rd_7(r16)              _BFGET_(r16,15, 8)
    #define   SET16VIPSTS_STS11_dviSts1_rd_7(r16,v)            _BFSET_(r16,15, 8,v)

    #define     w32VIPSTS_STS11                                {\
            UNSG32 uSTS11_dviSts1_rd_4                         :  8;\
            UNSG32 uSTS11_dviSts1_rd_5                         :  8;\
            UNSG32 uSTS11_dviSts1_rd_6                         :  8;\
            UNSG32 uSTS11_dviSts1_rd_7                         :  8;\
          }
    union { UNSG32 u32VIPSTS_STS11;
            struct w32VIPSTS_STS11;
          };
    ///////////////////////////////////////////////////////////
    } SIE_VIPSTS;

    typedef union  T32VIPSTS_CFG0
          { UNSG32 u32;
            struct w32VIPSTS_CFG0;
                 } T32VIPSTS_CFG0;
    typedef union  T32VIPSTS_CFG1
          { UNSG32 u32;
            struct w32VIPSTS_CFG1;
                 } T32VIPSTS_CFG1;
    typedef union  T32VIPSTS_CFG2
          { UNSG32 u32;
            struct w32VIPSTS_CFG2;
                 } T32VIPSTS_CFG2;
    typedef union  T32VIPSTS_CFG3
          { UNSG32 u32;
            struct w32VIPSTS_CFG3;
                 } T32VIPSTS_CFG3;
    typedef union  T32VIPSTS_CFG4
          { UNSG32 u32;
            struct w32VIPSTS_CFG4;
                 } T32VIPSTS_CFG4;
    typedef union  T32VIPSTS_CFG5
          { UNSG32 u32;
            struct w32VIPSTS_CFG5;
                 } T32VIPSTS_CFG5;
    typedef union  T32VIPSTS_CFG6
          { UNSG32 u32;
            struct w32VIPSTS_CFG6;
                 } T32VIPSTS_CFG6;
    typedef union  T32VIPSTS_STS0
          { UNSG32 u32;
            struct w32VIPSTS_STS0;
                 } T32VIPSTS_STS0;
    typedef union  T32VIPSTS_STS1
          { UNSG32 u32;
            struct w32VIPSTS_STS1;
                 } T32VIPSTS_STS1;
    typedef union  T32VIPSTS_STS2
          { UNSG32 u32;
            struct w32VIPSTS_STS2;
                 } T32VIPSTS_STS2;
    typedef union  T32VIPSTS_STS3
          { UNSG32 u32;
            struct w32VIPSTS_STS3;
                 } T32VIPSTS_STS3;
    typedef union  T32VIPSTS_STS4
          { UNSG32 u32;
            struct w32VIPSTS_STS4;
                 } T32VIPSTS_STS4;
    typedef union  T32VIPSTS_STS5
          { UNSG32 u32;
            struct w32VIPSTS_STS5;
                 } T32VIPSTS_STS5;
    typedef union  T32VIPSTS_STS6
          { UNSG32 u32;
            struct w32VIPSTS_STS6;
                 } T32VIPSTS_STS6;
    typedef union  T32VIPSTS_STS7
          { UNSG32 u32;
            struct w32VIPSTS_STS7;
                 } T32VIPSTS_STS7;
    typedef union  T32VIPSTS_STS8
          { UNSG32 u32;
            struct w32VIPSTS_STS8;
                 } T32VIPSTS_STS8;
    typedef union  T32VIPSTS_STS9
          { UNSG32 u32;
            struct w32VIPSTS_STS9;
                 } T32VIPSTS_STS9;
    typedef union  T32VIPSTS_STS10
          { UNSG32 u32;
            struct w32VIPSTS_STS10;
                 } T32VIPSTS_STS10;
    typedef union  T32VIPSTS_STS11
          { UNSG32 u32;
            struct w32VIPSTS_STS11;
                 } T32VIPSTS_STS11;
    ///////////////////////////////////////////////////////////

    typedef union  TVIPSTS_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_CFG0;
                   };
                 } TVIPSTS_CFG0;
    typedef union  TVIPSTS_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_CFG1;
                   };
                 } TVIPSTS_CFG1;
    typedef union  TVIPSTS_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_CFG2;
                   };
                 } TVIPSTS_CFG2;
    typedef union  TVIPSTS_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_CFG3;
                   };
                 } TVIPSTS_CFG3;
    typedef union  TVIPSTS_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_CFG4;
                   };
                 } TVIPSTS_CFG4;
    typedef union  TVIPSTS_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_CFG5;
                   };
                 } TVIPSTS_CFG5;
    typedef union  TVIPSTS_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_CFG6;
                   };
                 } TVIPSTS_CFG6;
    typedef union  TVIPSTS_STS0
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS0;
                   };
                 } TVIPSTS_STS0;
    typedef union  TVIPSTS_STS1
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS1;
                   };
                 } TVIPSTS_STS1;
    typedef union  TVIPSTS_STS2
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS2;
                   };
                 } TVIPSTS_STS2;
    typedef union  TVIPSTS_STS3
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS3;
                   };
                 } TVIPSTS_STS3;
    typedef union  TVIPSTS_STS4
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS4;
                   };
                 } TVIPSTS_STS4;
    typedef union  TVIPSTS_STS5
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS5;
                   };
                 } TVIPSTS_STS5;
    typedef union  TVIPSTS_STS6
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS6;
                   };
                 } TVIPSTS_STS6;
    typedef union  TVIPSTS_STS7
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS7;
                   };
                 } TVIPSTS_STS7;
    typedef union  TVIPSTS_STS8
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS8;
                   };
                 } TVIPSTS_STS8;
    typedef union  TVIPSTS_STS9
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS9;
                   };
                 } TVIPSTS_STS9;
    typedef union  TVIPSTS_STS10
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS10;
                   };
                 } TVIPSTS_STS10;
    typedef union  TVIPSTS_STS11
          { UNSG32 u32[1];
            struct {
            struct w32VIPSTS_STS11;
                   };
                 } TVIPSTS_STS11;

    ///////////////////////////////////////////////////////////
     SIGN32 VIPSTS_drvrd(SIE_VIPSTS *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 VIPSTS_drvwr(SIE_VIPSTS *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void VIPSTS_reset(SIE_VIPSTS *p);
     SIGN32 VIPSTS_cmp  (SIE_VIPSTS *p, SIE_VIPSTS *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define VIPSTS_check(p,pie,pfx,hLOG) VIPSTS_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define VIPSTS_print(p,    pfx,hLOG) VIPSTS_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: VIPSTS
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SCL1D_YC                biu              (4,4)
///     ###
///     * Register specification of interface ADPSCL
///     * Defines the size of the adpscl
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 8  even                      0x80
///                                    ###
///                                    * Initial Phase of the vertical DDA counter for even field.
///                                    ###
///               %unsigned 8  odd                       0x80
///                                    ###
///                                    * Initial Phase of the vertical DDA counter for odd field.
///                                    ###
///               %unsigned 8  hinitph                   0x80
///                                    ###
///                                    * Initial Phase of the horizontal DDA counter.
///                                    * Related fields: hinitph_lsb.
///                                    ###
///               %unsigned 8  ctrl0                     0x0
///                                    ###
///                                    * [1:0]: avg4 filter select. : Not used.
///                                    * [2]: CSC enable : Not Used
///                                    * [3]: HNL enable :
///                                    * [4]: ups enable : Not used.
///                                    * [5]: dns enable : Not used.
///                                    * [6]: dgnl_en : Not used.
///                                    * [7]: split screen enable : Not used.
///                                    ###
///     @ 0x00004 CFG1                 (P)
///               %unsigned 12 ivres                     0x1E0
///                                    ###
///                                    * Input Y resolution
///                                    ###
///               %unsigned 12 ovres                     0x1E0
///                                    ###
///                                    * Output Y resolution
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00008 CFG2                 (P)
///               %unsigned 13 ihres                     0x2D0
///                                    ###
///                                    * Input X resolution
///                                    ###
///               %unsigned 13 ohres                     0x2D0
///                                    ###
///                                    * Output X resolution
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x0000C CFG3                 (P)
///               %unsigned 25 vratio                    0x100000
///                                    ###
///                                    * Vertical DDA Increment = (Input Y resolution * 2^20)/ output Y resolution
///                                    ###
///               %unsigned 3  rsv0                      0x0
///                                    ###
///                                    * Reserved bits
///                                    ###
///               %unsigned 1  mbp_align                 0x0
///                                    ###
///                                    * Controls 'Most bottom pixel align' mode
///                                    * Must be 0 if Vertically '1:1 or upscale'.
///                                    * 1: the most bottom pixel of input image is used to interpolate the most bottom pixel of output image.
///                                    * 0: image is processed as normal.
///                                    ###
///               %%        3          # Stuffing bits...
///     @ 0x00010 CFG4                 (P)
///               %unsigned 25 hratio                    0x100000
///                                    ###
///                                    * Horizontal DDA Increment = (Input X resolution * 2^20)/ output X resolution
///                                    ###
///               %unsigned 3  rsv0                      0x0
///                                    ###
///                                    * Reserved bits
///                                    ###
///               %unsigned 1  mrp_align                 0x0
///                                    ###
///                                    * Controls 'Most right pixel align' mode
///                                    * Must be 0 if Horizontally '1:1 or upscale'.
///                                    * 1: the most right pixel of input image is used to interpolate the most right pixel of output image.
///                                    * 0: image is processed as normal.
///                                    * HNL Down scaling: step size shouldn't exceed 5-bit value.
///                                    ###
///               %%        3          # Stuffing bits...
///     @ 0x00014 CFG5                 (P)
///               %unsigned 11 memsize                   0x2CF
///                                    ###
///                                    * Last address in the circular line buffer memory
///                                    * Storage is for 3 lines of 1920.
///                                    * Max value for
///                                    * BG5CTpZ1F VIP scaler's Y instance : 0x23F
///                                    * BG5CTpZ1F VIP sacler's C instance: 0x11F
///                                    * BG5CTpZ1F OVP scaler's Y/C instance: 0x23F
///                                    ###
///               %unsigned 16 vwrap                     0x0
///                                    ###
///                                    * The number of scalar clocks the vertical scaling controller waits after its pipe is flushed and before issuing a line-reset signal. This reset signal used to reset the horizontal scalar following the vertical scalar and the memory read logic. If left at the default value of zero, the hardware internally takes care of the wrapback conditions. (Recommended) otherwise, for a non zero value programmed in this register, the internal calculation s in the hardware are overridden by the non zero programmed value.
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x00018 CFG6                 (P)
///               %unsigned 1  ups_cswap                 0x0
///                                    ###
///                                    * Not used
///                                    ###
///               %unsigned 1  ups_cshift                0x0
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 1  ups_yshift                0x0
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 12 ups_yblank                0x0
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 8  fstall                    0x0
///                                    ###
///                                    * fstall_th[6:0]: threshold modification value for forward stall.
///                                    * fstall[7]: Enable forward stall for scalar.
///                                    * 0: Disable
///                                    * 1: Enable
///                                    * Forward stall MAY be disabled (if pftch=1) if
///                                    * Horizontal Up & vertical down, or
///                                    * other vertical downscale with scaling ratio AROUND less than 13%.
///                                    ###
///               %unsigned 8  bstall                    0x0
///                                    ###
///                                    * bstall_th[6:0]: threshold modification value for backward stall.
///                                    * bstall[7]: Enable backward stall for scalar.
///                                    * 0: Disable
///                                    * 1: Enable
///                                    ###
///               %%        1          # Stuffing bits...
///     @ 0x0001C CFG7                 (P)
///               %unsigned 12 ups_cblank                0x200
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 6  htap_offset               0x0
///                                    ###
///                                    * Tap offset in hscalr. Indicates change in the number of blank pixels at the beginning of the line from the normal calculations.
///                                    * Range: [-7, 7] in 2's complement format. (As per legacy algo programming guide, it was 3 bit and [-3,3])
///                                    ###
///               %unsigned 2  rsv                       0x0
///                                    ###
///                                    * Reserved bit
///                                    ###
///               %unsigned 8  vtap_offset               0x0
///                                    ###
///                                    * Vertical tap offset. Delays the start of vertical scaling of/for the odd field   by those many number of lines.
///                                    * [7:4] for even field.
///                                    * [3:0] for odd field.
///                                    * As no interlaced input support, must program same value for both fields.
///                                    * Range: [0:0xf]
///                                    ###
///               %%        4          # Stuffing bits...
///     @ 0x00020 CFG8                 (P)
///               %unsigned 25 init_ratio                0x100000
///                                    ###
///                                    * Intial DDA increment
///                                    ###
///               %%        7          # Stuffing bits...
///     @ 0x00024 CFG9                 (P)
///               %unsigned 25 inc_ratio                 0x0
///                                    ###
///                                    * Increment to DDA increment
///                                    ###
///               %%        7          # Stuffing bits...
///     @ 0x00028 CFG10                (P)
///               %unsigned 13 nlcres                    0x0
///                                    ###
///                                    * Central undistorted   width of the output image in non linear 3 zone scaling.
///                                    * HNL Down scaling: step size shouldn't exceed 5-bit value.
///                                    ###
///               %%        19         # Stuffing bits...
///     @ 0x0002C CFG11                (P)
///               %unsigned 12 avg4_coeff0               0x840
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 12 avg4_coeff1               0x240
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 8  dign_dr1                  0x50
///                                    ###
///                                    * Not used.
///                                    ###
///     @ 0x00030 CFG12                (P)
///               %unsigned 12 avg4_coeff2               0x240
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 12 avg4_coeff3               0x840
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 8  dign_dr2                  0x14
///                                    ###
///                                    * Not used.
///                                    ###
///     @ 0x00034 CFG13                (P)
///               %unsigned 12 dign_ydiff                0x0
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 12 dign_ddiff                0xA0
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 8  dign_dr3                  0x30
///                                    ###
///                                    * Not used.
///                                    ###
///     @ 0x00038 CFG14                (P)
///               %unsigned 12 hp_offset                 0xF0
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 12 hp_diff                   0x230
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 8  dign_nbr                  0x54
///                                    ###
///                                    * Not used.
///                                    ###
///     @ 0x0003C CFG15                (P)
///               %unsigned 8  ctrl1                     0x0
///                                    ###
///                                    * [0]: sel_1D_adp: Not used.
///                                    * select between 1D scalar and adaptive scalar
///                                    * 0: adaptive scalar
///                                    * 1: 1D scalar
///                                    * [1]: up_down: select between up scalar or down scalar.
///                                    * 0: up scalar
///                                    * 1: down scalar
///                                    * [2]:UPS enable at the input of vscale. Not used.
///                                    * [3]:UPS enable at the output of vscale. Not used.
///                                    * [4]:Select coefficient of UPS at the input of vscale(Used for adaptive scaler mode). Not used.
///                                    * 0 : {80, 0, -304, 0, 1248, 2048, 1248}
///                                    * 1 : {0, 0, 0, 0, 1024, 2048, 1024}
///                                    ###
///               %unsigned 5  hctrl                     0xB
///                                    ###
///                                    * Frac[3:0]: number of fractional bits in the horizontal coefficients (8-12d).
///                                    * sign[4]: stores the format of the scalar horizontal coefficients.
///                                    * 0: Unsigned 12 bit coefficients.
///                                    * 1: signed 12 bit coefficient in sign magnitude format.
///                                    ###
///               %unsigned 5  vctrl                     0xB
///                                    ###
///                                    * Frac[3:0]: number of fractional bits in the vertical coefficients (8-12d).
///                                    * sign[4]: stores the format of the scalar vertical coefficients.
///                                    * 0: Unsigned 12 bit coefficients.
///                                    * 1: signed 12 bit coefficient in sign magnitude format.
///                                    ###
///               %unsigned 4  crop                      0x0
///                                    ###
///                                    * Crops the max first 3 pixel and/or max last 3 pixel before the H-scaler (after 422->444 conversion)
///                                    * [1: 0]: Crop control for first pixels.
///                                    * 00 : No Cropping.
///                                    * 01 : first 1 pixel crop.
///                                    * 10 : first 2 pixel crop.
///                                    * 11 : first 3 pixel crop.
///                                    * [3: 2]: Crop control for last pixels.
///                                    * 00 : No Cropping.
///                                    * 01 : Last 1 pixel crop.
///                                    * 10 : Last 2 pixel crop.
///                                    * 11 : Last 3 pixel crop.
///                                    ###
///               %unsigned 1  hscl11                    0x0
///                                    ###
///                                    * 1: overwrites HLUT coefficients with that of 1:1 case (In particular, 1:1 case, where the horizontal scaling filter unalters the pixel value).
///                                    * 0: no HLUT coefficient overwriting.
///                                    * So if no horizontal scaling and hscale filter is expected to unalter the pixel value, this bit can be enabled and then programming of HLUT coefficients can be skipped.
///                                    * Other Requirements:
///                                    * sel_1D_adp=1 ie., select 1D scaler.
///                                    * 'hctrl' field has to be programmed with '1: signed 12 bit coefficient in sign magnitude format'.
///                                    ###
///               %unsigned 1  vscl11                    0x0
///                                    ###
///                                    * 1: overwrites VLUT coefficients with that of 1:1 case (In particular, 1:1 case, where the horizontal scaling filter unalters the pixel value).
///                                    * 0: no VLUT coefficient overwriting.
///                                    * So if no vertical scaling and vscale filter is expected to unalter the pixel value, this bit can be enabled and then programming of VLUT coefficients can be skipped.
///                                    * Other Requirements:
///                                    * sel_1D_adp=1 i.e., select 1D scaler.
///                                    * 'vctrl' field has to be programmed with '1: signed 12 bit coefficient in sign magnitude format'
///                                    ###
///               %unsigned 1  bypass                    0x0
///                                    ###
///                                    * Not used. Must be programmed to 0.
///                                    ###
///               %unsigned 1  frndsel                   0x0
///                                    ###
///                                    * Controls flagging of frame end i.e., frnd=1.
///                                    * Makes sure that frame output to downstream completes and input frame read is completed from upstream.
///                                    * 1: for downscale case with Vscale at first position .
///                                    * 0: for all other cases(default).
///                                    * Note: frnd flagging is not available if bypass=1 (provided bypass mode is valid), as during bypass mode, none of the non- UPS422-444 logic is functional.
///                                    ###
///               %unsigned 1  hvdcp                     0x0
///                                    ###
///                                    * HSCALE-VSCALE de-coupling selection.
///                                    * =0 disables decoupling.
///                                    * =1 enables decoupling.
///                                    * Enabling decoupling improves HSCALE's request valid mechanism, and allows to interchange H-V scaler's position.
///                                    * Can be enabled for all H-downscale.
///                                    * Can be enabled for H-upscale cases only if ctrl1 register's field up_down =1.
///                                    * frc's dly_de_lrst may be required to re-adjust when hvdcp=1 and when up_down =1. So it is recommended to enable frc's auto_lrst for that combination.
///                                    * For more info, refer to IP design doc.
///                                    ###
///               %unsigned 1  pa_impv_en                0x0
///                                    ###
///                                    * PA based improved RTL logic selection
///                                    * =0 disables PA based improved RTL logic
///                                    * =1 enables PA based improved RTL logic(default)
///                                    ###
///               %unsigned 4  mask_hvswap_en            0x0
///                                    ###
///                                    * [0] : Frame end signal generation.
///                                    * 0 : Enhanced (default).
///                                    * 1 : basic.
///                                    * [1] : scaler input data control.
///                                    * 0 : for HVSWAP OFF(default).
///                                    * 1 : for HVSWAP ON.
///                                    * [3:2] : Reserved.
///                                    ###
///     @ 0x00040 CFG16                (P)
///               %unsigned 1  en_n                      0x0
///                                    ###
///                                    * Enable n lines control logic for scaler.
///                                    ###
///               %unsigned 1  xbstall_en                0x0
///                                    ###
///                                    * It need to be enable to delay the writing to line buffer to support n lines for upscale.
///                                    ###
///               %unsigned 14 xbstall_dly               0x0
///                                    ###
///                                    * xbstall_dly[13] : Sign of delay.
///                                    * 0 : Delay = ohres - (ihres +xbstall_dly[12:0]).
///                                    * 1 : Delay = ohres - (ihres -xbstall_dly[12:0]).
///                                    ###
///               %unsigned 8  ovf_margin                0x0
///                                    ###
///                                    * Programmable margin below fifo_depth, to prevent scaler getting internal overflow. Once the scaler memory content hits the threshold decided by the margin, upstream data flow is stalled irrespective of whether backward stall is enabled or not.
///                                    * Higher the value, more is the margin
///                                    * 0: if pftch=0.
///                                    * Currently, a value of of 0x0A suffices for all V downscale cases.
///                                    ###
///               %unsigned 8  udf_margin                0x0
///                                    ###
///                                    * Programmable margin over minimum data required to start downstream data, to prevent scaler getting internal underflow. Once the scaler memory content hits threshold decided by the margin, downstream data flow is stalled irrespective of whether forward stall is enabled or not.
///                                    * Higher the value, more is the margin
///                                    * 0: if pftch=0.
///                                    * Currently, a value of of 0x14 suffices for all V downscale cases.
///                                    ###
///     @ 0x00044 CFG17                (P)
///               %unsigned 10 lsize                     0xC0
///                                    ###
///                                    * It is number of address needed to fit a line in line memory.
///                                    * For Adaptive scaler
///                                    * Lsize = ihres/10 + (ihres%10?1:0)
///                                    * For 1D scaler
///                                    * HVSWAP OFF:
///                                    * Lsize = min(ihres,ohres)/10 + (min(ihres,ohres)%10?1:0)
///                                    * HVSWAP ON:
///                                    * Lsize= max(ihres,ohres)/10 + (max(ihres,ohres)%10?1:0)
///                                    ###
///               %unsigned 10 lsize_A                   0xC0
///                                    ###
///                                    * Not used.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00048 CFG18                (P)
///               %unsigned 1  fifo_mode                 0x0
///                                    ###
///                                    * Can optionally be set only for 'horizontal-only upsale mode', 'horizontal-only downscale mode' and 'bypass (no scaling mode)', where line buffer memory is used as rate control FIFO. (vtaps=1 coeff LUTs are to be programmed). All other scaler registers have to be programmed accordingly.
///                                    * =1 enables scaler's circular line buffer memory to be used as programmable depth FIFO.
///                                    * =0 is normal operation of 1 line storage.
///                                    ###
///               %unsigned 15 fifo_depth                0x0
///                                    ###
///                                    * Valid only if fifo_mode=1or pftch=1..
///                                    * Max memory occupancy (in pixels) in fifo_mode.
///                                    * Upstream (input) is stalled if memory occupancy >= fifo_depth.
///                                    * Max value calculation:
///                                    * wls = floor( (memsize+1) / lsize )   
///                                    * pls = ( (memsize+1) - (lsize*wls) ) * 10   
///                                    * fcp = wls * min(ihres, ohres) + pls.
///                                    * 1) For pftch=1, fifo_depth=fcp.
///                                    * 2) For fifo_mode,
///                                    * a) Max fifo_depth = fcp - 100.
///                                    * b) Min fifo_depth = min(ihres, ohres)
///                                    ###
///               %unsigned 15 fifo_dfst                 0x0
///                                    ###
///                                    * Valid only if fifo_mode=1.
///                                    * Min FIFO/memory occupancy (in pixels) required to start downstream frame.
///                                    * Range: [ min(ihres, ohres), fifo_depth ]
///                                    ###
///               %unsigned 1  pftch                     0x0
///                                    ###
///                                    * =1if en_n=1 and vertically small downscale cases if vertical tap reduction is to be avoided.
///                                    * =0 otherwise.
///                                    * Related register fields: fifo_depth, ovf_margin, udf_margin.
///                                    ###
///     @ 0x0004C CFG19                (P)
///               %unsigned 8  scl_after_crop_h          0x0
///                                    ###
///                                    * No. of pixels cropped horizontally after image is scaled to ohres x ovres.
///                                    * [3:0]: right crop pixels
///                                    * [7:4]: left crop pixels
///                                    ###
///               %unsigned 8  scl_after_crop_v          0x0
///                                    ###
///                                    * No. of pixels cropped vertically after image is scaled to ohres x ovres.
///                                    * [3:0]: bottom crop pixels
///                                    * [7:4]: top crop pixels
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00050 CFG20                (P)
///               %unsigned 1  hlut_pdwn_regs            0x0
///                                    ###
///                                    * Wired to Horizontal coeff LUT SRAMs' pdwn ports.
///                                    ###
///               %unsigned 1  hlut_pdlvmc_regs          0x0
///                                    ###
///                                    * Wired to Horizontal coeff LUT SRAMs' pdlvmc ports.
///                                    ###
///               %unsigned 1  hlut_pdfvssm_regs         0x0
///                                    ###
///                                    * Wired to Horizontal coeff LUT SRAMs' pdfvssm ports.
///                                    ###
///               %unsigned 1  reserved0                 0x0
///                                    ###
///                                    * Reserved bit
///                                    ###
///               %unsigned 1  vlut_pdwn_regs            0x0
///                                    ###
///                                    * Wired to Vertical coeff LUT SRAMs' pdwn ports.
///                                    ###
///               %unsigned 1  vlut_pdlvmc_regs          0x0
///                                    ###
///                                    * Wired to Vertical coeff LUT SRAMs' pdlvmc ports.
///                                    ###
///               %unsigned 1  vlut_pdfvssm_regs         0x0
///                                    ###
///                                    * Wired to Vertical coeff LUT SRAMs' pdfvssm ports.
///                                    ###
///               %unsigned 1  reserved1                 0x0
///                                    ###
///                                    * Reserved bit
///                                    ###
///               %unsigned 3  dpwr_regs                 0x3
///                                    ###
///                                    * Internal dynamic power control.
///                                    * Bit[2] - cg_en: unused. Must be 0. (controls clock to internal logic).
///                                    * Bit[1] - ctrl_lb_cen: Controls CEN to Line buffer SRAMS.
///                                    * Bit[0] - ctrl_lut_cen: control's CEN to LUT SRAMs.
///                                    ###
///               %unsigned 1  Reserved2                 0x0
///                                    ###
///                                    * Reserved bit.
///                                    ###
///               %unsigned 1  syp_yc420_regs            0x1
///                                    ###
///                                    * Used only Chroma 420 instance. Added for programming convenience in basic 420 scaling cases only.
///                                    * =0 : Chroma 420 instance takes independent programming. (Eg: vres for chroma 420 instance is half that of vres for Luma instance).
///                                    * =1 : Chroma 420 instance can be programmed same way as Y instance for basic scaling cases. (Eg: even if Chroma 420 instance works on half vres that of Luma instance, Chroma 420 instance can be programmed with same vres as that of Luma. Basic Y to C420 programming adjustment is done internal to hardware; for registers ivres, ovres, vtap_offset and scl_aft_crop_V; for logic of linear scaling's vertical phase increment).
///                                    ###
///               %unsigned 1  Reserved3                 0x0
///                                    ###
///                                    * Reserved bits.
///                                    ###
///               %unsigned 2  ip_type_regs              0x0
///                                    ###
///                                    * Scaler i/o format is,
///                                    * 0: YUV444 input, YUV444 output (or if Chroma 420/422 is to be scaled as 444). Valid only if the scaler can support YUV444
///                                    * 1: YUV422 input, YUV422 output. Valid only if the scaler can support YUV422.
///                                    * 2: YUV420 input, YUV420 output. Valid only if the scaler can support YUV420.
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00054 CFG21                (P)
///               %unsigned 12 hinitph_lsb               0x0
///                                    ###
///                                    * Least significant bits for programmable horizontal initial phase.
///                                    * Scaler's internal hinitph is now derived as
///                                    * HW's hinitph[19:0] = {hinitph register[7:0], hinitph_lsb register[11:0]}
///                                    * Background:
///                                    * Earlier HW's hinitph[19:0] = {hinitph register[7:0],12'd0}. But for column processesing scaler, the programmable hinitph needs more precision, hence the change.
///                                    * Related fields: hinitph.
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00058 CFG33                (P)
///               %unsigned 1  lb0_pdwn_regs             0x0
///                                    ###
///                                    * As per separate memory line buffer document, if explicitly specified, wired to group-0 of Line buffer SRAMs' pdwn ports. Else wired to al Line buffer SRAMs pdwn ports.
///                                    ###
///               %unsigned 1  lb0_pdlvmc_regs           0x0
///                                    ###
///                                    * As per separate memory line buffer document, if explicitly specified, wired to group-0 of Line buffer SRAMs' pdlvmc ports. Else wired to al Line buffer SRAMs pdlvmc ports.
///                                    ###
///               %unsigned 1  lb0_pdfvssm_regs          0x0
///                                    ###
///                                    * As per separate memory line buffer document, if explicitly specified, wired to group-0 of Line buffer SRAMs' pdfvssm ports. Else wired to al Line buffer SRAMs pdfvssm ports.
///                                    ###
///               %unsigned 1  reserved0                 0x0
///                                    ###
///                                    * Reserved bit
///                                    * End of scl1d_y c nregister group
///                                    ###
///               %%        28         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      92B, bits:     581b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SCL1D_YC
#define h_SCL1D_YC (){}

    #define     RA_SCL1D_YC_CFG0                               0x0000

    #define     BA_SCL1D_YC_CFG0_even                          0x0000
    #define     B16SCL1D_YC_CFG0_even                          0x0000
    #define   LSb32SCL1D_YC_CFG0_even                             0
    #define   LSb16SCL1D_YC_CFG0_even                             0
    #define       bSCL1D_YC_CFG0_even                          8
    #define   MSK32SCL1D_YC_CFG0_even                             0x000000FF

    #define     BA_SCL1D_YC_CFG0_odd                           0x0001
    #define     B16SCL1D_YC_CFG0_odd                           0x0000
    #define   LSb32SCL1D_YC_CFG0_odd                              8
    #define   LSb16SCL1D_YC_CFG0_odd                              8
    #define       bSCL1D_YC_CFG0_odd                           8
    #define   MSK32SCL1D_YC_CFG0_odd                              0x0000FF00

    #define     BA_SCL1D_YC_CFG0_hinitph                       0x0002
    #define     B16SCL1D_YC_CFG0_hinitph                       0x0002
    #define   LSb32SCL1D_YC_CFG0_hinitph                          16
    #define   LSb16SCL1D_YC_CFG0_hinitph                          0
    #define       bSCL1D_YC_CFG0_hinitph                       8
    #define   MSK32SCL1D_YC_CFG0_hinitph                          0x00FF0000

    #define     BA_SCL1D_YC_CFG0_ctrl0                         0x0003
    #define     B16SCL1D_YC_CFG0_ctrl0                         0x0002
    #define   LSb32SCL1D_YC_CFG0_ctrl0                            24
    #define   LSb16SCL1D_YC_CFG0_ctrl0                            8
    #define       bSCL1D_YC_CFG0_ctrl0                         8
    #define   MSK32SCL1D_YC_CFG0_ctrl0                            0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG1                               0x0004

    #define     BA_SCL1D_YC_CFG1_ivres                         0x0004
    #define     B16SCL1D_YC_CFG1_ivres                         0x0004
    #define   LSb32SCL1D_YC_CFG1_ivres                            0
    #define   LSb16SCL1D_YC_CFG1_ivres                            0
    #define       bSCL1D_YC_CFG1_ivres                         12
    #define   MSK32SCL1D_YC_CFG1_ivres                            0x00000FFF

    #define     BA_SCL1D_YC_CFG1_ovres                         0x0005
    #define     B16SCL1D_YC_CFG1_ovres                         0x0004
    #define   LSb32SCL1D_YC_CFG1_ovres                            12
    #define   LSb16SCL1D_YC_CFG1_ovres                            12
    #define       bSCL1D_YC_CFG1_ovres                         12
    #define   MSK32SCL1D_YC_CFG1_ovres                            0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG2                               0x0008

    #define     BA_SCL1D_YC_CFG2_ihres                         0x0008
    #define     B16SCL1D_YC_CFG2_ihres                         0x0008
    #define   LSb32SCL1D_YC_CFG2_ihres                            0
    #define   LSb16SCL1D_YC_CFG2_ihres                            0
    #define       bSCL1D_YC_CFG2_ihres                         13
    #define   MSK32SCL1D_YC_CFG2_ihres                            0x00001FFF

    #define     BA_SCL1D_YC_CFG2_ohres                         0x0009
    #define     B16SCL1D_YC_CFG2_ohres                         0x0008
    #define   LSb32SCL1D_YC_CFG2_ohres                            13
    #define   LSb16SCL1D_YC_CFG2_ohres                            13
    #define       bSCL1D_YC_CFG2_ohres                         13
    #define   MSK32SCL1D_YC_CFG2_ohres                            0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG3                               0x000C

    #define     BA_SCL1D_YC_CFG3_vratio                        0x000C
    #define     B16SCL1D_YC_CFG3_vratio                        0x000C
    #define   LSb32SCL1D_YC_CFG3_vratio                           0
    #define   LSb16SCL1D_YC_CFG3_vratio                           0
    #define       bSCL1D_YC_CFG3_vratio                        25
    #define   MSK32SCL1D_YC_CFG3_vratio                           0x01FFFFFF

    #define     BA_SCL1D_YC_CFG3_rsv0                          0x000F
    #define     B16SCL1D_YC_CFG3_rsv0                          0x000E
    #define   LSb32SCL1D_YC_CFG3_rsv0                             25
    #define   LSb16SCL1D_YC_CFG3_rsv0                             9
    #define       bSCL1D_YC_CFG3_rsv0                          3
    #define   MSK32SCL1D_YC_CFG3_rsv0                             0x0E000000

    #define     BA_SCL1D_YC_CFG3_mbp_align                     0x000F
    #define     B16SCL1D_YC_CFG3_mbp_align                     0x000E
    #define   LSb32SCL1D_YC_CFG3_mbp_align                        28
    #define   LSb16SCL1D_YC_CFG3_mbp_align                        12
    #define       bSCL1D_YC_CFG3_mbp_align                     1
    #define   MSK32SCL1D_YC_CFG3_mbp_align                        0x10000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG4                               0x0010

    #define     BA_SCL1D_YC_CFG4_hratio                        0x0010
    #define     B16SCL1D_YC_CFG4_hratio                        0x0010
    #define   LSb32SCL1D_YC_CFG4_hratio                           0
    #define   LSb16SCL1D_YC_CFG4_hratio                           0
    #define       bSCL1D_YC_CFG4_hratio                        25
    #define   MSK32SCL1D_YC_CFG4_hratio                           0x01FFFFFF

    #define     BA_SCL1D_YC_CFG4_rsv0                          0x0013
    #define     B16SCL1D_YC_CFG4_rsv0                          0x0012
    #define   LSb32SCL1D_YC_CFG4_rsv0                             25
    #define   LSb16SCL1D_YC_CFG4_rsv0                             9
    #define       bSCL1D_YC_CFG4_rsv0                          3
    #define   MSK32SCL1D_YC_CFG4_rsv0                             0x0E000000

    #define     BA_SCL1D_YC_CFG4_mrp_align                     0x0013
    #define     B16SCL1D_YC_CFG4_mrp_align                     0x0012
    #define   LSb32SCL1D_YC_CFG4_mrp_align                        28
    #define   LSb16SCL1D_YC_CFG4_mrp_align                        12
    #define       bSCL1D_YC_CFG4_mrp_align                     1
    #define   MSK32SCL1D_YC_CFG4_mrp_align                        0x10000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG5                               0x0014

    #define     BA_SCL1D_YC_CFG5_memsize                       0x0014
    #define     B16SCL1D_YC_CFG5_memsize                       0x0014
    #define   LSb32SCL1D_YC_CFG5_memsize                          0
    #define   LSb16SCL1D_YC_CFG5_memsize                          0
    #define       bSCL1D_YC_CFG5_memsize                       11
    #define   MSK32SCL1D_YC_CFG5_memsize                          0x000007FF

    #define     BA_SCL1D_YC_CFG5_vwrap                         0x0015
    #define     B16SCL1D_YC_CFG5_vwrap                         0x0014
    #define   LSb32SCL1D_YC_CFG5_vwrap                            11
    #define   LSb16SCL1D_YC_CFG5_vwrap                            11
    #define       bSCL1D_YC_CFG5_vwrap                         16
    #define   MSK32SCL1D_YC_CFG5_vwrap                            0x07FFF800
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG6                               0x0018

    #define     BA_SCL1D_YC_CFG6_ups_cswap                     0x0018
    #define     B16SCL1D_YC_CFG6_ups_cswap                     0x0018
    #define   LSb32SCL1D_YC_CFG6_ups_cswap                        0
    #define   LSb16SCL1D_YC_CFG6_ups_cswap                        0
    #define       bSCL1D_YC_CFG6_ups_cswap                     1
    #define   MSK32SCL1D_YC_CFG6_ups_cswap                        0x00000001

    #define     BA_SCL1D_YC_CFG6_ups_cshift                    0x0018
    #define     B16SCL1D_YC_CFG6_ups_cshift                    0x0018
    #define   LSb32SCL1D_YC_CFG6_ups_cshift                       1
    #define   LSb16SCL1D_YC_CFG6_ups_cshift                       1
    #define       bSCL1D_YC_CFG6_ups_cshift                    1
    #define   MSK32SCL1D_YC_CFG6_ups_cshift                       0x00000002

    #define     BA_SCL1D_YC_CFG6_ups_yshift                    0x0018
    #define     B16SCL1D_YC_CFG6_ups_yshift                    0x0018
    #define   LSb32SCL1D_YC_CFG6_ups_yshift                       2
    #define   LSb16SCL1D_YC_CFG6_ups_yshift                       2
    #define       bSCL1D_YC_CFG6_ups_yshift                    1
    #define   MSK32SCL1D_YC_CFG6_ups_yshift                       0x00000004

    #define     BA_SCL1D_YC_CFG6_ups_yblank                    0x0018
    #define     B16SCL1D_YC_CFG6_ups_yblank                    0x0018
    #define   LSb32SCL1D_YC_CFG6_ups_yblank                       3
    #define   LSb16SCL1D_YC_CFG6_ups_yblank                       3
    #define       bSCL1D_YC_CFG6_ups_yblank                    12
    #define   MSK32SCL1D_YC_CFG6_ups_yblank                       0x00007FF8

    #define     BA_SCL1D_YC_CFG6_fstall                        0x0019
    #define     B16SCL1D_YC_CFG6_fstall                        0x0018
    #define   LSb32SCL1D_YC_CFG6_fstall                           15
    #define   LSb16SCL1D_YC_CFG6_fstall                           15
    #define       bSCL1D_YC_CFG6_fstall                        8
    #define   MSK32SCL1D_YC_CFG6_fstall                           0x007F8000

    #define     BA_SCL1D_YC_CFG6_bstall                        0x001A
    #define     B16SCL1D_YC_CFG6_bstall                        0x001A
    #define   LSb32SCL1D_YC_CFG6_bstall                           23
    #define   LSb16SCL1D_YC_CFG6_bstall                           7
    #define       bSCL1D_YC_CFG6_bstall                        8
    #define   MSK32SCL1D_YC_CFG6_bstall                           0x7F800000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG7                               0x001C

    #define     BA_SCL1D_YC_CFG7_ups_cblank                    0x001C
    #define     B16SCL1D_YC_CFG7_ups_cblank                    0x001C
    #define   LSb32SCL1D_YC_CFG7_ups_cblank                       0
    #define   LSb16SCL1D_YC_CFG7_ups_cblank                       0
    #define       bSCL1D_YC_CFG7_ups_cblank                    12
    #define   MSK32SCL1D_YC_CFG7_ups_cblank                       0x00000FFF

    #define     BA_SCL1D_YC_CFG7_htap_offset                   0x001D
    #define     B16SCL1D_YC_CFG7_htap_offset                   0x001C
    #define   LSb32SCL1D_YC_CFG7_htap_offset                      12
    #define   LSb16SCL1D_YC_CFG7_htap_offset                      12
    #define       bSCL1D_YC_CFG7_htap_offset                   6
    #define   MSK32SCL1D_YC_CFG7_htap_offset                      0x0003F000

    #define     BA_SCL1D_YC_CFG7_rsv                           0x001E
    #define     B16SCL1D_YC_CFG7_rsv                           0x001E
    #define   LSb32SCL1D_YC_CFG7_rsv                              18
    #define   LSb16SCL1D_YC_CFG7_rsv                              2
    #define       bSCL1D_YC_CFG7_rsv                           2
    #define   MSK32SCL1D_YC_CFG7_rsv                              0x000C0000

    #define     BA_SCL1D_YC_CFG7_vtap_offset                   0x001E
    #define     B16SCL1D_YC_CFG7_vtap_offset                   0x001E
    #define   LSb32SCL1D_YC_CFG7_vtap_offset                      20
    #define   LSb16SCL1D_YC_CFG7_vtap_offset                      4
    #define       bSCL1D_YC_CFG7_vtap_offset                   8
    #define   MSK32SCL1D_YC_CFG7_vtap_offset                      0x0FF00000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG8                               0x0020

    #define     BA_SCL1D_YC_CFG8_init_ratio                    0x0020
    #define     B16SCL1D_YC_CFG8_init_ratio                    0x0020
    #define   LSb32SCL1D_YC_CFG8_init_ratio                       0
    #define   LSb16SCL1D_YC_CFG8_init_ratio                       0
    #define       bSCL1D_YC_CFG8_init_ratio                    25
    #define   MSK32SCL1D_YC_CFG8_init_ratio                       0x01FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG9                               0x0024

    #define     BA_SCL1D_YC_CFG9_inc_ratio                     0x0024
    #define     B16SCL1D_YC_CFG9_inc_ratio                     0x0024
    #define   LSb32SCL1D_YC_CFG9_inc_ratio                        0
    #define   LSb16SCL1D_YC_CFG9_inc_ratio                        0
    #define       bSCL1D_YC_CFG9_inc_ratio                     25
    #define   MSK32SCL1D_YC_CFG9_inc_ratio                        0x01FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG10                              0x0028

    #define     BA_SCL1D_YC_CFG10_nlcres                       0x0028
    #define     B16SCL1D_YC_CFG10_nlcres                       0x0028
    #define   LSb32SCL1D_YC_CFG10_nlcres                          0
    #define   LSb16SCL1D_YC_CFG10_nlcres                          0
    #define       bSCL1D_YC_CFG10_nlcres                       13
    #define   MSK32SCL1D_YC_CFG10_nlcres                          0x00001FFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG11                              0x002C

    #define     BA_SCL1D_YC_CFG11_avg4_coeff0                  0x002C
    #define     B16SCL1D_YC_CFG11_avg4_coeff0                  0x002C
    #define   LSb32SCL1D_YC_CFG11_avg4_coeff0                     0
    #define   LSb16SCL1D_YC_CFG11_avg4_coeff0                     0
    #define       bSCL1D_YC_CFG11_avg4_coeff0                  12
    #define   MSK32SCL1D_YC_CFG11_avg4_coeff0                     0x00000FFF

    #define     BA_SCL1D_YC_CFG11_avg4_coeff1                  0x002D
    #define     B16SCL1D_YC_CFG11_avg4_coeff1                  0x002C
    #define   LSb32SCL1D_YC_CFG11_avg4_coeff1                     12
    #define   LSb16SCL1D_YC_CFG11_avg4_coeff1                     12
    #define       bSCL1D_YC_CFG11_avg4_coeff1                  12
    #define   MSK32SCL1D_YC_CFG11_avg4_coeff1                     0x00FFF000

    #define     BA_SCL1D_YC_CFG11_dign_dr1                     0x002F
    #define     B16SCL1D_YC_CFG11_dign_dr1                     0x002E
    #define   LSb32SCL1D_YC_CFG11_dign_dr1                        24
    #define   LSb16SCL1D_YC_CFG11_dign_dr1                        8
    #define       bSCL1D_YC_CFG11_dign_dr1                     8
    #define   MSK32SCL1D_YC_CFG11_dign_dr1                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG12                              0x0030

    #define     BA_SCL1D_YC_CFG12_avg4_coeff2                  0x0030
    #define     B16SCL1D_YC_CFG12_avg4_coeff2                  0x0030
    #define   LSb32SCL1D_YC_CFG12_avg4_coeff2                     0
    #define   LSb16SCL1D_YC_CFG12_avg4_coeff2                     0
    #define       bSCL1D_YC_CFG12_avg4_coeff2                  12
    #define   MSK32SCL1D_YC_CFG12_avg4_coeff2                     0x00000FFF

    #define     BA_SCL1D_YC_CFG12_avg4_coeff3                  0x0031
    #define     B16SCL1D_YC_CFG12_avg4_coeff3                  0x0030
    #define   LSb32SCL1D_YC_CFG12_avg4_coeff3                     12
    #define   LSb16SCL1D_YC_CFG12_avg4_coeff3                     12
    #define       bSCL1D_YC_CFG12_avg4_coeff3                  12
    #define   MSK32SCL1D_YC_CFG12_avg4_coeff3                     0x00FFF000

    #define     BA_SCL1D_YC_CFG12_dign_dr2                     0x0033
    #define     B16SCL1D_YC_CFG12_dign_dr2                     0x0032
    #define   LSb32SCL1D_YC_CFG12_dign_dr2                        24
    #define   LSb16SCL1D_YC_CFG12_dign_dr2                        8
    #define       bSCL1D_YC_CFG12_dign_dr2                     8
    #define   MSK32SCL1D_YC_CFG12_dign_dr2                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG13                              0x0034

    #define     BA_SCL1D_YC_CFG13_dign_ydiff                   0x0034
    #define     B16SCL1D_YC_CFG13_dign_ydiff                   0x0034
    #define   LSb32SCL1D_YC_CFG13_dign_ydiff                      0
    #define   LSb16SCL1D_YC_CFG13_dign_ydiff                      0
    #define       bSCL1D_YC_CFG13_dign_ydiff                   12
    #define   MSK32SCL1D_YC_CFG13_dign_ydiff                      0x00000FFF

    #define     BA_SCL1D_YC_CFG13_dign_ddiff                   0x0035
    #define     B16SCL1D_YC_CFG13_dign_ddiff                   0x0034
    #define   LSb32SCL1D_YC_CFG13_dign_ddiff                      12
    #define   LSb16SCL1D_YC_CFG13_dign_ddiff                      12
    #define       bSCL1D_YC_CFG13_dign_ddiff                   12
    #define   MSK32SCL1D_YC_CFG13_dign_ddiff                      0x00FFF000

    #define     BA_SCL1D_YC_CFG13_dign_dr3                     0x0037
    #define     B16SCL1D_YC_CFG13_dign_dr3                     0x0036
    #define   LSb32SCL1D_YC_CFG13_dign_dr3                        24
    #define   LSb16SCL1D_YC_CFG13_dign_dr3                        8
    #define       bSCL1D_YC_CFG13_dign_dr3                     8
    #define   MSK32SCL1D_YC_CFG13_dign_dr3                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG14                              0x0038

    #define     BA_SCL1D_YC_CFG14_hp_offset                    0x0038
    #define     B16SCL1D_YC_CFG14_hp_offset                    0x0038
    #define   LSb32SCL1D_YC_CFG14_hp_offset                       0
    #define   LSb16SCL1D_YC_CFG14_hp_offset                       0
    #define       bSCL1D_YC_CFG14_hp_offset                    12
    #define   MSK32SCL1D_YC_CFG14_hp_offset                       0x00000FFF

    #define     BA_SCL1D_YC_CFG14_hp_diff                      0x0039
    #define     B16SCL1D_YC_CFG14_hp_diff                      0x0038
    #define   LSb32SCL1D_YC_CFG14_hp_diff                         12
    #define   LSb16SCL1D_YC_CFG14_hp_diff                         12
    #define       bSCL1D_YC_CFG14_hp_diff                      12
    #define   MSK32SCL1D_YC_CFG14_hp_diff                         0x00FFF000

    #define     BA_SCL1D_YC_CFG14_dign_nbr                     0x003B
    #define     B16SCL1D_YC_CFG14_dign_nbr                     0x003A
    #define   LSb32SCL1D_YC_CFG14_dign_nbr                        24
    #define   LSb16SCL1D_YC_CFG14_dign_nbr                        8
    #define       bSCL1D_YC_CFG14_dign_nbr                     8
    #define   MSK32SCL1D_YC_CFG14_dign_nbr                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG15                              0x003C

    #define     BA_SCL1D_YC_CFG15_ctrl1                        0x003C
    #define     B16SCL1D_YC_CFG15_ctrl1                        0x003C
    #define   LSb32SCL1D_YC_CFG15_ctrl1                           0
    #define   LSb16SCL1D_YC_CFG15_ctrl1                           0
    #define       bSCL1D_YC_CFG15_ctrl1                        8
    #define   MSK32SCL1D_YC_CFG15_ctrl1                           0x000000FF

    #define     BA_SCL1D_YC_CFG15_hctrl                        0x003D
    #define     B16SCL1D_YC_CFG15_hctrl                        0x003C
    #define   LSb32SCL1D_YC_CFG15_hctrl                           8
    #define   LSb16SCL1D_YC_CFG15_hctrl                           8
    #define       bSCL1D_YC_CFG15_hctrl                        5
    #define   MSK32SCL1D_YC_CFG15_hctrl                           0x00001F00

    #define     BA_SCL1D_YC_CFG15_vctrl                        0x003D
    #define     B16SCL1D_YC_CFG15_vctrl                        0x003C
    #define   LSb32SCL1D_YC_CFG15_vctrl                           13
    #define   LSb16SCL1D_YC_CFG15_vctrl                           13
    #define       bSCL1D_YC_CFG15_vctrl                        5
    #define   MSK32SCL1D_YC_CFG15_vctrl                           0x0003E000

    #define     BA_SCL1D_YC_CFG15_crop                         0x003E
    #define     B16SCL1D_YC_CFG15_crop                         0x003E
    #define   LSb32SCL1D_YC_CFG15_crop                            18
    #define   LSb16SCL1D_YC_CFG15_crop                            2
    #define       bSCL1D_YC_CFG15_crop                         4
    #define   MSK32SCL1D_YC_CFG15_crop                            0x003C0000

    #define     BA_SCL1D_YC_CFG15_hscl11                       0x003E
    #define     B16SCL1D_YC_CFG15_hscl11                       0x003E
    #define   LSb32SCL1D_YC_CFG15_hscl11                          22
    #define   LSb16SCL1D_YC_CFG15_hscl11                          6
    #define       bSCL1D_YC_CFG15_hscl11                       1
    #define   MSK32SCL1D_YC_CFG15_hscl11                          0x00400000

    #define     BA_SCL1D_YC_CFG15_vscl11                       0x003E
    #define     B16SCL1D_YC_CFG15_vscl11                       0x003E
    #define   LSb32SCL1D_YC_CFG15_vscl11                          23
    #define   LSb16SCL1D_YC_CFG15_vscl11                          7
    #define       bSCL1D_YC_CFG15_vscl11                       1
    #define   MSK32SCL1D_YC_CFG15_vscl11                          0x00800000

    #define     BA_SCL1D_YC_CFG15_bypass                       0x003F
    #define     B16SCL1D_YC_CFG15_bypass                       0x003E
    #define   LSb32SCL1D_YC_CFG15_bypass                          24
    #define   LSb16SCL1D_YC_CFG15_bypass                          8
    #define       bSCL1D_YC_CFG15_bypass                       1
    #define   MSK32SCL1D_YC_CFG15_bypass                          0x01000000

    #define     BA_SCL1D_YC_CFG15_frndsel                      0x003F
    #define     B16SCL1D_YC_CFG15_frndsel                      0x003E
    #define   LSb32SCL1D_YC_CFG15_frndsel                         25
    #define   LSb16SCL1D_YC_CFG15_frndsel                         9
    #define       bSCL1D_YC_CFG15_frndsel                      1
    #define   MSK32SCL1D_YC_CFG15_frndsel                         0x02000000

    #define     BA_SCL1D_YC_CFG15_hvdcp                        0x003F
    #define     B16SCL1D_YC_CFG15_hvdcp                        0x003E
    #define   LSb32SCL1D_YC_CFG15_hvdcp                           26
    #define   LSb16SCL1D_YC_CFG15_hvdcp                           10
    #define       bSCL1D_YC_CFG15_hvdcp                        1
    #define   MSK32SCL1D_YC_CFG15_hvdcp                           0x04000000

    #define     BA_SCL1D_YC_CFG15_pa_impv_en                   0x003F
    #define     B16SCL1D_YC_CFG15_pa_impv_en                   0x003E
    #define   LSb32SCL1D_YC_CFG15_pa_impv_en                      27
    #define   LSb16SCL1D_YC_CFG15_pa_impv_en                      11
    #define       bSCL1D_YC_CFG15_pa_impv_en                   1
    #define   MSK32SCL1D_YC_CFG15_pa_impv_en                      0x08000000

    #define     BA_SCL1D_YC_CFG15_mask_hvswap_en               0x003F
    #define     B16SCL1D_YC_CFG15_mask_hvswap_en               0x003E
    #define   LSb32SCL1D_YC_CFG15_mask_hvswap_en                  28
    #define   LSb16SCL1D_YC_CFG15_mask_hvswap_en                  12
    #define       bSCL1D_YC_CFG15_mask_hvswap_en               4
    #define   MSK32SCL1D_YC_CFG15_mask_hvswap_en                  0xF0000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG16                              0x0040

    #define     BA_SCL1D_YC_CFG16_en_n                         0x0040
    #define     B16SCL1D_YC_CFG16_en_n                         0x0040
    #define   LSb32SCL1D_YC_CFG16_en_n                            0
    #define   LSb16SCL1D_YC_CFG16_en_n                            0
    #define       bSCL1D_YC_CFG16_en_n                         1
    #define   MSK32SCL1D_YC_CFG16_en_n                            0x00000001

    #define     BA_SCL1D_YC_CFG16_xbstall_en                   0x0040
    #define     B16SCL1D_YC_CFG16_xbstall_en                   0x0040
    #define   LSb32SCL1D_YC_CFG16_xbstall_en                      1
    #define   LSb16SCL1D_YC_CFG16_xbstall_en                      1
    #define       bSCL1D_YC_CFG16_xbstall_en                   1
    #define   MSK32SCL1D_YC_CFG16_xbstall_en                      0x00000002

    #define     BA_SCL1D_YC_CFG16_xbstall_dly                  0x0040
    #define     B16SCL1D_YC_CFG16_xbstall_dly                  0x0040
    #define   LSb32SCL1D_YC_CFG16_xbstall_dly                     2
    #define   LSb16SCL1D_YC_CFG16_xbstall_dly                     2
    #define       bSCL1D_YC_CFG16_xbstall_dly                  14
    #define   MSK32SCL1D_YC_CFG16_xbstall_dly                     0x0000FFFC

    #define     BA_SCL1D_YC_CFG16_ovf_margin                   0x0042
    #define     B16SCL1D_YC_CFG16_ovf_margin                   0x0042
    #define   LSb32SCL1D_YC_CFG16_ovf_margin                      16
    #define   LSb16SCL1D_YC_CFG16_ovf_margin                      0
    #define       bSCL1D_YC_CFG16_ovf_margin                   8
    #define   MSK32SCL1D_YC_CFG16_ovf_margin                      0x00FF0000

    #define     BA_SCL1D_YC_CFG16_udf_margin                   0x0043
    #define     B16SCL1D_YC_CFG16_udf_margin                   0x0042
    #define   LSb32SCL1D_YC_CFG16_udf_margin                      24
    #define   LSb16SCL1D_YC_CFG16_udf_margin                      8
    #define       bSCL1D_YC_CFG16_udf_margin                   8
    #define   MSK32SCL1D_YC_CFG16_udf_margin                      0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG17                              0x0044

    #define     BA_SCL1D_YC_CFG17_lsize                        0x0044
    #define     B16SCL1D_YC_CFG17_lsize                        0x0044
    #define   LSb32SCL1D_YC_CFG17_lsize                           0
    #define   LSb16SCL1D_YC_CFG17_lsize                           0
    #define       bSCL1D_YC_CFG17_lsize                        10
    #define   MSK32SCL1D_YC_CFG17_lsize                           0x000003FF

    #define     BA_SCL1D_YC_CFG17_lsize_A                      0x0045
    #define     B16SCL1D_YC_CFG17_lsize_A                      0x0044
    #define   LSb32SCL1D_YC_CFG17_lsize_A                         10
    #define   LSb16SCL1D_YC_CFG17_lsize_A                         10
    #define       bSCL1D_YC_CFG17_lsize_A                      10
    #define   MSK32SCL1D_YC_CFG17_lsize_A                         0x000FFC00
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG18                              0x0048

    #define     BA_SCL1D_YC_CFG18_fifo_mode                    0x0048
    #define     B16SCL1D_YC_CFG18_fifo_mode                    0x0048
    #define   LSb32SCL1D_YC_CFG18_fifo_mode                       0
    #define   LSb16SCL1D_YC_CFG18_fifo_mode                       0
    #define       bSCL1D_YC_CFG18_fifo_mode                    1
    #define   MSK32SCL1D_YC_CFG18_fifo_mode                       0x00000001

    #define     BA_SCL1D_YC_CFG18_fifo_depth                   0x0048
    #define     B16SCL1D_YC_CFG18_fifo_depth                   0x0048
    #define   LSb32SCL1D_YC_CFG18_fifo_depth                      1
    #define   LSb16SCL1D_YC_CFG18_fifo_depth                      1
    #define       bSCL1D_YC_CFG18_fifo_depth                   15
    #define   MSK32SCL1D_YC_CFG18_fifo_depth                      0x0000FFFE

    #define     BA_SCL1D_YC_CFG18_fifo_dfst                    0x004A
    #define     B16SCL1D_YC_CFG18_fifo_dfst                    0x004A
    #define   LSb32SCL1D_YC_CFG18_fifo_dfst                       16
    #define   LSb16SCL1D_YC_CFG18_fifo_dfst                       0
    #define       bSCL1D_YC_CFG18_fifo_dfst                    15
    #define   MSK32SCL1D_YC_CFG18_fifo_dfst                       0x7FFF0000

    #define     BA_SCL1D_YC_CFG18_pftch                        0x004B
    #define     B16SCL1D_YC_CFG18_pftch                        0x004A
    #define   LSb32SCL1D_YC_CFG18_pftch                           31
    #define   LSb16SCL1D_YC_CFG18_pftch                           15
    #define       bSCL1D_YC_CFG18_pftch                        1
    #define   MSK32SCL1D_YC_CFG18_pftch                           0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG19                              0x004C

    #define     BA_SCL1D_YC_CFG19_scl_after_crop_h             0x004C
    #define     B16SCL1D_YC_CFG19_scl_after_crop_h             0x004C
    #define   LSb32SCL1D_YC_CFG19_scl_after_crop_h                0
    #define   LSb16SCL1D_YC_CFG19_scl_after_crop_h                0
    #define       bSCL1D_YC_CFG19_scl_after_crop_h             8
    #define   MSK32SCL1D_YC_CFG19_scl_after_crop_h                0x000000FF

    #define     BA_SCL1D_YC_CFG19_scl_after_crop_v             0x004D
    #define     B16SCL1D_YC_CFG19_scl_after_crop_v             0x004C
    #define   LSb32SCL1D_YC_CFG19_scl_after_crop_v                8
    #define   LSb16SCL1D_YC_CFG19_scl_after_crop_v                8
    #define       bSCL1D_YC_CFG19_scl_after_crop_v             8
    #define   MSK32SCL1D_YC_CFG19_scl_after_crop_v                0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG20                              0x0050

    #define     BA_SCL1D_YC_CFG20_hlut_pdwn_regs               0x0050
    #define     B16SCL1D_YC_CFG20_hlut_pdwn_regs               0x0050
    #define   LSb32SCL1D_YC_CFG20_hlut_pdwn_regs                  0
    #define   LSb16SCL1D_YC_CFG20_hlut_pdwn_regs                  0
    #define       bSCL1D_YC_CFG20_hlut_pdwn_regs               1
    #define   MSK32SCL1D_YC_CFG20_hlut_pdwn_regs                  0x00000001

    #define     BA_SCL1D_YC_CFG20_hlut_pdlvmc_regs             0x0050
    #define     B16SCL1D_YC_CFG20_hlut_pdlvmc_regs             0x0050
    #define   LSb32SCL1D_YC_CFG20_hlut_pdlvmc_regs                1
    #define   LSb16SCL1D_YC_CFG20_hlut_pdlvmc_regs                1
    #define       bSCL1D_YC_CFG20_hlut_pdlvmc_regs             1
    #define   MSK32SCL1D_YC_CFG20_hlut_pdlvmc_regs                0x00000002

    #define     BA_SCL1D_YC_CFG20_hlut_pdfvssm_regs            0x0050
    #define     B16SCL1D_YC_CFG20_hlut_pdfvssm_regs            0x0050
    #define   LSb32SCL1D_YC_CFG20_hlut_pdfvssm_regs               2
    #define   LSb16SCL1D_YC_CFG20_hlut_pdfvssm_regs               2
    #define       bSCL1D_YC_CFG20_hlut_pdfvssm_regs            1
    #define   MSK32SCL1D_YC_CFG20_hlut_pdfvssm_regs               0x00000004

    #define     BA_SCL1D_YC_CFG20_reserved0                    0x0050
    #define     B16SCL1D_YC_CFG20_reserved0                    0x0050
    #define   LSb32SCL1D_YC_CFG20_reserved0                       3
    #define   LSb16SCL1D_YC_CFG20_reserved0                       3
    #define       bSCL1D_YC_CFG20_reserved0                    1
    #define   MSK32SCL1D_YC_CFG20_reserved0                       0x00000008

    #define     BA_SCL1D_YC_CFG20_vlut_pdwn_regs               0x0050
    #define     B16SCL1D_YC_CFG20_vlut_pdwn_regs               0x0050
    #define   LSb32SCL1D_YC_CFG20_vlut_pdwn_regs                  4
    #define   LSb16SCL1D_YC_CFG20_vlut_pdwn_regs                  4
    #define       bSCL1D_YC_CFG20_vlut_pdwn_regs               1
    #define   MSK32SCL1D_YC_CFG20_vlut_pdwn_regs                  0x00000010

    #define     BA_SCL1D_YC_CFG20_vlut_pdlvmc_regs             0x0050
    #define     B16SCL1D_YC_CFG20_vlut_pdlvmc_regs             0x0050
    #define   LSb32SCL1D_YC_CFG20_vlut_pdlvmc_regs                5
    #define   LSb16SCL1D_YC_CFG20_vlut_pdlvmc_regs                5
    #define       bSCL1D_YC_CFG20_vlut_pdlvmc_regs             1
    #define   MSK32SCL1D_YC_CFG20_vlut_pdlvmc_regs                0x00000020

    #define     BA_SCL1D_YC_CFG20_vlut_pdfvssm_regs            0x0050
    #define     B16SCL1D_YC_CFG20_vlut_pdfvssm_regs            0x0050
    #define   LSb32SCL1D_YC_CFG20_vlut_pdfvssm_regs               6
    #define   LSb16SCL1D_YC_CFG20_vlut_pdfvssm_regs               6
    #define       bSCL1D_YC_CFG20_vlut_pdfvssm_regs            1
    #define   MSK32SCL1D_YC_CFG20_vlut_pdfvssm_regs               0x00000040

    #define     BA_SCL1D_YC_CFG20_reserved1                    0x0050
    #define     B16SCL1D_YC_CFG20_reserved1                    0x0050
    #define   LSb32SCL1D_YC_CFG20_reserved1                       7
    #define   LSb16SCL1D_YC_CFG20_reserved1                       7
    #define       bSCL1D_YC_CFG20_reserved1                    1
    #define   MSK32SCL1D_YC_CFG20_reserved1                       0x00000080

    #define     BA_SCL1D_YC_CFG20_dpwr_regs                    0x0051
    #define     B16SCL1D_YC_CFG20_dpwr_regs                    0x0050
    #define   LSb32SCL1D_YC_CFG20_dpwr_regs                       8
    #define   LSb16SCL1D_YC_CFG20_dpwr_regs                       8
    #define       bSCL1D_YC_CFG20_dpwr_regs                    3
    #define   MSK32SCL1D_YC_CFG20_dpwr_regs                       0x00000700

    #define     BA_SCL1D_YC_CFG20_Reserved2                    0x0051
    #define     B16SCL1D_YC_CFG20_Reserved2                    0x0050
    #define   LSb32SCL1D_YC_CFG20_Reserved2                       11
    #define   LSb16SCL1D_YC_CFG20_Reserved2                       11
    #define       bSCL1D_YC_CFG20_Reserved2                    1
    #define   MSK32SCL1D_YC_CFG20_Reserved2                       0x00000800

    #define     BA_SCL1D_YC_CFG20_syp_yc420_regs               0x0051
    #define     B16SCL1D_YC_CFG20_syp_yc420_regs               0x0050
    #define   LSb32SCL1D_YC_CFG20_syp_yc420_regs                  12
    #define   LSb16SCL1D_YC_CFG20_syp_yc420_regs                  12
    #define       bSCL1D_YC_CFG20_syp_yc420_regs               1
    #define   MSK32SCL1D_YC_CFG20_syp_yc420_regs                  0x00001000

    #define     BA_SCL1D_YC_CFG20_Reserved3                    0x0051
    #define     B16SCL1D_YC_CFG20_Reserved3                    0x0050
    #define   LSb32SCL1D_YC_CFG20_Reserved3                       13
    #define   LSb16SCL1D_YC_CFG20_Reserved3                       13
    #define       bSCL1D_YC_CFG20_Reserved3                    1
    #define   MSK32SCL1D_YC_CFG20_Reserved3                       0x00002000

    #define     BA_SCL1D_YC_CFG20_ip_type_regs                 0x0051
    #define     B16SCL1D_YC_CFG20_ip_type_regs                 0x0050
    #define   LSb32SCL1D_YC_CFG20_ip_type_regs                    14
    #define   LSb16SCL1D_YC_CFG20_ip_type_regs                    14
    #define       bSCL1D_YC_CFG20_ip_type_regs                 2
    #define   MSK32SCL1D_YC_CFG20_ip_type_regs                    0x0000C000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG21                              0x0054

    #define     BA_SCL1D_YC_CFG21_hinitph_lsb                  0x0054
    #define     B16SCL1D_YC_CFG21_hinitph_lsb                  0x0054
    #define   LSb32SCL1D_YC_CFG21_hinitph_lsb                     0
    #define   LSb16SCL1D_YC_CFG21_hinitph_lsb                     0
    #define       bSCL1D_YC_CFG21_hinitph_lsb                  12
    #define   MSK32SCL1D_YC_CFG21_hinitph_lsb                     0x00000FFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_CFG33                              0x0058

    #define     BA_SCL1D_YC_CFG33_lb0_pdwn_regs                0x0058
    #define     B16SCL1D_YC_CFG33_lb0_pdwn_regs                0x0058
    #define   LSb32SCL1D_YC_CFG33_lb0_pdwn_regs                   0
    #define   LSb16SCL1D_YC_CFG33_lb0_pdwn_regs                   0
    #define       bSCL1D_YC_CFG33_lb0_pdwn_regs                1
    #define   MSK32SCL1D_YC_CFG33_lb0_pdwn_regs                   0x00000001

    #define     BA_SCL1D_YC_CFG33_lb0_pdlvmc_regs              0x0058
    #define     B16SCL1D_YC_CFG33_lb0_pdlvmc_regs              0x0058
    #define   LSb32SCL1D_YC_CFG33_lb0_pdlvmc_regs                 1
    #define   LSb16SCL1D_YC_CFG33_lb0_pdlvmc_regs                 1
    #define       bSCL1D_YC_CFG33_lb0_pdlvmc_regs              1
    #define   MSK32SCL1D_YC_CFG33_lb0_pdlvmc_regs                 0x00000002

    #define     BA_SCL1D_YC_CFG33_lb0_pdfvssm_regs             0x0058
    #define     B16SCL1D_YC_CFG33_lb0_pdfvssm_regs             0x0058
    #define   LSb32SCL1D_YC_CFG33_lb0_pdfvssm_regs                2
    #define   LSb16SCL1D_YC_CFG33_lb0_pdfvssm_regs                2
    #define       bSCL1D_YC_CFG33_lb0_pdfvssm_regs             1
    #define   MSK32SCL1D_YC_CFG33_lb0_pdfvssm_regs                0x00000004

    #define     BA_SCL1D_YC_CFG33_reserved0                    0x0058
    #define     B16SCL1D_YC_CFG33_reserved0                    0x0058
    #define   LSb32SCL1D_YC_CFG33_reserved0                       3
    #define   LSb16SCL1D_YC_CFG33_reserved0                       3
    #define       bSCL1D_YC_CFG33_reserved0                    1
    #define   MSK32SCL1D_YC_CFG33_reserved0                       0x00000008
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SCL1D_YC {
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG0_even(r32)                     _BFGET_(r32, 7, 0)
    #define   SET32SCL1D_YC_CFG0_even(r32,v)                   _BFSET_(r32, 7, 0,v)
    #define   GET16SCL1D_YC_CFG0_even(r16)                     _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_CFG0_even(r16,v)                   _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_CFG0_odd(r32)                      _BFGET_(r32,15, 8)
    #define   SET32SCL1D_YC_CFG0_odd(r32,v)                    _BFSET_(r32,15, 8,v)
    #define   GET16SCL1D_YC_CFG0_odd(r16)                      _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG0_odd(r16,v)                    _BFSET_(r16,15, 8,v)

    #define   GET32SCL1D_YC_CFG0_hinitph(r32)                  _BFGET_(r32,23,16)
    #define   SET32SCL1D_YC_CFG0_hinitph(r32,v)                _BFSET_(r32,23,16,v)
    #define   GET16SCL1D_YC_CFG0_hinitph(r16)                  _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_CFG0_hinitph(r16,v)                _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_CFG0_ctrl0(r32)                    _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_CFG0_ctrl0(r32,v)                  _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_CFG0_ctrl0(r16)                    _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG0_ctrl0(r16,v)                  _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_CFG0                               {\
            UNSG32 uCFG0_even                                  :  8;\
            UNSG32 uCFG0_odd                                   :  8;\
            UNSG32 uCFG0_hinitph                               :  8;\
            UNSG32 uCFG0_ctrl0                                 :  8;\
          }
    union { UNSG32 u32SCL1D_YC_CFG0;
            struct w32SCL1D_YC_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG1_ivres(r32)                    _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_CFG1_ivres(r32,v)                  _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_CFG1_ivres(r16)                    _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_CFG1_ivres(r16,v)                  _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_CFG1_ovres(r32)                    _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_CFG1_ovres(r32,v)                  _BFSET_(r32,23,12,v)

    #define     w32SCL1D_YC_CFG1                               {\
            UNSG32 uCFG1_ivres                                 : 12;\
            UNSG32 uCFG1_ovres                                 : 12;\
            UNSG32 RSVDx4_b24                                  :  8;\
          }
    union { UNSG32 u32SCL1D_YC_CFG1;
            struct w32SCL1D_YC_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG2_ihres(r32)                    _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_CFG2_ihres(r32,v)                  _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_CFG2_ihres(r16)                    _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_CFG2_ihres(r16,v)                  _BFSET_(r16,12, 0,v)

    #define   GET32SCL1D_YC_CFG2_ohres(r32)                    _BFGET_(r32,25,13)
    #define   SET32SCL1D_YC_CFG2_ohres(r32,v)                  _BFSET_(r32,25,13,v)

    #define     w32SCL1D_YC_CFG2                               {\
            UNSG32 uCFG2_ihres                                 : 13;\
            UNSG32 uCFG2_ohres                                 : 13;\
            UNSG32 RSVDx8_b26                                  :  6;\
          }
    union { UNSG32 u32SCL1D_YC_CFG2;
            struct w32SCL1D_YC_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG3_vratio(r32)                   _BFGET_(r32,24, 0)
    #define   SET32SCL1D_YC_CFG3_vratio(r32,v)                 _BFSET_(r32,24, 0,v)

    #define   GET32SCL1D_YC_CFG3_rsv0(r32)                     _BFGET_(r32,27,25)
    #define   SET32SCL1D_YC_CFG3_rsv0(r32,v)                   _BFSET_(r32,27,25,v)
    #define   GET16SCL1D_YC_CFG3_rsv0(r16)                     _BFGET_(r16,11, 9)
    #define   SET16SCL1D_YC_CFG3_rsv0(r16,v)                   _BFSET_(r16,11, 9,v)

    #define   GET32SCL1D_YC_CFG3_mbp_align(r32)                _BFGET_(r32,28,28)
    #define   SET32SCL1D_YC_CFG3_mbp_align(r32,v)              _BFSET_(r32,28,28,v)
    #define   GET16SCL1D_YC_CFG3_mbp_align(r16)                _BFGET_(r16,12,12)
    #define   SET16SCL1D_YC_CFG3_mbp_align(r16,v)              _BFSET_(r16,12,12,v)

    #define     w32SCL1D_YC_CFG3                               {\
            UNSG32 uCFG3_vratio                                : 25;\
            UNSG32 uCFG3_rsv0                                  :  3;\
            UNSG32 uCFG3_mbp_align                             :  1;\
            UNSG32 RSVDxC_b29                                  :  3;\
          }
    union { UNSG32 u32SCL1D_YC_CFG3;
            struct w32SCL1D_YC_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG4_hratio(r32)                   _BFGET_(r32,24, 0)
    #define   SET32SCL1D_YC_CFG4_hratio(r32,v)                 _BFSET_(r32,24, 0,v)

    #define   GET32SCL1D_YC_CFG4_rsv0(r32)                     _BFGET_(r32,27,25)
    #define   SET32SCL1D_YC_CFG4_rsv0(r32,v)                   _BFSET_(r32,27,25,v)
    #define   GET16SCL1D_YC_CFG4_rsv0(r16)                     _BFGET_(r16,11, 9)
    #define   SET16SCL1D_YC_CFG4_rsv0(r16,v)                   _BFSET_(r16,11, 9,v)

    #define   GET32SCL1D_YC_CFG4_mrp_align(r32)                _BFGET_(r32,28,28)
    #define   SET32SCL1D_YC_CFG4_mrp_align(r32,v)              _BFSET_(r32,28,28,v)
    #define   GET16SCL1D_YC_CFG4_mrp_align(r16)                _BFGET_(r16,12,12)
    #define   SET16SCL1D_YC_CFG4_mrp_align(r16,v)              _BFSET_(r16,12,12,v)

    #define     w32SCL1D_YC_CFG4                               {\
            UNSG32 uCFG4_hratio                                : 25;\
            UNSG32 uCFG4_rsv0                                  :  3;\
            UNSG32 uCFG4_mrp_align                             :  1;\
            UNSG32 RSVDx10_b29                                 :  3;\
          }
    union { UNSG32 u32SCL1D_YC_CFG4;
            struct w32SCL1D_YC_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG5_memsize(r32)                  _BFGET_(r32,10, 0)
    #define   SET32SCL1D_YC_CFG5_memsize(r32,v)                _BFSET_(r32,10, 0,v)
    #define   GET16SCL1D_YC_CFG5_memsize(r16)                  _BFGET_(r16,10, 0)
    #define   SET16SCL1D_YC_CFG5_memsize(r16,v)                _BFSET_(r16,10, 0,v)

    #define   GET32SCL1D_YC_CFG5_vwrap(r32)                    _BFGET_(r32,26,11)
    #define   SET32SCL1D_YC_CFG5_vwrap(r32,v)                  _BFSET_(r32,26,11,v)

    #define     w32SCL1D_YC_CFG5                               {\
            UNSG32 uCFG5_memsize                               : 11;\
            UNSG32 uCFG5_vwrap                                 : 16;\
            UNSG32 RSVDx14_b27                                 :  5;\
          }
    union { UNSG32 u32SCL1D_YC_CFG5;
            struct w32SCL1D_YC_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG6_ups_cswap(r32)                _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_CFG6_ups_cswap(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_CFG6_ups_cswap(r16)                _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_CFG6_ups_cswap(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32SCL1D_YC_CFG6_ups_cshift(r32)               _BFGET_(r32, 1, 1)
    #define   SET32SCL1D_YC_CFG6_ups_cshift(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16SCL1D_YC_CFG6_ups_cshift(r16)               _BFGET_(r16, 1, 1)
    #define   SET16SCL1D_YC_CFG6_ups_cshift(r16,v)             _BFSET_(r16, 1, 1,v)

    #define   GET32SCL1D_YC_CFG6_ups_yshift(r32)               _BFGET_(r32, 2, 2)
    #define   SET32SCL1D_YC_CFG6_ups_yshift(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16SCL1D_YC_CFG6_ups_yshift(r16)               _BFGET_(r16, 2, 2)
    #define   SET16SCL1D_YC_CFG6_ups_yshift(r16,v)             _BFSET_(r16, 2, 2,v)

    #define   GET32SCL1D_YC_CFG6_ups_yblank(r32)               _BFGET_(r32,14, 3)
    #define   SET32SCL1D_YC_CFG6_ups_yblank(r32,v)             _BFSET_(r32,14, 3,v)
    #define   GET16SCL1D_YC_CFG6_ups_yblank(r16)               _BFGET_(r16,14, 3)
    #define   SET16SCL1D_YC_CFG6_ups_yblank(r16,v)             _BFSET_(r16,14, 3,v)

    #define   GET32SCL1D_YC_CFG6_fstall(r32)                   _BFGET_(r32,22,15)
    #define   SET32SCL1D_YC_CFG6_fstall(r32,v)                 _BFSET_(r32,22,15,v)

    #define   GET32SCL1D_YC_CFG6_bstall(r32)                   _BFGET_(r32,30,23)
    #define   SET32SCL1D_YC_CFG6_bstall(r32,v)                 _BFSET_(r32,30,23,v)
    #define   GET16SCL1D_YC_CFG6_bstall(r16)                   _BFGET_(r16,14, 7)
    #define   SET16SCL1D_YC_CFG6_bstall(r16,v)                 _BFSET_(r16,14, 7,v)

    #define     w32SCL1D_YC_CFG6                               {\
            UNSG32 uCFG6_ups_cswap                             :  1;\
            UNSG32 uCFG6_ups_cshift                            :  1;\
            UNSG32 uCFG6_ups_yshift                            :  1;\
            UNSG32 uCFG6_ups_yblank                            : 12;\
            UNSG32 uCFG6_fstall                                :  8;\
            UNSG32 uCFG6_bstall                                :  8;\
            UNSG32 RSVDx18_b31                                 :  1;\
          }
    union { UNSG32 u32SCL1D_YC_CFG6;
            struct w32SCL1D_YC_CFG6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG7_ups_cblank(r32)               _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_CFG7_ups_cblank(r32,v)             _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_CFG7_ups_cblank(r16)               _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_CFG7_ups_cblank(r16,v)             _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_CFG7_htap_offset(r32)              _BFGET_(r32,17,12)
    #define   SET32SCL1D_YC_CFG7_htap_offset(r32,v)            _BFSET_(r32,17,12,v)

    #define   GET32SCL1D_YC_CFG7_rsv(r32)                      _BFGET_(r32,19,18)
    #define   SET32SCL1D_YC_CFG7_rsv(r32,v)                    _BFSET_(r32,19,18,v)
    #define   GET16SCL1D_YC_CFG7_rsv(r16)                      _BFGET_(r16, 3, 2)
    #define   SET16SCL1D_YC_CFG7_rsv(r16,v)                    _BFSET_(r16, 3, 2,v)

    #define   GET32SCL1D_YC_CFG7_vtap_offset(r32)              _BFGET_(r32,27,20)
    #define   SET32SCL1D_YC_CFG7_vtap_offset(r32,v)            _BFSET_(r32,27,20,v)
    #define   GET16SCL1D_YC_CFG7_vtap_offset(r16)              _BFGET_(r16,11, 4)
    #define   SET16SCL1D_YC_CFG7_vtap_offset(r16,v)            _BFSET_(r16,11, 4,v)

    #define     w32SCL1D_YC_CFG7                               {\
            UNSG32 uCFG7_ups_cblank                            : 12;\
            UNSG32 uCFG7_htap_offset                           :  6;\
            UNSG32 uCFG7_rsv                                   :  2;\
            UNSG32 uCFG7_vtap_offset                           :  8;\
            UNSG32 RSVDx1C_b28                                 :  4;\
          }
    union { UNSG32 u32SCL1D_YC_CFG7;
            struct w32SCL1D_YC_CFG7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG8_init_ratio(r32)               _BFGET_(r32,24, 0)
    #define   SET32SCL1D_YC_CFG8_init_ratio(r32,v)             _BFSET_(r32,24, 0,v)

    #define     w32SCL1D_YC_CFG8                               {\
            UNSG32 uCFG8_init_ratio                            : 25;\
            UNSG32 RSVDx20_b25                                 :  7;\
          }
    union { UNSG32 u32SCL1D_YC_CFG8;
            struct w32SCL1D_YC_CFG8;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG9_inc_ratio(r32)                _BFGET_(r32,24, 0)
    #define   SET32SCL1D_YC_CFG9_inc_ratio(r32,v)              _BFSET_(r32,24, 0,v)

    #define     w32SCL1D_YC_CFG9                               {\
            UNSG32 uCFG9_inc_ratio                             : 25;\
            UNSG32 RSVDx24_b25                                 :  7;\
          }
    union { UNSG32 u32SCL1D_YC_CFG9;
            struct w32SCL1D_YC_CFG9;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG10_nlcres(r32)                  _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_CFG10_nlcres(r32,v)                _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_CFG10_nlcres(r16)                  _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_CFG10_nlcres(r16,v)                _BFSET_(r16,12, 0,v)

    #define     w32SCL1D_YC_CFG10                              {\
            UNSG32 uCFG10_nlcres                               : 13;\
            UNSG32 RSVDx28_b13                                 : 19;\
          }
    union { UNSG32 u32SCL1D_YC_CFG10;
            struct w32SCL1D_YC_CFG10;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG11_avg4_coeff0(r32)             _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_CFG11_avg4_coeff0(r32,v)           _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_CFG11_avg4_coeff0(r16)             _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_CFG11_avg4_coeff0(r16,v)           _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_CFG11_avg4_coeff1(r32)             _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_CFG11_avg4_coeff1(r32,v)           _BFSET_(r32,23,12,v)

    #define   GET32SCL1D_YC_CFG11_dign_dr1(r32)                _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_CFG11_dign_dr1(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_CFG11_dign_dr1(r16)                _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG11_dign_dr1(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_CFG11                              {\
            UNSG32 uCFG11_avg4_coeff0                          : 12;\
            UNSG32 uCFG11_avg4_coeff1                          : 12;\
            UNSG32 uCFG11_dign_dr1                             :  8;\
          }
    union { UNSG32 u32SCL1D_YC_CFG11;
            struct w32SCL1D_YC_CFG11;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG12_avg4_coeff2(r32)             _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_CFG12_avg4_coeff2(r32,v)           _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_CFG12_avg4_coeff2(r16)             _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_CFG12_avg4_coeff2(r16,v)           _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_CFG12_avg4_coeff3(r32)             _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_CFG12_avg4_coeff3(r32,v)           _BFSET_(r32,23,12,v)

    #define   GET32SCL1D_YC_CFG12_dign_dr2(r32)                _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_CFG12_dign_dr2(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_CFG12_dign_dr2(r16)                _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG12_dign_dr2(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_CFG12                              {\
            UNSG32 uCFG12_avg4_coeff2                          : 12;\
            UNSG32 uCFG12_avg4_coeff3                          : 12;\
            UNSG32 uCFG12_dign_dr2                             :  8;\
          }
    union { UNSG32 u32SCL1D_YC_CFG12;
            struct w32SCL1D_YC_CFG12;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG13_dign_ydiff(r32)              _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_CFG13_dign_ydiff(r32,v)            _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_CFG13_dign_ydiff(r16)              _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_CFG13_dign_ydiff(r16,v)            _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_CFG13_dign_ddiff(r32)              _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_CFG13_dign_ddiff(r32,v)            _BFSET_(r32,23,12,v)

    #define   GET32SCL1D_YC_CFG13_dign_dr3(r32)                _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_CFG13_dign_dr3(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_CFG13_dign_dr3(r16)                _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG13_dign_dr3(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_CFG13                              {\
            UNSG32 uCFG13_dign_ydiff                           : 12;\
            UNSG32 uCFG13_dign_ddiff                           : 12;\
            UNSG32 uCFG13_dign_dr3                             :  8;\
          }
    union { UNSG32 u32SCL1D_YC_CFG13;
            struct w32SCL1D_YC_CFG13;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG14_hp_offset(r32)               _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_CFG14_hp_offset(r32,v)             _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_CFG14_hp_offset(r16)               _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_CFG14_hp_offset(r16,v)             _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_CFG14_hp_diff(r32)                 _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_CFG14_hp_diff(r32,v)               _BFSET_(r32,23,12,v)

    #define   GET32SCL1D_YC_CFG14_dign_nbr(r32)                _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_CFG14_dign_nbr(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_CFG14_dign_nbr(r16)                _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG14_dign_nbr(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_CFG14                              {\
            UNSG32 uCFG14_hp_offset                            : 12;\
            UNSG32 uCFG14_hp_diff                              : 12;\
            UNSG32 uCFG14_dign_nbr                             :  8;\
          }
    union { UNSG32 u32SCL1D_YC_CFG14;
            struct w32SCL1D_YC_CFG14;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG15_ctrl1(r32)                   _BFGET_(r32, 7, 0)
    #define   SET32SCL1D_YC_CFG15_ctrl1(r32,v)                 _BFSET_(r32, 7, 0,v)
    #define   GET16SCL1D_YC_CFG15_ctrl1(r16)                   _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_CFG15_ctrl1(r16,v)                 _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_CFG15_hctrl(r32)                   _BFGET_(r32,12, 8)
    #define   SET32SCL1D_YC_CFG15_hctrl(r32,v)                 _BFSET_(r32,12, 8,v)
    #define   GET16SCL1D_YC_CFG15_hctrl(r16)                   _BFGET_(r16,12, 8)
    #define   SET16SCL1D_YC_CFG15_hctrl(r16,v)                 _BFSET_(r16,12, 8,v)

    #define   GET32SCL1D_YC_CFG15_vctrl(r32)                   _BFGET_(r32,17,13)
    #define   SET32SCL1D_YC_CFG15_vctrl(r32,v)                 _BFSET_(r32,17,13,v)

    #define   GET32SCL1D_YC_CFG15_crop(r32)                    _BFGET_(r32,21,18)
    #define   SET32SCL1D_YC_CFG15_crop(r32,v)                  _BFSET_(r32,21,18,v)
    #define   GET16SCL1D_YC_CFG15_crop(r16)                    _BFGET_(r16, 5, 2)
    #define   SET16SCL1D_YC_CFG15_crop(r16,v)                  _BFSET_(r16, 5, 2,v)

    #define   GET32SCL1D_YC_CFG15_hscl11(r32)                  _BFGET_(r32,22,22)
    #define   SET32SCL1D_YC_CFG15_hscl11(r32,v)                _BFSET_(r32,22,22,v)
    #define   GET16SCL1D_YC_CFG15_hscl11(r16)                  _BFGET_(r16, 6, 6)
    #define   SET16SCL1D_YC_CFG15_hscl11(r16,v)                _BFSET_(r16, 6, 6,v)

    #define   GET32SCL1D_YC_CFG15_vscl11(r32)                  _BFGET_(r32,23,23)
    #define   SET32SCL1D_YC_CFG15_vscl11(r32,v)                _BFSET_(r32,23,23,v)
    #define   GET16SCL1D_YC_CFG15_vscl11(r16)                  _BFGET_(r16, 7, 7)
    #define   SET16SCL1D_YC_CFG15_vscl11(r16,v)                _BFSET_(r16, 7, 7,v)

    #define   GET32SCL1D_YC_CFG15_bypass(r32)                  _BFGET_(r32,24,24)
    #define   SET32SCL1D_YC_CFG15_bypass(r32,v)                _BFSET_(r32,24,24,v)
    #define   GET16SCL1D_YC_CFG15_bypass(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16SCL1D_YC_CFG15_bypass(r16,v)                _BFSET_(r16, 8, 8,v)

    #define   GET32SCL1D_YC_CFG15_frndsel(r32)                 _BFGET_(r32,25,25)
    #define   SET32SCL1D_YC_CFG15_frndsel(r32,v)               _BFSET_(r32,25,25,v)
    #define   GET16SCL1D_YC_CFG15_frndsel(r16)                 _BFGET_(r16, 9, 9)
    #define   SET16SCL1D_YC_CFG15_frndsel(r16,v)               _BFSET_(r16, 9, 9,v)

    #define   GET32SCL1D_YC_CFG15_hvdcp(r32)                   _BFGET_(r32,26,26)
    #define   SET32SCL1D_YC_CFG15_hvdcp(r32,v)                 _BFSET_(r32,26,26,v)
    #define   GET16SCL1D_YC_CFG15_hvdcp(r16)                   _BFGET_(r16,10,10)
    #define   SET16SCL1D_YC_CFG15_hvdcp(r16,v)                 _BFSET_(r16,10,10,v)

    #define   GET32SCL1D_YC_CFG15_pa_impv_en(r32)              _BFGET_(r32,27,27)
    #define   SET32SCL1D_YC_CFG15_pa_impv_en(r32,v)            _BFSET_(r32,27,27,v)
    #define   GET16SCL1D_YC_CFG15_pa_impv_en(r16)              _BFGET_(r16,11,11)
    #define   SET16SCL1D_YC_CFG15_pa_impv_en(r16,v)            _BFSET_(r16,11,11,v)

    #define   GET32SCL1D_YC_CFG15_mask_hvswap_en(r32)          _BFGET_(r32,31,28)
    #define   SET32SCL1D_YC_CFG15_mask_hvswap_en(r32,v)        _BFSET_(r32,31,28,v)
    #define   GET16SCL1D_YC_CFG15_mask_hvswap_en(r16)          _BFGET_(r16,15,12)
    #define   SET16SCL1D_YC_CFG15_mask_hvswap_en(r16,v)        _BFSET_(r16,15,12,v)

    #define     w32SCL1D_YC_CFG15                              {\
            UNSG32 uCFG15_ctrl1                                :  8;\
            UNSG32 uCFG15_hctrl                                :  5;\
            UNSG32 uCFG15_vctrl                                :  5;\
            UNSG32 uCFG15_crop                                 :  4;\
            UNSG32 uCFG15_hscl11                               :  1;\
            UNSG32 uCFG15_vscl11                               :  1;\
            UNSG32 uCFG15_bypass                               :  1;\
            UNSG32 uCFG15_frndsel                              :  1;\
            UNSG32 uCFG15_hvdcp                                :  1;\
            UNSG32 uCFG15_pa_impv_en                           :  1;\
            UNSG32 uCFG15_mask_hvswap_en                       :  4;\
          }
    union { UNSG32 u32SCL1D_YC_CFG15;
            struct w32SCL1D_YC_CFG15;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG16_en_n(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_CFG16_en_n(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_CFG16_en_n(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_CFG16_en_n(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32SCL1D_YC_CFG16_xbstall_en(r32)              _BFGET_(r32, 1, 1)
    #define   SET32SCL1D_YC_CFG16_xbstall_en(r32,v)            _BFSET_(r32, 1, 1,v)
    #define   GET16SCL1D_YC_CFG16_xbstall_en(r16)              _BFGET_(r16, 1, 1)
    #define   SET16SCL1D_YC_CFG16_xbstall_en(r16,v)            _BFSET_(r16, 1, 1,v)

    #define   GET32SCL1D_YC_CFG16_xbstall_dly(r32)             _BFGET_(r32,15, 2)
    #define   SET32SCL1D_YC_CFG16_xbstall_dly(r32,v)           _BFSET_(r32,15, 2,v)
    #define   GET16SCL1D_YC_CFG16_xbstall_dly(r16)             _BFGET_(r16,15, 2)
    #define   SET16SCL1D_YC_CFG16_xbstall_dly(r16,v)           _BFSET_(r16,15, 2,v)

    #define   GET32SCL1D_YC_CFG16_ovf_margin(r32)              _BFGET_(r32,23,16)
    #define   SET32SCL1D_YC_CFG16_ovf_margin(r32,v)            _BFSET_(r32,23,16,v)
    #define   GET16SCL1D_YC_CFG16_ovf_margin(r16)              _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_CFG16_ovf_margin(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_CFG16_udf_margin(r32)              _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_CFG16_udf_margin(r32,v)            _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_CFG16_udf_margin(r16)              _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG16_udf_margin(r16,v)            _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_CFG16                              {\
            UNSG32 uCFG16_en_n                                 :  1;\
            UNSG32 uCFG16_xbstall_en                           :  1;\
            UNSG32 uCFG16_xbstall_dly                          : 14;\
            UNSG32 uCFG16_ovf_margin                           :  8;\
            UNSG32 uCFG16_udf_margin                           :  8;\
          }
    union { UNSG32 u32SCL1D_YC_CFG16;
            struct w32SCL1D_YC_CFG16;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG17_lsize(r32)                   _BFGET_(r32, 9, 0)
    #define   SET32SCL1D_YC_CFG17_lsize(r32,v)                 _BFSET_(r32, 9, 0,v)
    #define   GET16SCL1D_YC_CFG17_lsize(r16)                   _BFGET_(r16, 9, 0)
    #define   SET16SCL1D_YC_CFG17_lsize(r16,v)                 _BFSET_(r16, 9, 0,v)

    #define   GET32SCL1D_YC_CFG17_lsize_A(r32)                 _BFGET_(r32,19,10)
    #define   SET32SCL1D_YC_CFG17_lsize_A(r32,v)               _BFSET_(r32,19,10,v)

    #define     w32SCL1D_YC_CFG17                              {\
            UNSG32 uCFG17_lsize                                : 10;\
            UNSG32 uCFG17_lsize_A                              : 10;\
            UNSG32 RSVDx44_b20                                 : 12;\
          }
    union { UNSG32 u32SCL1D_YC_CFG17;
            struct w32SCL1D_YC_CFG17;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG18_fifo_mode(r32)               _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_CFG18_fifo_mode(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_CFG18_fifo_mode(r16)               _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_CFG18_fifo_mode(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32SCL1D_YC_CFG18_fifo_depth(r32)              _BFGET_(r32,15, 1)
    #define   SET32SCL1D_YC_CFG18_fifo_depth(r32,v)            _BFSET_(r32,15, 1,v)
    #define   GET16SCL1D_YC_CFG18_fifo_depth(r16)              _BFGET_(r16,15, 1)
    #define   SET16SCL1D_YC_CFG18_fifo_depth(r16,v)            _BFSET_(r16,15, 1,v)

    #define   GET32SCL1D_YC_CFG18_fifo_dfst(r32)               _BFGET_(r32,30,16)
    #define   SET32SCL1D_YC_CFG18_fifo_dfst(r32,v)             _BFSET_(r32,30,16,v)
    #define   GET16SCL1D_YC_CFG18_fifo_dfst(r16)               _BFGET_(r16,14, 0)
    #define   SET16SCL1D_YC_CFG18_fifo_dfst(r16,v)             _BFSET_(r16,14, 0,v)

    #define   GET32SCL1D_YC_CFG18_pftch(r32)                   _BFGET_(r32,31,31)
    #define   SET32SCL1D_YC_CFG18_pftch(r32,v)                 _BFSET_(r32,31,31,v)
    #define   GET16SCL1D_YC_CFG18_pftch(r16)                   _BFGET_(r16,15,15)
    #define   SET16SCL1D_YC_CFG18_pftch(r16,v)                 _BFSET_(r16,15,15,v)

    #define     w32SCL1D_YC_CFG18                              {\
            UNSG32 uCFG18_fifo_mode                            :  1;\
            UNSG32 uCFG18_fifo_depth                           : 15;\
            UNSG32 uCFG18_fifo_dfst                            : 15;\
            UNSG32 uCFG18_pftch                                :  1;\
          }
    union { UNSG32 u32SCL1D_YC_CFG18;
            struct w32SCL1D_YC_CFG18;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG19_scl_after_crop_h(r32)        _BFGET_(r32, 7, 0)
    #define   SET32SCL1D_YC_CFG19_scl_after_crop_h(r32,v)      _BFSET_(r32, 7, 0,v)
    #define   GET16SCL1D_YC_CFG19_scl_after_crop_h(r16)        _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_CFG19_scl_after_crop_h(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_CFG19_scl_after_crop_v(r32)        _BFGET_(r32,15, 8)
    #define   SET32SCL1D_YC_CFG19_scl_after_crop_v(r32,v)      _BFSET_(r32,15, 8,v)
    #define   GET16SCL1D_YC_CFG19_scl_after_crop_v(r16)        _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_CFG19_scl_after_crop_v(r16,v)      _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_CFG19                              {\
            UNSG32 uCFG19_scl_after_crop_h                     :  8;\
            UNSG32 uCFG19_scl_after_crop_v                     :  8;\
            UNSG32 RSVDx4C_b16                                 : 16;\
          }
    union { UNSG32 u32SCL1D_YC_CFG19;
            struct w32SCL1D_YC_CFG19;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG20_hlut_pdwn_regs(r32)          _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_CFG20_hlut_pdwn_regs(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_CFG20_hlut_pdwn_regs(r16)          _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_CFG20_hlut_pdwn_regs(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32SCL1D_YC_CFG20_hlut_pdlvmc_regs(r32)        _BFGET_(r32, 1, 1)
    #define   SET32SCL1D_YC_CFG20_hlut_pdlvmc_regs(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16SCL1D_YC_CFG20_hlut_pdlvmc_regs(r16)        _BFGET_(r16, 1, 1)
    #define   SET16SCL1D_YC_CFG20_hlut_pdlvmc_regs(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32SCL1D_YC_CFG20_hlut_pdfvssm_regs(r32)       _BFGET_(r32, 2, 2)
    #define   SET32SCL1D_YC_CFG20_hlut_pdfvssm_regs(r32,v)     _BFSET_(r32, 2, 2,v)
    #define   GET16SCL1D_YC_CFG20_hlut_pdfvssm_regs(r16)       _BFGET_(r16, 2, 2)
    #define   SET16SCL1D_YC_CFG20_hlut_pdfvssm_regs(r16,v)     _BFSET_(r16, 2, 2,v)

    #define   GET32SCL1D_YC_CFG20_reserved0(r32)               _BFGET_(r32, 3, 3)
    #define   SET32SCL1D_YC_CFG20_reserved0(r32,v)             _BFSET_(r32, 3, 3,v)
    #define   GET16SCL1D_YC_CFG20_reserved0(r16)               _BFGET_(r16, 3, 3)
    #define   SET16SCL1D_YC_CFG20_reserved0(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32SCL1D_YC_CFG20_vlut_pdwn_regs(r32)          _BFGET_(r32, 4, 4)
    #define   SET32SCL1D_YC_CFG20_vlut_pdwn_regs(r32,v)        _BFSET_(r32, 4, 4,v)
    #define   GET16SCL1D_YC_CFG20_vlut_pdwn_regs(r16)          _BFGET_(r16, 4, 4)
    #define   SET16SCL1D_YC_CFG20_vlut_pdwn_regs(r16,v)        _BFSET_(r16, 4, 4,v)

    #define   GET32SCL1D_YC_CFG20_vlut_pdlvmc_regs(r32)        _BFGET_(r32, 5, 5)
    #define   SET32SCL1D_YC_CFG20_vlut_pdlvmc_regs(r32,v)      _BFSET_(r32, 5, 5,v)
    #define   GET16SCL1D_YC_CFG20_vlut_pdlvmc_regs(r16)        _BFGET_(r16, 5, 5)
    #define   SET16SCL1D_YC_CFG20_vlut_pdlvmc_regs(r16,v)      _BFSET_(r16, 5, 5,v)

    #define   GET32SCL1D_YC_CFG20_vlut_pdfvssm_regs(r32)       _BFGET_(r32, 6, 6)
    #define   SET32SCL1D_YC_CFG20_vlut_pdfvssm_regs(r32,v)     _BFSET_(r32, 6, 6,v)
    #define   GET16SCL1D_YC_CFG20_vlut_pdfvssm_regs(r16)       _BFGET_(r16, 6, 6)
    #define   SET16SCL1D_YC_CFG20_vlut_pdfvssm_regs(r16,v)     _BFSET_(r16, 6, 6,v)

    #define   GET32SCL1D_YC_CFG20_reserved1(r32)               _BFGET_(r32, 7, 7)
    #define   SET32SCL1D_YC_CFG20_reserved1(r32,v)             _BFSET_(r32, 7, 7,v)
    #define   GET16SCL1D_YC_CFG20_reserved1(r16)               _BFGET_(r16, 7, 7)
    #define   SET16SCL1D_YC_CFG20_reserved1(r16,v)             _BFSET_(r16, 7, 7,v)

    #define   GET32SCL1D_YC_CFG20_dpwr_regs(r32)               _BFGET_(r32,10, 8)
    #define   SET32SCL1D_YC_CFG20_dpwr_regs(r32,v)             _BFSET_(r32,10, 8,v)
    #define   GET16SCL1D_YC_CFG20_dpwr_regs(r16)               _BFGET_(r16,10, 8)
    #define   SET16SCL1D_YC_CFG20_dpwr_regs(r16,v)             _BFSET_(r16,10, 8,v)

    #define   GET32SCL1D_YC_CFG20_Reserved2(r32)               _BFGET_(r32,11,11)
    #define   SET32SCL1D_YC_CFG20_Reserved2(r32,v)             _BFSET_(r32,11,11,v)
    #define   GET16SCL1D_YC_CFG20_Reserved2(r16)               _BFGET_(r16,11,11)
    #define   SET16SCL1D_YC_CFG20_Reserved2(r16,v)             _BFSET_(r16,11,11,v)

    #define   GET32SCL1D_YC_CFG20_syp_yc420_regs(r32)          _BFGET_(r32,12,12)
    #define   SET32SCL1D_YC_CFG20_syp_yc420_regs(r32,v)        _BFSET_(r32,12,12,v)
    #define   GET16SCL1D_YC_CFG20_syp_yc420_regs(r16)          _BFGET_(r16,12,12)
    #define   SET16SCL1D_YC_CFG20_syp_yc420_regs(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32SCL1D_YC_CFG20_Reserved3(r32)               _BFGET_(r32,13,13)
    #define   SET32SCL1D_YC_CFG20_Reserved3(r32,v)             _BFSET_(r32,13,13,v)
    #define   GET16SCL1D_YC_CFG20_Reserved3(r16)               _BFGET_(r16,13,13)
    #define   SET16SCL1D_YC_CFG20_Reserved3(r16,v)             _BFSET_(r16,13,13,v)

    #define   GET32SCL1D_YC_CFG20_ip_type_regs(r32)            _BFGET_(r32,15,14)
    #define   SET32SCL1D_YC_CFG20_ip_type_regs(r32,v)          _BFSET_(r32,15,14,v)
    #define   GET16SCL1D_YC_CFG20_ip_type_regs(r16)            _BFGET_(r16,15,14)
    #define   SET16SCL1D_YC_CFG20_ip_type_regs(r16,v)          _BFSET_(r16,15,14,v)

    #define     w32SCL1D_YC_CFG20                              {\
            UNSG32 uCFG20_hlut_pdwn_regs                       :  1;\
            UNSG32 uCFG20_hlut_pdlvmc_regs                     :  1;\
            UNSG32 uCFG20_hlut_pdfvssm_regs                    :  1;\
            UNSG32 uCFG20_reserved0                            :  1;\
            UNSG32 uCFG20_vlut_pdwn_regs                       :  1;\
            UNSG32 uCFG20_vlut_pdlvmc_regs                     :  1;\
            UNSG32 uCFG20_vlut_pdfvssm_regs                    :  1;\
            UNSG32 uCFG20_reserved1                            :  1;\
            UNSG32 uCFG20_dpwr_regs                            :  3;\
            UNSG32 uCFG20_Reserved2                            :  1;\
            UNSG32 uCFG20_syp_yc420_regs                       :  1;\
            UNSG32 uCFG20_Reserved3                            :  1;\
            UNSG32 uCFG20_ip_type_regs                         :  2;\
            UNSG32 RSVDx50_b16                                 : 16;\
          }
    union { UNSG32 u32SCL1D_YC_CFG20;
            struct w32SCL1D_YC_CFG20;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG21_hinitph_lsb(r32)             _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_CFG21_hinitph_lsb(r32,v)           _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_CFG21_hinitph_lsb(r16)             _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_CFG21_hinitph_lsb(r16,v)           _BFSET_(r16,11, 0,v)

    #define     w32SCL1D_YC_CFG21                              {\
            UNSG32 uCFG21_hinitph_lsb                          : 12;\
            UNSG32 RSVDx54_b12                                 : 20;\
          }
    union { UNSG32 u32SCL1D_YC_CFG21;
            struct w32SCL1D_YC_CFG21;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_CFG33_lb0_pdwn_regs(r32)           _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_CFG33_lb0_pdwn_regs(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_CFG33_lb0_pdwn_regs(r16)           _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_CFG33_lb0_pdwn_regs(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32SCL1D_YC_CFG33_lb0_pdlvmc_regs(r32)         _BFGET_(r32, 1, 1)
    #define   SET32SCL1D_YC_CFG33_lb0_pdlvmc_regs(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16SCL1D_YC_CFG33_lb0_pdlvmc_regs(r16)         _BFGET_(r16, 1, 1)
    #define   SET16SCL1D_YC_CFG33_lb0_pdlvmc_regs(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32SCL1D_YC_CFG33_lb0_pdfvssm_regs(r32)        _BFGET_(r32, 2, 2)
    #define   SET32SCL1D_YC_CFG33_lb0_pdfvssm_regs(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16SCL1D_YC_CFG33_lb0_pdfvssm_regs(r16)        _BFGET_(r16, 2, 2)
    #define   SET16SCL1D_YC_CFG33_lb0_pdfvssm_regs(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32SCL1D_YC_CFG33_reserved0(r32)               _BFGET_(r32, 3, 3)
    #define   SET32SCL1D_YC_CFG33_reserved0(r32,v)             _BFSET_(r32, 3, 3,v)
    #define   GET16SCL1D_YC_CFG33_reserved0(r16)               _BFGET_(r16, 3, 3)
    #define   SET16SCL1D_YC_CFG33_reserved0(r16,v)             _BFSET_(r16, 3, 3,v)

    #define     w32SCL1D_YC_CFG33                              {\
            UNSG32 uCFG33_lb0_pdwn_regs                        :  1;\
            UNSG32 uCFG33_lb0_pdlvmc_regs                      :  1;\
            UNSG32 uCFG33_lb0_pdfvssm_regs                     :  1;\
            UNSG32 uCFG33_reserved0                            :  1;\
            UNSG32 RSVDx58_b4                                  : 28;\
          }
    union { UNSG32 u32SCL1D_YC_CFG33;
            struct w32SCL1D_YC_CFG33;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SCL1D_YC;

    typedef union  T32SCL1D_YC_CFG0
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG0;
                 } T32SCL1D_YC_CFG0;
    typedef union  T32SCL1D_YC_CFG1
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG1;
                 } T32SCL1D_YC_CFG1;
    typedef union  T32SCL1D_YC_CFG2
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG2;
                 } T32SCL1D_YC_CFG2;
    typedef union  T32SCL1D_YC_CFG3
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG3;
                 } T32SCL1D_YC_CFG3;
    typedef union  T32SCL1D_YC_CFG4
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG4;
                 } T32SCL1D_YC_CFG4;
    typedef union  T32SCL1D_YC_CFG5
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG5;
                 } T32SCL1D_YC_CFG5;
    typedef union  T32SCL1D_YC_CFG6
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG6;
                 } T32SCL1D_YC_CFG6;
    typedef union  T32SCL1D_YC_CFG7
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG7;
                 } T32SCL1D_YC_CFG7;
    typedef union  T32SCL1D_YC_CFG8
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG8;
                 } T32SCL1D_YC_CFG8;
    typedef union  T32SCL1D_YC_CFG9
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG9;
                 } T32SCL1D_YC_CFG9;
    typedef union  T32SCL1D_YC_CFG10
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG10;
                 } T32SCL1D_YC_CFG10;
    typedef union  T32SCL1D_YC_CFG11
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG11;
                 } T32SCL1D_YC_CFG11;
    typedef union  T32SCL1D_YC_CFG12
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG12;
                 } T32SCL1D_YC_CFG12;
    typedef union  T32SCL1D_YC_CFG13
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG13;
                 } T32SCL1D_YC_CFG13;
    typedef union  T32SCL1D_YC_CFG14
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG14;
                 } T32SCL1D_YC_CFG14;
    typedef union  T32SCL1D_YC_CFG15
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG15;
                 } T32SCL1D_YC_CFG15;
    typedef union  T32SCL1D_YC_CFG16
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG16;
                 } T32SCL1D_YC_CFG16;
    typedef union  T32SCL1D_YC_CFG17
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG17;
                 } T32SCL1D_YC_CFG17;
    typedef union  T32SCL1D_YC_CFG18
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG18;
                 } T32SCL1D_YC_CFG18;
    typedef union  T32SCL1D_YC_CFG19
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG19;
                 } T32SCL1D_YC_CFG19;
    typedef union  T32SCL1D_YC_CFG20
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG20;
                 } T32SCL1D_YC_CFG20;
    typedef union  T32SCL1D_YC_CFG21
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG21;
                 } T32SCL1D_YC_CFG21;
    typedef union  T32SCL1D_YC_CFG33
          { UNSG32 u32;
            struct w32SCL1D_YC_CFG33;
                 } T32SCL1D_YC_CFG33;
    ///////////////////////////////////////////////////////////

    typedef union  TSCL1D_YC_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG0;
                   };
                 } TSCL1D_YC_CFG0;
    typedef union  TSCL1D_YC_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG1;
                   };
                 } TSCL1D_YC_CFG1;
    typedef union  TSCL1D_YC_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG2;
                   };
                 } TSCL1D_YC_CFG2;
    typedef union  TSCL1D_YC_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG3;
                   };
                 } TSCL1D_YC_CFG3;
    typedef union  TSCL1D_YC_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG4;
                   };
                 } TSCL1D_YC_CFG4;
    typedef union  TSCL1D_YC_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG5;
                   };
                 } TSCL1D_YC_CFG5;
    typedef union  TSCL1D_YC_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG6;
                   };
                 } TSCL1D_YC_CFG6;
    typedef union  TSCL1D_YC_CFG7
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG7;
                   };
                 } TSCL1D_YC_CFG7;
    typedef union  TSCL1D_YC_CFG8
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG8;
                   };
                 } TSCL1D_YC_CFG8;
    typedef union  TSCL1D_YC_CFG9
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG9;
                   };
                 } TSCL1D_YC_CFG9;
    typedef union  TSCL1D_YC_CFG10
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG10;
                   };
                 } TSCL1D_YC_CFG10;
    typedef union  TSCL1D_YC_CFG11
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG11;
                   };
                 } TSCL1D_YC_CFG11;
    typedef union  TSCL1D_YC_CFG12
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG12;
                   };
                 } TSCL1D_YC_CFG12;
    typedef union  TSCL1D_YC_CFG13
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG13;
                   };
                 } TSCL1D_YC_CFG13;
    typedef union  TSCL1D_YC_CFG14
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG14;
                   };
                 } TSCL1D_YC_CFG14;
    typedef union  TSCL1D_YC_CFG15
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG15;
                   };
                 } TSCL1D_YC_CFG15;
    typedef union  TSCL1D_YC_CFG16
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG16;
                   };
                 } TSCL1D_YC_CFG16;
    typedef union  TSCL1D_YC_CFG17
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG17;
                   };
                 } TSCL1D_YC_CFG17;
    typedef union  TSCL1D_YC_CFG18
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG18;
                   };
                 } TSCL1D_YC_CFG18;
    typedef union  TSCL1D_YC_CFG19
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG19;
                   };
                 } TSCL1D_YC_CFG19;
    typedef union  TSCL1D_YC_CFG20
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG20;
                   };
                 } TSCL1D_YC_CFG20;
    typedef union  TSCL1D_YC_CFG21
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG21;
                   };
                 } TSCL1D_YC_CFG21;
    typedef union  TSCL1D_YC_CFG33
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_CFG33;
                   };
                 } TSCL1D_YC_CFG33;

    ///////////////////////////////////////////////////////////
     SIGN32 SCL1D_YC_drvrd(SIE_SCL1D_YC *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SCL1D_YC_drvwr(SIE_SCL1D_YC *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SCL1D_YC_reset(SIE_SCL1D_YC *p);
     SIGN32 SCL1D_YC_cmp  (SIE_SCL1D_YC *p, SIE_SCL1D_YC *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SCL1D_YC_check(p,pie,pfx,hLOG) SCL1D_YC_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SCL1D_YC_print(p,    pfx,hLOG) SCL1D_YC_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SCL1D_YC
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SCL1D_YC_COEFF          biu              (4,4)
///     ###
///     * Register specification of interface SCL1D_YC_COEFF
///     * Defines the size of the scl1d_yc_coeff
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 4  htap                      0x4
///                                    ###
///                                    * Number of horizontal tap for horizontal 1D scaler. For Adaptive scaler this should be 4.
///                                    ###
///               %unsigned 4  vtap                      0x4
///                                    ###
///                                    * Number of vertical tap for vertical 1D scaler. For Adaptive scaler this should be 4.
///                                    ###
///               %unsigned 5  coeff_index               0x0
///                                    ###
///                                    * Register to indicate the current programming location/phase of coefficient table
///                                    ###
///               %unsigned 1  coeff_hvsel               0x0
///                                    ###
///                                    * Bit to indicate programming of horizontal or vertical scaling coefficients.1: Horizontal table0: Vertical table
///                                    ###
///               %unsigned 1  coeffload                 0x0
///                                    ###
///                                    * Initiates loading of scaler coefficients from the microprocessor addresses (ADPSCL_COEFF0 - ADPSCL_COEFF11) to the appropriate hardware table location.
///                                    ###
///               %unsigned 1  coeffread                 0x0
///                                    ###
///                                    * Initiates Reading of scaler coefficients from the microprocessor addresses (ADPSCL_COEFF0 - ADPSCL_COEFF11) to the appropriate hardware table location.
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00004 CFG1                 (RW)
///               %unsigned 12 coeff0                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff0[12] : signcoeff0[11:0] : magnitude
///                                    ###
///               %unsigned 12 coeff1                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff1[12] : signcoeff1[11:0] : magnitude
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00008 CFG2                 (RW)
///               %unsigned 12 coeff2                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff2[12] : signcoeff211:0] : magnitude
///                                    ###
///               %unsigned 12 coeff3                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff3[12] : signcoeff3[11:0] : magnitude
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0000C CFG3                 (RW)
///               %unsigned 12 coeff4                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff4[12] : signcoeff4[1:0] : magnitude
///                                    ###
///               %unsigned 12 coeff5                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff5[12] : signcoeff5[11:0] : magnitude
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00010 CFG4                 (RW)
///               %unsigned 12 coeff6                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff6[12] : signcoeff6[1:0] : magnitude
///                                    ###
///               %unsigned 12 coeff7                    0x0
///                                    ###
///                                    * Temporary Place holders for the coefficients of the filter corresponding to a phase of the horizontal or vertical scaler coefficient table. This phase is represented by the register ADPSCL_COEFFCTRL[5:0]. Coefficients should be in sign magnitude for. Coeff7[12] : signcoeff7[11:0] : magnitude
///                                    * End of scl1d_yc_coeff register group
///                                    ###
///               %%        8          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      20B, bits:     112b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SCL1D_YC_COEFF
#define h_SCL1D_YC_COEFF (){}

    #define     RA_SCL1D_YC_COEFF_CFG0                         0x0000

    #define     BA_SCL1D_YC_COEFF_CFG0_htap                    0x0000
    #define     B16SCL1D_YC_COEFF_CFG0_htap                    0x0000
    #define   LSb32SCL1D_YC_COEFF_CFG0_htap                       0
    #define   LSb16SCL1D_YC_COEFF_CFG0_htap                       0
    #define       bSCL1D_YC_COEFF_CFG0_htap                    4
    #define   MSK32SCL1D_YC_COEFF_CFG0_htap                       0x0000000F

    #define     BA_SCL1D_YC_COEFF_CFG0_vtap                    0x0000
    #define     B16SCL1D_YC_COEFF_CFG0_vtap                    0x0000
    #define   LSb32SCL1D_YC_COEFF_CFG0_vtap                       4
    #define   LSb16SCL1D_YC_COEFF_CFG0_vtap                       4
    #define       bSCL1D_YC_COEFF_CFG0_vtap                    4
    #define   MSK32SCL1D_YC_COEFF_CFG0_vtap                       0x000000F0

    #define     BA_SCL1D_YC_COEFF_CFG0_coeff_index             0x0001
    #define     B16SCL1D_YC_COEFF_CFG0_coeff_index             0x0000
    #define   LSb32SCL1D_YC_COEFF_CFG0_coeff_index                8
    #define   LSb16SCL1D_YC_COEFF_CFG0_coeff_index                8
    #define       bSCL1D_YC_COEFF_CFG0_coeff_index             5
    #define   MSK32SCL1D_YC_COEFF_CFG0_coeff_index                0x00001F00

    #define     BA_SCL1D_YC_COEFF_CFG0_coeff_hvsel             0x0001
    #define     B16SCL1D_YC_COEFF_CFG0_coeff_hvsel             0x0000
    #define   LSb32SCL1D_YC_COEFF_CFG0_coeff_hvsel                13
    #define   LSb16SCL1D_YC_COEFF_CFG0_coeff_hvsel                13
    #define       bSCL1D_YC_COEFF_CFG0_coeff_hvsel             1
    #define   MSK32SCL1D_YC_COEFF_CFG0_coeff_hvsel                0x00002000

    #define     BA_SCL1D_YC_COEFF_CFG0_coeffload               0x0001
    #define     B16SCL1D_YC_COEFF_CFG0_coeffload               0x0000
    #define   LSb32SCL1D_YC_COEFF_CFG0_coeffload                  14
    #define   LSb16SCL1D_YC_COEFF_CFG0_coeffload                  14
    #define       bSCL1D_YC_COEFF_CFG0_coeffload               1
    #define   MSK32SCL1D_YC_COEFF_CFG0_coeffload                  0x00004000

    #define     BA_SCL1D_YC_COEFF_CFG0_coeffread               0x0001
    #define     B16SCL1D_YC_COEFF_CFG0_coeffread               0x0000
    #define   LSb32SCL1D_YC_COEFF_CFG0_coeffread                  15
    #define   LSb16SCL1D_YC_COEFF_CFG0_coeffread                  15
    #define       bSCL1D_YC_COEFF_CFG0_coeffread               1
    #define   MSK32SCL1D_YC_COEFF_CFG0_coeffread                  0x00008000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_COEFF_CFG1                         0x0004

    #define     BA_SCL1D_YC_COEFF_CFG1_coeff0                  0x0004
    #define     B16SCL1D_YC_COEFF_CFG1_coeff0                  0x0004
    #define   LSb32SCL1D_YC_COEFF_CFG1_coeff0                     0
    #define   LSb16SCL1D_YC_COEFF_CFG1_coeff0                     0
    #define       bSCL1D_YC_COEFF_CFG1_coeff0                  12
    #define   MSK32SCL1D_YC_COEFF_CFG1_coeff0                     0x00000FFF

    #define     BA_SCL1D_YC_COEFF_CFG1_coeff1                  0x0005
    #define     B16SCL1D_YC_COEFF_CFG1_coeff1                  0x0004
    #define   LSb32SCL1D_YC_COEFF_CFG1_coeff1                     12
    #define   LSb16SCL1D_YC_COEFF_CFG1_coeff1                     12
    #define       bSCL1D_YC_COEFF_CFG1_coeff1                  12
    #define   MSK32SCL1D_YC_COEFF_CFG1_coeff1                     0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_COEFF_CFG2                         0x0008

    #define     BA_SCL1D_YC_COEFF_CFG2_coeff2                  0x0008
    #define     B16SCL1D_YC_COEFF_CFG2_coeff2                  0x0008
    #define   LSb32SCL1D_YC_COEFF_CFG2_coeff2                     0
    #define   LSb16SCL1D_YC_COEFF_CFG2_coeff2                     0
    #define       bSCL1D_YC_COEFF_CFG2_coeff2                  12
    #define   MSK32SCL1D_YC_COEFF_CFG2_coeff2                     0x00000FFF

    #define     BA_SCL1D_YC_COEFF_CFG2_coeff3                  0x0009
    #define     B16SCL1D_YC_COEFF_CFG2_coeff3                  0x0008
    #define   LSb32SCL1D_YC_COEFF_CFG2_coeff3                     12
    #define   LSb16SCL1D_YC_COEFF_CFG2_coeff3                     12
    #define       bSCL1D_YC_COEFF_CFG2_coeff3                  12
    #define   MSK32SCL1D_YC_COEFF_CFG2_coeff3                     0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_COEFF_CFG3                         0x000C

    #define     BA_SCL1D_YC_COEFF_CFG3_coeff4                  0x000C
    #define     B16SCL1D_YC_COEFF_CFG3_coeff4                  0x000C
    #define   LSb32SCL1D_YC_COEFF_CFG3_coeff4                     0
    #define   LSb16SCL1D_YC_COEFF_CFG3_coeff4                     0
    #define       bSCL1D_YC_COEFF_CFG3_coeff4                  12
    #define   MSK32SCL1D_YC_COEFF_CFG3_coeff4                     0x00000FFF

    #define     BA_SCL1D_YC_COEFF_CFG3_coeff5                  0x000D
    #define     B16SCL1D_YC_COEFF_CFG3_coeff5                  0x000C
    #define   LSb32SCL1D_YC_COEFF_CFG3_coeff5                     12
    #define   LSb16SCL1D_YC_COEFF_CFG3_coeff5                     12
    #define       bSCL1D_YC_COEFF_CFG3_coeff5                  12
    #define   MSK32SCL1D_YC_COEFF_CFG3_coeff5                     0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_COEFF_CFG4                         0x0010

    #define     BA_SCL1D_YC_COEFF_CFG4_coeff6                  0x0010
    #define     B16SCL1D_YC_COEFF_CFG4_coeff6                  0x0010
    #define   LSb32SCL1D_YC_COEFF_CFG4_coeff6                     0
    #define   LSb16SCL1D_YC_COEFF_CFG4_coeff6                     0
    #define       bSCL1D_YC_COEFF_CFG4_coeff6                  12
    #define   MSK32SCL1D_YC_COEFF_CFG4_coeff6                     0x00000FFF

    #define     BA_SCL1D_YC_COEFF_CFG4_coeff7                  0x0011
    #define     B16SCL1D_YC_COEFF_CFG4_coeff7                  0x0010
    #define   LSb32SCL1D_YC_COEFF_CFG4_coeff7                     12
    #define   LSb16SCL1D_YC_COEFF_CFG4_coeff7                     12
    #define       bSCL1D_YC_COEFF_CFG4_coeff7                  12
    #define   MSK32SCL1D_YC_COEFF_CFG4_coeff7                     0x00FFF000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SCL1D_YC_COEFF {
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_COEFF_CFG0_htap(r32)               _BFGET_(r32, 3, 0)
    #define   SET32SCL1D_YC_COEFF_CFG0_htap(r32,v)             _BFSET_(r32, 3, 0,v)
    #define   GET16SCL1D_YC_COEFF_CFG0_htap(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SCL1D_YC_COEFF_CFG0_htap(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32SCL1D_YC_COEFF_CFG0_vtap(r32)               _BFGET_(r32, 7, 4)
    #define   SET32SCL1D_YC_COEFF_CFG0_vtap(r32,v)             _BFSET_(r32, 7, 4,v)
    #define   GET16SCL1D_YC_COEFF_CFG0_vtap(r16)               _BFGET_(r16, 7, 4)
    #define   SET16SCL1D_YC_COEFF_CFG0_vtap(r16,v)             _BFSET_(r16, 7, 4,v)

    #define   GET32SCL1D_YC_COEFF_CFG0_coeff_index(r32)        _BFGET_(r32,12, 8)
    #define   SET32SCL1D_YC_COEFF_CFG0_coeff_index(r32,v)      _BFSET_(r32,12, 8,v)
    #define   GET16SCL1D_YC_COEFF_CFG0_coeff_index(r16)        _BFGET_(r16,12, 8)
    #define   SET16SCL1D_YC_COEFF_CFG0_coeff_index(r16,v)      _BFSET_(r16,12, 8,v)

    #define   GET32SCL1D_YC_COEFF_CFG0_coeff_hvsel(r32)        _BFGET_(r32,13,13)
    #define   SET32SCL1D_YC_COEFF_CFG0_coeff_hvsel(r32,v)      _BFSET_(r32,13,13,v)
    #define   GET16SCL1D_YC_COEFF_CFG0_coeff_hvsel(r16)        _BFGET_(r16,13,13)
    #define   SET16SCL1D_YC_COEFF_CFG0_coeff_hvsel(r16,v)      _BFSET_(r16,13,13,v)

    #define   GET32SCL1D_YC_COEFF_CFG0_coeffload(r32)          _BFGET_(r32,14,14)
    #define   SET32SCL1D_YC_COEFF_CFG0_coeffload(r32,v)        _BFSET_(r32,14,14,v)
    #define   GET16SCL1D_YC_COEFF_CFG0_coeffload(r16)          _BFGET_(r16,14,14)
    #define   SET16SCL1D_YC_COEFF_CFG0_coeffload(r16,v)        _BFSET_(r16,14,14,v)

    #define   GET32SCL1D_YC_COEFF_CFG0_coeffread(r32)          _BFGET_(r32,15,15)
    #define   SET32SCL1D_YC_COEFF_CFG0_coeffread(r32,v)        _BFSET_(r32,15,15,v)
    #define   GET16SCL1D_YC_COEFF_CFG0_coeffread(r16)          _BFGET_(r16,15,15)
    #define   SET16SCL1D_YC_COEFF_CFG0_coeffread(r16,v)        _BFSET_(r16,15,15,v)

    #define     w32SCL1D_YC_COEFF_CFG0                         {\
            UNSG32 uCFG0_htap                                  :  4;\
            UNSG32 uCFG0_vtap                                  :  4;\
            UNSG32 uCFG0_coeff_index                           :  5;\
            UNSG32 uCFG0_coeff_hvsel                           :  1;\
            UNSG32 uCFG0_coeffload                             :  1;\
            UNSG32 uCFG0_coeffread                             :  1;\
            UNSG32 RSVDx0_b16                                  : 16;\
          }
    union { UNSG32 u32SCL1D_YC_COEFF_CFG0;
            struct w32SCL1D_YC_COEFF_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_COEFF_CFG1_coeff0(r32)             _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_COEFF_CFG1_coeff0(r32,v)           _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_COEFF_CFG1_coeff0(r16)             _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_COEFF_CFG1_coeff0(r16,v)           _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_COEFF_CFG1_coeff1(r32)             _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_COEFF_CFG1_coeff1(r32,v)           _BFSET_(r32,23,12,v)

    #define     w32SCL1D_YC_COEFF_CFG1                         {\
            UNSG32 uCFG1_coeff0                                : 12;\
            UNSG32 uCFG1_coeff1                                : 12;\
            UNSG32 RSVDx4_b24                                  :  8;\
          }
    union { UNSG32 u32SCL1D_YC_COEFF_CFG1;
            struct w32SCL1D_YC_COEFF_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_COEFF_CFG2_coeff2(r32)             _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_COEFF_CFG2_coeff2(r32,v)           _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_COEFF_CFG2_coeff2(r16)             _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_COEFF_CFG2_coeff2(r16,v)           _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_COEFF_CFG2_coeff3(r32)             _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_COEFF_CFG2_coeff3(r32,v)           _BFSET_(r32,23,12,v)

    #define     w32SCL1D_YC_COEFF_CFG2                         {\
            UNSG32 uCFG2_coeff2                                : 12;\
            UNSG32 uCFG2_coeff3                                : 12;\
            UNSG32 RSVDx8_b24                                  :  8;\
          }
    union { UNSG32 u32SCL1D_YC_COEFF_CFG2;
            struct w32SCL1D_YC_COEFF_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_COEFF_CFG3_coeff4(r32)             _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_COEFF_CFG3_coeff4(r32,v)           _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_COEFF_CFG3_coeff4(r16)             _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_COEFF_CFG3_coeff4(r16,v)           _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_COEFF_CFG3_coeff5(r32)             _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_COEFF_CFG3_coeff5(r32,v)           _BFSET_(r32,23,12,v)

    #define     w32SCL1D_YC_COEFF_CFG3                         {\
            UNSG32 uCFG3_coeff4                                : 12;\
            UNSG32 uCFG3_coeff5                                : 12;\
            UNSG32 RSVDxC_b24                                  :  8;\
          }
    union { UNSG32 u32SCL1D_YC_COEFF_CFG3;
            struct w32SCL1D_YC_COEFF_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_COEFF_CFG4_coeff6(r32)             _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_COEFF_CFG4_coeff6(r32,v)           _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_COEFF_CFG4_coeff6(r16)             _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_COEFF_CFG4_coeff6(r16,v)           _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_COEFF_CFG4_coeff7(r32)             _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_COEFF_CFG4_coeff7(r32,v)           _BFSET_(r32,23,12,v)

    #define     w32SCL1D_YC_COEFF_CFG4                         {\
            UNSG32 uCFG4_coeff6                                : 12;\
            UNSG32 uCFG4_coeff7                                : 12;\
            UNSG32 RSVDx10_b24                                 :  8;\
          }
    union { UNSG32 u32SCL1D_YC_COEFF_CFG4;
            struct w32SCL1D_YC_COEFF_CFG4;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SCL1D_YC_COEFF;

    typedef union  T32SCL1D_YC_COEFF_CFG0
          { UNSG32 u32;
            struct w32SCL1D_YC_COEFF_CFG0;
                 } T32SCL1D_YC_COEFF_CFG0;
    typedef union  T32SCL1D_YC_COEFF_CFG1
          { UNSG32 u32;
            struct w32SCL1D_YC_COEFF_CFG1;
                 } T32SCL1D_YC_COEFF_CFG1;
    typedef union  T32SCL1D_YC_COEFF_CFG2
          { UNSG32 u32;
            struct w32SCL1D_YC_COEFF_CFG2;
                 } T32SCL1D_YC_COEFF_CFG2;
    typedef union  T32SCL1D_YC_COEFF_CFG3
          { UNSG32 u32;
            struct w32SCL1D_YC_COEFF_CFG3;
                 } T32SCL1D_YC_COEFF_CFG3;
    typedef union  T32SCL1D_YC_COEFF_CFG4
          { UNSG32 u32;
            struct w32SCL1D_YC_COEFF_CFG4;
                 } T32SCL1D_YC_COEFF_CFG4;
    ///////////////////////////////////////////////////////////

    typedef union  TSCL1D_YC_COEFF_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_COEFF_CFG0;
                   };
                 } TSCL1D_YC_COEFF_CFG0;
    typedef union  TSCL1D_YC_COEFF_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_COEFF_CFG1;
                   };
                 } TSCL1D_YC_COEFF_CFG1;
    typedef union  TSCL1D_YC_COEFF_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_COEFF_CFG2;
                   };
                 } TSCL1D_YC_COEFF_CFG2;
    typedef union  TSCL1D_YC_COEFF_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_COEFF_CFG3;
                   };
                 } TSCL1D_YC_COEFF_CFG3;
    typedef union  TSCL1D_YC_COEFF_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_COEFF_CFG4;
                   };
                 } TSCL1D_YC_COEFF_CFG4;

    ///////////////////////////////////////////////////////////
     SIGN32 SCL1D_YC_COEFF_drvrd(SIE_SCL1D_YC_COEFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SCL1D_YC_COEFF_drvwr(SIE_SCL1D_YC_COEFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SCL1D_YC_COEFF_reset(SIE_SCL1D_YC_COEFF *p);
     SIGN32 SCL1D_YC_COEFF_cmp  (SIE_SCL1D_YC_COEFF *p, SIE_SCL1D_YC_COEFF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SCL1D_YC_COEFF_check(p,pie,pfx,hLOG) SCL1D_YC_COEFF_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SCL1D_YC_COEFF_print(p,    pfx,hLOG) SCL1D_YC_COEFF_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SCL1D_YC_COEFF
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SCL1D_YC_FRC            biu              (4,4)
///     ###
///     * Register specification of interface SCL1D_YC_FRC
///     * Defines the size of the scl1d_yc_frc
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 8  sclclk_ctrl               0x80
///                                    ###
///                                    * ADPSCLCLK_CTRL_REGS
///                                    * Clock puncture value.
///                                    * The Scaler is capable of generating its output in large burst. In Slot1 mode, this can create load on SDRAM bandwidth. This register can be used even-out the load on SDRAM bandwidth. This register controls the data request to Scaler by puncturing the clock to the request generating logic, hence reducing the rate at which Scaler pumps the data out. Default value of this register is 128 (also the maximum allowed value), which means no puncturing, hence full load on bandwidth. Lower the value of this register, lower is the pressure on SDRAM bandwidth. For example, if the Scaler is downscaling a frame by 2, the puncture value should be at least greater than 64.
///                                    ###
///               %unsigned 8  sclclk_ctrl1              0x80
///                                    ###
///                                    * ADPSCLCLK_CTRL1_REGS
///                                    ###
///               %unsigned 8  ctrl0                     0x0
///                                    ###
///                                    * ADPCTRL0_REGS
///                                    * Not used.
///                                    * frc_mode[1:0]
///                                    * 00 : Sync mode (Only for MAIN and AUX)
///                                    * 01 : No scaler (Bypass scaling)
///                                    * 10 : Scaler occupies Slot1 (Before memory)
///                                    * 11 : Scaler occupies Slot2 (After memory : Only for MAIN and PIP)
///                                    * mosaic_mode[2]
///                                    * 0 : Mosaic Off (always off for AUX)
///                                    * 1 : Mosaic On
///                                    * bit_mode[3] : 24/16 bit modes (Can be overridden by FRC_PACKMODE register, address offset 0x2A)
///                                    * 1 : 24 bit mode
///                                    * 0 : 16 bit mode (Always 16 bit for AUX)
///                                    * sp_mode[7:4] : Special tearless modes
///                                    * 0000 : Normal tearless.
///                                    * 0001 : Smooth movie mode. 3:2 to 3:3 conversion based on film flag from deinterlacer.
///                                    * 0010 : Smooth movie mode. 3:2 to 1:1 conversion based on film flag from deinterlacer.
///                                    * 0011 : Stable output vsync mode on interlaced input with four frame buffers.
///                                    * 0100 : Stable output vsync mode on interlaced input with three frame buffers.
///                                    * 0101 : Stable output vsync mode on progressive input with two frame buffers.
///                                    * 0111 : Interlacing the progressive input frames into fields. This mode also needs FRC_SDRAM_MOS_LOFF register to be programmed as the number of SDRAM words corresponding to the size of one line of the input frame.
///                                    * 1010 : Smooth movie mode. 3:2 to 2:2 conversion based on film flag from deinterlacer.
///                                    * others – Reserved.
///                                    ###
///               %unsigned 8  ctrl1                     0x0
///                                    ###
///                                    * ADPCTRL1_REGS
///                                    * Not used.
///                                    * load_read[0]
///                                    * 0 to 1 transition loads tearless modes on SDRAM read control
///                                    * load_write[1]
///                                    * 0 to 1 transition loads tearless modes on SDRAM write control
///                                    * read_ctrl[2]
///                                    * 0 : Loads tearless modes on SDRAM read control immediately
///                                    * 1 : Loads tearless modes on SDRAM read control on frame reset
///                                    * write_ctrl[3]
///                                    * 0 : Loads tearless modes on SDRAM write control immediately
///                                    * 1 : Loads tearless modes on SDRAM write control on frame reset
///                                    * freeze[4] : Freeze modes
///                                    * 0 : No freeze
///                                    * 1 : Freeze
///                                    * inv_fe_fld[5] : Invert FE field
///                                    * inv_be_fld[6] : Invert BE Field
///                                    * be_frst_shft_en[7] : Enable BE Frame Reset Shift
///                                    ###
///     @ 0x00004 CFG1                 (P)
///               %unsigned 8  ctrl2                     0x0
///                                    ###
///                                    * ADPCTRL2_REGS
///                                    * Not used.
///                                    * tearless_read_ctrl[3:0]
///                                    * Tearless modes for SDRAM read control
///                                    * 0000 : Read from 0th frame buffer
///                                    * 0001 : Read from 1st frame buffer
///                                    * 0010 : Read from 2nd frame buffer
///                                    * 0011 : Read in 0-1-2-0 sequence (when read frame rate is slower than write frame rate, applicable for tearless mode only)
///                                    * 0100 : Read in tearless mode (keeping one frame distance with write pointer)
///                                    * NOTE : tearless write ctrl must be programmed to 0011 when tearless read control is 0100
///                                    * tearless_write_ctrl[7:4]
///                                    * Tearless modes for SDRAM write control
///                                    * 0000 : Write to 0th frame buffer
///                                    * 0001 : Write to 1st frame buffer
///                                    * 0010 : Write to 2nd frame buffer
///                                    * 0011 : Write in 0-1-2-0 sequence (when write frame rate is slower than read frame rate, applicable for tearless mode only)
///                                    * 0100 : Write in tearless mode (keeping one frame distance with read pointer)
///                                    * NOTE : tearless read ctrl must be programmed to 0011 when tearless write control is 0100
///                                    ###
///               %unsigned 8  dly_frst_de               0x40
///                                    ###
///                                    * Controls delay between frame reset and data-enable supplied to Scaler (Only in Slot2)
///                                    ###
///               %unsigned 10 dly_de_lrst               0x28
///                                    ###
///                                    * Controls delay between data-enable and line reset supplied to Scaler (Only in Slot2)
///                                    ###
///               %unsigned 1  auto_lrst                 0x0
///                                    ###
///                                    * Select lrst (line reset) generation.
///                                    * =0 : lrst generation depends on programmed dly_de_lrst.
///                                    * =1 : lrst generation is automatic. Should be enabled if HSCALE is placed before VSCALE (i.e., SCL's up_down=1)
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x00008 CFG2                 (P)
///               %unsigned 12 bevres                    0x0
///                                    ###
///                                    * If FRC is in No-scaler or Slot1 mode, program this to Back-end vertical resolution, else, program to Front-end vertical resolution
///                                    ###
///               %unsigned 12 fevres                    0x0
///                                    ###
///                                    * If FRC is in No-scaler or Slot2 mode, program this to Front-end vertical resolution else program to Back-end vertical resolution
///                                    ###
///               %unsigned 8  dly_lrst_de               0x28
///                                    ###
///                                    * Controls delay between line reset and data-enable supplied to Scaler (Only in Slot2)
///                                    ###
///     @ 0x0000C CFG3                 (P)
///               %unsigned 13 behres                    0x0
///                                    ###
///                                    * If FRC is in No-scaler or Slot1 mode, program this to Back-end horizontal resolution, else, program to Front-end horizontal resolution
///                                    ###
///               %unsigned 2  clnt_ctrl                 0x3
///                                    ###
///                                    * Not used.
///                                    * ADPCLNT_CTRL_REGS
///                                    * frc_clnt_ctrl0[0] :
///                                    * FRC write client mask. By enabling this mask, the request from write client to SDRAM controller is masked, thereby preventing the FRC from writing any data into SDRAM.
///                                    * 0 : Mask disabled
///                                    * 1 : Mask enabled
///                                    * frc_clnt_ctrl1[1] :
///                                    * FRC read client mask. By enabling this mask, the request from read client to SDRAM controller is masked, thereby preventing the FRC from reading any data from SDRAM.
///                                    * 0 : Mask disabled
///                                    * 1 : Mask enabled
///                                    ###
///               %unsigned 8  ctrl                      0x0
///                                    ###
///                                    * Not used. ADPCTRL_REGS
///                                    ###
///               %unsigned 8  rff_ctrl                  0x0
///                                    ###
///                                    * Not used. ADPRFF_CTRL_REGS
///                                    ###
///               %%        1          # Stuffing bits...
///     @ 0x00010 CFG4                 (P)
///               %unsigned 1  ols                       0x0
///                                    ###
///                                    * Controls off-line scaler mode for adaptive scalar
///                                    * 0 : ADPSCL4K Scaler works in in-line mode
///                                    * 1 : ADPSCL4K Scaler works in off-line mode
///                                    ###
///               %unsigned 1  wclient                   0x0
///                                    ###
///                                    * Enables the write to ADPSCL4K Scaler's write client in in-line mode. Make this bit 1 for the last frame of in-line scaling (the frame before moving to off-line scaling). This is to facilitate smooth in-line to off-line transition.
///                                    * 0 : No write generated to write client in in-line mode.
///                                    * 1 : send the scaler output to write client (the data from scaler is pulled at the CPCB rate).
///                                    * This bit is don't care when en bit of ols register is 1.
///                                    ###
///               %unsigned 1  luma_key_en               0x0
///                                    ###
///                                    * Not used.
///                                    * Must be 0 as no alpha scaling suport.
///                                    ###
///               %unsigned 10 luma_key_min              0x0
///               %unsigned 10 luma_key_max              0x0
///                                    ###
///                                    * Not used.
///                                    ###
///               %%        9          # Stuffing bits...
///     @ 0x00014 CFG5                 (P)
///               %unsigned 10 al_en_hit_al              0x0
///               %unsigned 12 al_en_non_hit_al          0xFF
///                                    ###
///                                    * Not used.
///                                    ###
///               %%        10         # Stuffing bits...
///     @ 0x00018 CFG6                 (P)
///               %unsigned 10 al_out_threshold          0x80
///                                    ###
///                                    * Not used.
///                                    ###
///               %unsigned 10 al_out_zeroluma           0x0
///                                    ###
///                                    * Not used.
///                                    * End of scl1d_yc_frc register group
///                                    ###
///               %%        12         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      28B, bits:     187b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SCL1D_YC_FRC
#define h_SCL1D_YC_FRC (){}

    #define     RA_SCL1D_YC_FRC_CFG0                           0x0000

    #define     BA_SCL1D_YC_FRC_CFG0_sclclk_ctrl               0x0000
    #define     B16SCL1D_YC_FRC_CFG0_sclclk_ctrl               0x0000
    #define   LSb32SCL1D_YC_FRC_CFG0_sclclk_ctrl                  0
    #define   LSb16SCL1D_YC_FRC_CFG0_sclclk_ctrl                  0
    #define       bSCL1D_YC_FRC_CFG0_sclclk_ctrl               8
    #define   MSK32SCL1D_YC_FRC_CFG0_sclclk_ctrl                  0x000000FF

    #define     BA_SCL1D_YC_FRC_CFG0_sclclk_ctrl1              0x0001
    #define     B16SCL1D_YC_FRC_CFG0_sclclk_ctrl1              0x0000
    #define   LSb32SCL1D_YC_FRC_CFG0_sclclk_ctrl1                 8
    #define   LSb16SCL1D_YC_FRC_CFG0_sclclk_ctrl1                 8
    #define       bSCL1D_YC_FRC_CFG0_sclclk_ctrl1              8
    #define   MSK32SCL1D_YC_FRC_CFG0_sclclk_ctrl1                 0x0000FF00

    #define     BA_SCL1D_YC_FRC_CFG0_ctrl0                     0x0002
    #define     B16SCL1D_YC_FRC_CFG0_ctrl0                     0x0002
    #define   LSb32SCL1D_YC_FRC_CFG0_ctrl0                        16
    #define   LSb16SCL1D_YC_FRC_CFG0_ctrl0                        0
    #define       bSCL1D_YC_FRC_CFG0_ctrl0                     8
    #define   MSK32SCL1D_YC_FRC_CFG0_ctrl0                        0x00FF0000

    #define     BA_SCL1D_YC_FRC_CFG0_ctrl1                     0x0003
    #define     B16SCL1D_YC_FRC_CFG0_ctrl1                     0x0002
    #define   LSb32SCL1D_YC_FRC_CFG0_ctrl1                        24
    #define   LSb16SCL1D_YC_FRC_CFG0_ctrl1                        8
    #define       bSCL1D_YC_FRC_CFG0_ctrl1                     8
    #define   MSK32SCL1D_YC_FRC_CFG0_ctrl1                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_FRC_CFG1                           0x0004

    #define     BA_SCL1D_YC_FRC_CFG1_ctrl2                     0x0004
    #define     B16SCL1D_YC_FRC_CFG1_ctrl2                     0x0004
    #define   LSb32SCL1D_YC_FRC_CFG1_ctrl2                        0
    #define   LSb16SCL1D_YC_FRC_CFG1_ctrl2                        0
    #define       bSCL1D_YC_FRC_CFG1_ctrl2                     8
    #define   MSK32SCL1D_YC_FRC_CFG1_ctrl2                        0x000000FF

    #define     BA_SCL1D_YC_FRC_CFG1_dly_frst_de               0x0005
    #define     B16SCL1D_YC_FRC_CFG1_dly_frst_de               0x0004
    #define   LSb32SCL1D_YC_FRC_CFG1_dly_frst_de                  8
    #define   LSb16SCL1D_YC_FRC_CFG1_dly_frst_de                  8
    #define       bSCL1D_YC_FRC_CFG1_dly_frst_de               8
    #define   MSK32SCL1D_YC_FRC_CFG1_dly_frst_de                  0x0000FF00

    #define     BA_SCL1D_YC_FRC_CFG1_dly_de_lrst               0x0006
    #define     B16SCL1D_YC_FRC_CFG1_dly_de_lrst               0x0006
    #define   LSb32SCL1D_YC_FRC_CFG1_dly_de_lrst                  16
    #define   LSb16SCL1D_YC_FRC_CFG1_dly_de_lrst                  0
    #define       bSCL1D_YC_FRC_CFG1_dly_de_lrst               10
    #define   MSK32SCL1D_YC_FRC_CFG1_dly_de_lrst                  0x03FF0000

    #define     BA_SCL1D_YC_FRC_CFG1_auto_lrst                 0x0007
    #define     B16SCL1D_YC_FRC_CFG1_auto_lrst                 0x0006
    #define   LSb32SCL1D_YC_FRC_CFG1_auto_lrst                    26
    #define   LSb16SCL1D_YC_FRC_CFG1_auto_lrst                    10
    #define       bSCL1D_YC_FRC_CFG1_auto_lrst                 1
    #define   MSK32SCL1D_YC_FRC_CFG1_auto_lrst                    0x04000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_FRC_CFG2                           0x0008

    #define     BA_SCL1D_YC_FRC_CFG2_bevres                    0x0008
    #define     B16SCL1D_YC_FRC_CFG2_bevres                    0x0008
    #define   LSb32SCL1D_YC_FRC_CFG2_bevres                       0
    #define   LSb16SCL1D_YC_FRC_CFG2_bevres                       0
    #define       bSCL1D_YC_FRC_CFG2_bevres                    12
    #define   MSK32SCL1D_YC_FRC_CFG2_bevres                       0x00000FFF

    #define     BA_SCL1D_YC_FRC_CFG2_fevres                    0x0009
    #define     B16SCL1D_YC_FRC_CFG2_fevres                    0x0008
    #define   LSb32SCL1D_YC_FRC_CFG2_fevres                       12
    #define   LSb16SCL1D_YC_FRC_CFG2_fevres                       12
    #define       bSCL1D_YC_FRC_CFG2_fevres                    12
    #define   MSK32SCL1D_YC_FRC_CFG2_fevres                       0x00FFF000

    #define     BA_SCL1D_YC_FRC_CFG2_dly_lrst_de               0x000B
    #define     B16SCL1D_YC_FRC_CFG2_dly_lrst_de               0x000A
    #define   LSb32SCL1D_YC_FRC_CFG2_dly_lrst_de                  24
    #define   LSb16SCL1D_YC_FRC_CFG2_dly_lrst_de                  8
    #define       bSCL1D_YC_FRC_CFG2_dly_lrst_de               8
    #define   MSK32SCL1D_YC_FRC_CFG2_dly_lrst_de                  0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_FRC_CFG3                           0x000C

    #define     BA_SCL1D_YC_FRC_CFG3_behres                    0x000C
    #define     B16SCL1D_YC_FRC_CFG3_behres                    0x000C
    #define   LSb32SCL1D_YC_FRC_CFG3_behres                       0
    #define   LSb16SCL1D_YC_FRC_CFG3_behres                       0
    #define       bSCL1D_YC_FRC_CFG3_behres                    13
    #define   MSK32SCL1D_YC_FRC_CFG3_behres                       0x00001FFF

    #define     BA_SCL1D_YC_FRC_CFG3_clnt_ctrl                 0x000D
    #define     B16SCL1D_YC_FRC_CFG3_clnt_ctrl                 0x000C
    #define   LSb32SCL1D_YC_FRC_CFG3_clnt_ctrl                    13
    #define   LSb16SCL1D_YC_FRC_CFG3_clnt_ctrl                    13
    #define       bSCL1D_YC_FRC_CFG3_clnt_ctrl                 2
    #define   MSK32SCL1D_YC_FRC_CFG3_clnt_ctrl                    0x00006000

    #define     BA_SCL1D_YC_FRC_CFG3_ctrl                      0x000D
    #define     B16SCL1D_YC_FRC_CFG3_ctrl                      0x000C
    #define   LSb32SCL1D_YC_FRC_CFG3_ctrl                         15
    #define   LSb16SCL1D_YC_FRC_CFG3_ctrl                         15
    #define       bSCL1D_YC_FRC_CFG3_ctrl                      8
    #define   MSK32SCL1D_YC_FRC_CFG3_ctrl                         0x007F8000

    #define     BA_SCL1D_YC_FRC_CFG3_rff_ctrl                  0x000E
    #define     B16SCL1D_YC_FRC_CFG3_rff_ctrl                  0x000E
    #define   LSb32SCL1D_YC_FRC_CFG3_rff_ctrl                     23
    #define   LSb16SCL1D_YC_FRC_CFG3_rff_ctrl                     7
    #define       bSCL1D_YC_FRC_CFG3_rff_ctrl                  8
    #define   MSK32SCL1D_YC_FRC_CFG3_rff_ctrl                     0x7F800000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_FRC_CFG4                           0x0010

    #define     BA_SCL1D_YC_FRC_CFG4_ols                       0x0010
    #define     B16SCL1D_YC_FRC_CFG4_ols                       0x0010
    #define   LSb32SCL1D_YC_FRC_CFG4_ols                          0
    #define   LSb16SCL1D_YC_FRC_CFG4_ols                          0
    #define       bSCL1D_YC_FRC_CFG4_ols                       1
    #define   MSK32SCL1D_YC_FRC_CFG4_ols                          0x00000001

    #define     BA_SCL1D_YC_FRC_CFG4_wclient                   0x0010
    #define     B16SCL1D_YC_FRC_CFG4_wclient                   0x0010
    #define   LSb32SCL1D_YC_FRC_CFG4_wclient                      1
    #define   LSb16SCL1D_YC_FRC_CFG4_wclient                      1
    #define       bSCL1D_YC_FRC_CFG4_wclient                   1
    #define   MSK32SCL1D_YC_FRC_CFG4_wclient                      0x00000002

    #define     BA_SCL1D_YC_FRC_CFG4_luma_key_en               0x0010
    #define     B16SCL1D_YC_FRC_CFG4_luma_key_en               0x0010
    #define   LSb32SCL1D_YC_FRC_CFG4_luma_key_en                  2
    #define   LSb16SCL1D_YC_FRC_CFG4_luma_key_en                  2
    #define       bSCL1D_YC_FRC_CFG4_luma_key_en               1
    #define   MSK32SCL1D_YC_FRC_CFG4_luma_key_en                  0x00000004

    #define     BA_SCL1D_YC_FRC_CFG4_luma_key_min              0x0010
    #define     B16SCL1D_YC_FRC_CFG4_luma_key_min              0x0010
    #define   LSb32SCL1D_YC_FRC_CFG4_luma_key_min                 3
    #define   LSb16SCL1D_YC_FRC_CFG4_luma_key_min                 3
    #define       bSCL1D_YC_FRC_CFG4_luma_key_min              10
    #define   MSK32SCL1D_YC_FRC_CFG4_luma_key_min                 0x00001FF8

    #define     BA_SCL1D_YC_FRC_CFG4_luma_key_max              0x0011
    #define     B16SCL1D_YC_FRC_CFG4_luma_key_max              0x0010
    #define   LSb32SCL1D_YC_FRC_CFG4_luma_key_max                 13
    #define   LSb16SCL1D_YC_FRC_CFG4_luma_key_max                 13
    #define       bSCL1D_YC_FRC_CFG4_luma_key_max              10
    #define   MSK32SCL1D_YC_FRC_CFG4_luma_key_max                 0x007FE000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_FRC_CFG5                           0x0014

    #define     BA_SCL1D_YC_FRC_CFG5_al_en_hit_al              0x0014
    #define     B16SCL1D_YC_FRC_CFG5_al_en_hit_al              0x0014
    #define   LSb32SCL1D_YC_FRC_CFG5_al_en_hit_al                 0
    #define   LSb16SCL1D_YC_FRC_CFG5_al_en_hit_al                 0
    #define       bSCL1D_YC_FRC_CFG5_al_en_hit_al              10
    #define   MSK32SCL1D_YC_FRC_CFG5_al_en_hit_al                 0x000003FF

    #define     BA_SCL1D_YC_FRC_CFG5_al_en_non_hit_al          0x0015
    #define     B16SCL1D_YC_FRC_CFG5_al_en_non_hit_al          0x0014
    #define   LSb32SCL1D_YC_FRC_CFG5_al_en_non_hit_al             10
    #define   LSb16SCL1D_YC_FRC_CFG5_al_en_non_hit_al             10
    #define       bSCL1D_YC_FRC_CFG5_al_en_non_hit_al          12
    #define   MSK32SCL1D_YC_FRC_CFG5_al_en_non_hit_al             0x003FFC00
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_FRC_CFG6                           0x0018

    #define     BA_SCL1D_YC_FRC_CFG6_al_out_threshold          0x0018
    #define     B16SCL1D_YC_FRC_CFG6_al_out_threshold          0x0018
    #define   LSb32SCL1D_YC_FRC_CFG6_al_out_threshold             0
    #define   LSb16SCL1D_YC_FRC_CFG6_al_out_threshold             0
    #define       bSCL1D_YC_FRC_CFG6_al_out_threshold          10
    #define   MSK32SCL1D_YC_FRC_CFG6_al_out_threshold             0x000003FF

    #define     BA_SCL1D_YC_FRC_CFG6_al_out_zeroluma           0x0019
    #define     B16SCL1D_YC_FRC_CFG6_al_out_zeroluma           0x0018
    #define   LSb32SCL1D_YC_FRC_CFG6_al_out_zeroluma              10
    #define   LSb16SCL1D_YC_FRC_CFG6_al_out_zeroluma              10
    #define       bSCL1D_YC_FRC_CFG6_al_out_zeroluma           10
    #define   MSK32SCL1D_YC_FRC_CFG6_al_out_zeroluma              0x000FFC00
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SCL1D_YC_FRC {
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_FRC_CFG0_sclclk_ctrl(r32)          _BFGET_(r32, 7, 0)
    #define   SET32SCL1D_YC_FRC_CFG0_sclclk_ctrl(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16SCL1D_YC_FRC_CFG0_sclclk_ctrl(r16)          _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_FRC_CFG0_sclclk_ctrl(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG0_sclclk_ctrl1(r32)         _BFGET_(r32,15, 8)
    #define   SET32SCL1D_YC_FRC_CFG0_sclclk_ctrl1(r32,v)       _BFSET_(r32,15, 8,v)
    #define   GET16SCL1D_YC_FRC_CFG0_sclclk_ctrl1(r16)         _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_FRC_CFG0_sclclk_ctrl1(r16,v)       _BFSET_(r16,15, 8,v)

    #define   GET32SCL1D_YC_FRC_CFG0_ctrl0(r32)                _BFGET_(r32,23,16)
    #define   SET32SCL1D_YC_FRC_CFG0_ctrl0(r32,v)              _BFSET_(r32,23,16,v)
    #define   GET16SCL1D_YC_FRC_CFG0_ctrl0(r16)                _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_FRC_CFG0_ctrl0(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG0_ctrl1(r32)                _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_FRC_CFG0_ctrl1(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_FRC_CFG0_ctrl1(r16)                _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_FRC_CFG0_ctrl1(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_FRC_CFG0                           {\
            UNSG32 uCFG0_sclclk_ctrl                           :  8;\
            UNSG32 uCFG0_sclclk_ctrl1                          :  8;\
            UNSG32 uCFG0_ctrl0                                 :  8;\
            UNSG32 uCFG0_ctrl1                                 :  8;\
          }
    union { UNSG32 u32SCL1D_YC_FRC_CFG0;
            struct w32SCL1D_YC_FRC_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_FRC_CFG1_ctrl2(r32)                _BFGET_(r32, 7, 0)
    #define   SET32SCL1D_YC_FRC_CFG1_ctrl2(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16SCL1D_YC_FRC_CFG1_ctrl2(r16)                _BFGET_(r16, 7, 0)
    #define   SET16SCL1D_YC_FRC_CFG1_ctrl2(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG1_dly_frst_de(r32)          _BFGET_(r32,15, 8)
    #define   SET32SCL1D_YC_FRC_CFG1_dly_frst_de(r32,v)        _BFSET_(r32,15, 8,v)
    #define   GET16SCL1D_YC_FRC_CFG1_dly_frst_de(r16)          _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_FRC_CFG1_dly_frst_de(r16,v)        _BFSET_(r16,15, 8,v)

    #define   GET32SCL1D_YC_FRC_CFG1_dly_de_lrst(r32)          _BFGET_(r32,25,16)
    #define   SET32SCL1D_YC_FRC_CFG1_dly_de_lrst(r32,v)        _BFSET_(r32,25,16,v)
    #define   GET16SCL1D_YC_FRC_CFG1_dly_de_lrst(r16)          _BFGET_(r16, 9, 0)
    #define   SET16SCL1D_YC_FRC_CFG1_dly_de_lrst(r16,v)        _BFSET_(r16, 9, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG1_auto_lrst(r32)            _BFGET_(r32,26,26)
    #define   SET32SCL1D_YC_FRC_CFG1_auto_lrst(r32,v)          _BFSET_(r32,26,26,v)
    #define   GET16SCL1D_YC_FRC_CFG1_auto_lrst(r16)            _BFGET_(r16,10,10)
    #define   SET16SCL1D_YC_FRC_CFG1_auto_lrst(r16,v)          _BFSET_(r16,10,10,v)

    #define     w32SCL1D_YC_FRC_CFG1                           {\
            UNSG32 uCFG1_ctrl2                                 :  8;\
            UNSG32 uCFG1_dly_frst_de                           :  8;\
            UNSG32 uCFG1_dly_de_lrst                           : 10;\
            UNSG32 uCFG1_auto_lrst                             :  1;\
            UNSG32 RSVDx4_b27                                  :  5;\
          }
    union { UNSG32 u32SCL1D_YC_FRC_CFG1;
            struct w32SCL1D_YC_FRC_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_FRC_CFG2_bevres(r32)               _BFGET_(r32,11, 0)
    #define   SET32SCL1D_YC_FRC_CFG2_bevres(r32,v)             _BFSET_(r32,11, 0,v)
    #define   GET16SCL1D_YC_FRC_CFG2_bevres(r16)               _BFGET_(r16,11, 0)
    #define   SET16SCL1D_YC_FRC_CFG2_bevres(r16,v)             _BFSET_(r16,11, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG2_fevres(r32)               _BFGET_(r32,23,12)
    #define   SET32SCL1D_YC_FRC_CFG2_fevres(r32,v)             _BFSET_(r32,23,12,v)

    #define   GET32SCL1D_YC_FRC_CFG2_dly_lrst_de(r32)          _BFGET_(r32,31,24)
    #define   SET32SCL1D_YC_FRC_CFG2_dly_lrst_de(r32,v)        _BFSET_(r32,31,24,v)
    #define   GET16SCL1D_YC_FRC_CFG2_dly_lrst_de(r16)          _BFGET_(r16,15, 8)
    #define   SET16SCL1D_YC_FRC_CFG2_dly_lrst_de(r16,v)        _BFSET_(r16,15, 8,v)

    #define     w32SCL1D_YC_FRC_CFG2                           {\
            UNSG32 uCFG2_bevres                                : 12;\
            UNSG32 uCFG2_fevres                                : 12;\
            UNSG32 uCFG2_dly_lrst_de                           :  8;\
          }
    union { UNSG32 u32SCL1D_YC_FRC_CFG2;
            struct w32SCL1D_YC_FRC_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_FRC_CFG3_behres(r32)               _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_FRC_CFG3_behres(r32,v)             _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_FRC_CFG3_behres(r16)               _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_FRC_CFG3_behres(r16,v)             _BFSET_(r16,12, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG3_clnt_ctrl(r32)            _BFGET_(r32,14,13)
    #define   SET32SCL1D_YC_FRC_CFG3_clnt_ctrl(r32,v)          _BFSET_(r32,14,13,v)
    #define   GET16SCL1D_YC_FRC_CFG3_clnt_ctrl(r16)            _BFGET_(r16,14,13)
    #define   SET16SCL1D_YC_FRC_CFG3_clnt_ctrl(r16,v)          _BFSET_(r16,14,13,v)

    #define   GET32SCL1D_YC_FRC_CFG3_ctrl(r32)                 _BFGET_(r32,22,15)
    #define   SET32SCL1D_YC_FRC_CFG3_ctrl(r32,v)               _BFSET_(r32,22,15,v)

    #define   GET32SCL1D_YC_FRC_CFG3_rff_ctrl(r32)             _BFGET_(r32,30,23)
    #define   SET32SCL1D_YC_FRC_CFG3_rff_ctrl(r32,v)           _BFSET_(r32,30,23,v)
    #define   GET16SCL1D_YC_FRC_CFG3_rff_ctrl(r16)             _BFGET_(r16,14, 7)
    #define   SET16SCL1D_YC_FRC_CFG3_rff_ctrl(r16,v)           _BFSET_(r16,14, 7,v)

    #define     w32SCL1D_YC_FRC_CFG3                           {\
            UNSG32 uCFG3_behres                                : 13;\
            UNSG32 uCFG3_clnt_ctrl                             :  2;\
            UNSG32 uCFG3_ctrl                                  :  8;\
            UNSG32 uCFG3_rff_ctrl                              :  8;\
            UNSG32 RSVDxC_b31                                  :  1;\
          }
    union { UNSG32 u32SCL1D_YC_FRC_CFG3;
            struct w32SCL1D_YC_FRC_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_FRC_CFG4_ols(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_FRC_CFG4_ols(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_FRC_CFG4_ols(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_FRC_CFG4_ols(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG4_wclient(r32)              _BFGET_(r32, 1, 1)
    #define   SET32SCL1D_YC_FRC_CFG4_wclient(r32,v)            _BFSET_(r32, 1, 1,v)
    #define   GET16SCL1D_YC_FRC_CFG4_wclient(r16)              _BFGET_(r16, 1, 1)
    #define   SET16SCL1D_YC_FRC_CFG4_wclient(r16,v)            _BFSET_(r16, 1, 1,v)

    #define   GET32SCL1D_YC_FRC_CFG4_luma_key_en(r32)          _BFGET_(r32, 2, 2)
    #define   SET32SCL1D_YC_FRC_CFG4_luma_key_en(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16SCL1D_YC_FRC_CFG4_luma_key_en(r16)          _BFGET_(r16, 2, 2)
    #define   SET16SCL1D_YC_FRC_CFG4_luma_key_en(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32SCL1D_YC_FRC_CFG4_luma_key_min(r32)         _BFGET_(r32,12, 3)
    #define   SET32SCL1D_YC_FRC_CFG4_luma_key_min(r32,v)       _BFSET_(r32,12, 3,v)
    #define   GET16SCL1D_YC_FRC_CFG4_luma_key_min(r16)         _BFGET_(r16,12, 3)
    #define   SET16SCL1D_YC_FRC_CFG4_luma_key_min(r16,v)       _BFSET_(r16,12, 3,v)

    #define   GET32SCL1D_YC_FRC_CFG4_luma_key_max(r32)         _BFGET_(r32,22,13)
    #define   SET32SCL1D_YC_FRC_CFG4_luma_key_max(r32,v)       _BFSET_(r32,22,13,v)

    #define     w32SCL1D_YC_FRC_CFG4                           {\
            UNSG32 uCFG4_ols                                   :  1;\
            UNSG32 uCFG4_wclient                               :  1;\
            UNSG32 uCFG4_luma_key_en                           :  1;\
            UNSG32 uCFG4_luma_key_min                          : 10;\
            UNSG32 uCFG4_luma_key_max                          : 10;\
            UNSG32 RSVDx10_b23                                 :  9;\
          }
    union { UNSG32 u32SCL1D_YC_FRC_CFG4;
            struct w32SCL1D_YC_FRC_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_FRC_CFG5_al_en_hit_al(r32)         _BFGET_(r32, 9, 0)
    #define   SET32SCL1D_YC_FRC_CFG5_al_en_hit_al(r32,v)       _BFSET_(r32, 9, 0,v)
    #define   GET16SCL1D_YC_FRC_CFG5_al_en_hit_al(r16)         _BFGET_(r16, 9, 0)
    #define   SET16SCL1D_YC_FRC_CFG5_al_en_hit_al(r16,v)       _BFSET_(r16, 9, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG5_al_en_non_hit_al(r32)     _BFGET_(r32,21,10)
    #define   SET32SCL1D_YC_FRC_CFG5_al_en_non_hit_al(r32,v)   _BFSET_(r32,21,10,v)

    #define     w32SCL1D_YC_FRC_CFG5                           {\
            UNSG32 uCFG5_al_en_hit_al                          : 10;\
            UNSG32 uCFG5_al_en_non_hit_al                      : 12;\
            UNSG32 RSVDx14_b22                                 : 10;\
          }
    union { UNSG32 u32SCL1D_YC_FRC_CFG5;
            struct w32SCL1D_YC_FRC_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_FRC_CFG6_al_out_threshold(r32)     _BFGET_(r32, 9, 0)
    #define   SET32SCL1D_YC_FRC_CFG6_al_out_threshold(r32,v)   _BFSET_(r32, 9, 0,v)
    #define   GET16SCL1D_YC_FRC_CFG6_al_out_threshold(r16)     _BFGET_(r16, 9, 0)
    #define   SET16SCL1D_YC_FRC_CFG6_al_out_threshold(r16,v)   _BFSET_(r16, 9, 0,v)

    #define   GET32SCL1D_YC_FRC_CFG6_al_out_zeroluma(r32)      _BFGET_(r32,19,10)
    #define   SET32SCL1D_YC_FRC_CFG6_al_out_zeroluma(r32,v)    _BFSET_(r32,19,10,v)

    #define     w32SCL1D_YC_FRC_CFG6                           {\
            UNSG32 uCFG6_al_out_threshold                      : 10;\
            UNSG32 uCFG6_al_out_zeroluma                       : 10;\
            UNSG32 RSVDx18_b20                                 : 12;\
          }
    union { UNSG32 u32SCL1D_YC_FRC_CFG6;
            struct w32SCL1D_YC_FRC_CFG6;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SCL1D_YC_FRC;

    typedef union  T32SCL1D_YC_FRC_CFG0
          { UNSG32 u32;
            struct w32SCL1D_YC_FRC_CFG0;
                 } T32SCL1D_YC_FRC_CFG0;
    typedef union  T32SCL1D_YC_FRC_CFG1
          { UNSG32 u32;
            struct w32SCL1D_YC_FRC_CFG1;
                 } T32SCL1D_YC_FRC_CFG1;
    typedef union  T32SCL1D_YC_FRC_CFG2
          { UNSG32 u32;
            struct w32SCL1D_YC_FRC_CFG2;
                 } T32SCL1D_YC_FRC_CFG2;
    typedef union  T32SCL1D_YC_FRC_CFG3
          { UNSG32 u32;
            struct w32SCL1D_YC_FRC_CFG3;
                 } T32SCL1D_YC_FRC_CFG3;
    typedef union  T32SCL1D_YC_FRC_CFG4
          { UNSG32 u32;
            struct w32SCL1D_YC_FRC_CFG4;
                 } T32SCL1D_YC_FRC_CFG4;
    typedef union  T32SCL1D_YC_FRC_CFG5
          { UNSG32 u32;
            struct w32SCL1D_YC_FRC_CFG5;
                 } T32SCL1D_YC_FRC_CFG5;
    typedef union  T32SCL1D_YC_FRC_CFG6
          { UNSG32 u32;
            struct w32SCL1D_YC_FRC_CFG6;
                 } T32SCL1D_YC_FRC_CFG6;
    ///////////////////////////////////////////////////////////

    typedef union  TSCL1D_YC_FRC_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_FRC_CFG0;
                   };
                 } TSCL1D_YC_FRC_CFG0;
    typedef union  TSCL1D_YC_FRC_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_FRC_CFG1;
                   };
                 } TSCL1D_YC_FRC_CFG1;
    typedef union  TSCL1D_YC_FRC_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_FRC_CFG2;
                   };
                 } TSCL1D_YC_FRC_CFG2;
    typedef union  TSCL1D_YC_FRC_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_FRC_CFG3;
                   };
                 } TSCL1D_YC_FRC_CFG3;
    typedef union  TSCL1D_YC_FRC_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_FRC_CFG4;
                   };
                 } TSCL1D_YC_FRC_CFG4;
    typedef union  TSCL1D_YC_FRC_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_FRC_CFG5;
                   };
                 } TSCL1D_YC_FRC_CFG5;
    typedef union  TSCL1D_YC_FRC_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_FRC_CFG6;
                   };
                 } TSCL1D_YC_FRC_CFG6;

    ///////////////////////////////////////////////////////////
     SIGN32 SCL1D_YC_FRC_drvrd(SIE_SCL1D_YC_FRC *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SCL1D_YC_FRC_drvwr(SIE_SCL1D_YC_FRC *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SCL1D_YC_FRC_reset(SIE_SCL1D_YC_FRC *p);
     SIGN32 SCL1D_YC_FRC_cmp  (SIE_SCL1D_YC_FRC *p, SIE_SCL1D_YC_FRC *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SCL1D_YC_FRC_check(p,pie,pfx,hLOG) SCL1D_YC_FRC_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SCL1D_YC_FRC_print(p,    pfx,hLOG) SCL1D_YC_FRC_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SCL1D_YC_FRC
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SCL1D_YC_HSQ            biu              (4,4)
///     ###
///     * Register specification of interface 1D SCL HSQ MODE
///     * Defines the size of the adpscl
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 1  hsq_mode                  0x0
///                                    ###
///                                    * Hscale Status Query Mode.
///                                    * If hsq_mode=1, hscale computes and provides requested values at horizontal indicies hsq_indx_0/1/2/3 onto their respecitve status registers.
///                                    * Must be 0 for normal scaler operations.
///                                    * If hsq_mode=1, downstream's request to the scaler is ignored. And Upstream should not provide any data to scaler.
///                                    * Related fields: hsq_indx_*, hsq_frph_*, hsq_cidx_*, hsq_done.
///                                    * Refer separate Guideline doc for hsq_mode.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00004 CFG1                 (P)
///               %unsigned 13 hsq_indx_0                0x0
///                                    ###
///                                    * If hsq_mode=1, for this index value, HW provides center index value and fractional next phase increment value in status registers and then asserts hsq_done flag.
///                                    ###
///               %unsigned 3  rsv0                      0x0
///                                    ###
///                                    * Reserve bits.
///                                    ###
///               %unsigned 13 hsq_indx_1                0x0
///                                    ###
///                                    * If hsq_mode=1, for this index value, HW provides center index value and fractional next phase increment value in status registers and then asserts hsq_done flag.
///                                    ###
///               %unsigned 3  rsv1                      0x0
///                                    ###
///                                    * Reserve bits.
///                                    ###
///     @ 0x00008 CFG2                 (P)
///               %unsigned 13 hsq_indx_2                0x0
///                                    ###
///                                    * If hsq_mode=1, for this index value, HW provides center index value and fractional next phase increment value in status registers and then asserts hsq_done flag.
///                                    ###
///               %unsigned 3  rsv2                      0x0
///                                    ###
///                                    * Reserve bits.
///                                    ###
///               %unsigned 13 hsq_indx_3                0x0
///                                    ###
///                                    * Reserve bits.
///                                    ###
///               %unsigned 3  rsv3                      0x0
///                                    ###
///                                    * Reserve bits.
///                                    ###
///     @ 0x0000C CFG3                 (R-)
///               %unsigned 1  hsq_done                  0x0
///                                    ###
///                                    * =0 (clears) when scaler receives frst=1 pulse.
///                                    * =1 (if hsq_mode=1) level signal indicates that the status values for the locations as pointed by the hsq_ind_0/1/2/3 are available at the respective hsq_frph_0/1/2/3 and hsq_cidx_0/1/2/3 register fields. Generally asserted within 1scaler line duration after frst.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00010 CFG4                 (R-)
///               %unsigned 20 hsq_frph_0                0x0
///                                    ###
///                                    * If hsq_mode=1, fractional next phase increment value at output pixel index = hsq_indx_0.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00014 CFG5                 (R-)
///               %unsigned 20 hsq_frph_1                0x0
///                                    ###
///                                    * If hsq_mode=1, fractional next phase increment value at output pixel index = hsq_indx_1.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00018 CFG6                 (R-)
///               %unsigned 20 hsq_frph_2                0x0
///                                    ###
///                                    * If hsq_mode=1, fractional next phase increment value at output pixel index = hsq_indx_2.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x0001C CFG7                 (R-)
///               %unsigned 20 hsq_frph_3                0x0
///                                    ###
///                                    * If hsq_mode=1, fractional next phase increment value at output pixel index = hsq_indx_3.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00020 CFG8                 (R-)
///               %unsigned 13 hsq_cidx_0                0x0
///                                    ###
///                                    * If hsq_mode=1, center index value for output pixel index=hsq_indx_0.
///                                    ###
///               %%        19         # Stuffing bits...
///     @ 0x00024 CFG9                 (R-)
///               %unsigned 13 hsq_cidx_1                0x0
///                                    ###
///                                    * If hsq_mode=1, center index value for output pixel index=hsq_indx_1.
///                                    ###
///               %%        19         # Stuffing bits...
///     @ 0x00028 CFG10                (R-)
///               %unsigned 13 hsq_cidx_2                0x0
///                                    ###
///                                    * If hsq_mode=1, center index value for output pixel index=hsq_indx_2.
///                                    ###
///               %%        19         # Stuffing bits...
///     @ 0x0002C CFG11                (R-)
///               %unsigned 13 hsq_cidx_3                0x0
///                                    ###
///                                    * If hsq_mode=1, center index value for output pixel index=hsq_indx_3.
///                                    * End of scl1d_y c nregister group
///                                    ###
///               %%        19         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      48B, bits:     198b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SCL1D_YC_HSQ
#define h_SCL1D_YC_HSQ (){}

    #define     RA_SCL1D_YC_HSQ_CFG0                           0x0000

    #define     BA_SCL1D_YC_HSQ_CFG0_hsq_mode                  0x0000
    #define     B16SCL1D_YC_HSQ_CFG0_hsq_mode                  0x0000
    #define   LSb32SCL1D_YC_HSQ_CFG0_hsq_mode                     0
    #define   LSb16SCL1D_YC_HSQ_CFG0_hsq_mode                     0
    #define       bSCL1D_YC_HSQ_CFG0_hsq_mode                  1
    #define   MSK32SCL1D_YC_HSQ_CFG0_hsq_mode                     0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG1                           0x0004

    #define     BA_SCL1D_YC_HSQ_CFG1_hsq_indx_0                0x0004
    #define     B16SCL1D_YC_HSQ_CFG1_hsq_indx_0                0x0004
    #define   LSb32SCL1D_YC_HSQ_CFG1_hsq_indx_0                   0
    #define   LSb16SCL1D_YC_HSQ_CFG1_hsq_indx_0                   0
    #define       bSCL1D_YC_HSQ_CFG1_hsq_indx_0                13
    #define   MSK32SCL1D_YC_HSQ_CFG1_hsq_indx_0                   0x00001FFF

    #define     BA_SCL1D_YC_HSQ_CFG1_rsv0                      0x0005
    #define     B16SCL1D_YC_HSQ_CFG1_rsv0                      0x0004
    #define   LSb32SCL1D_YC_HSQ_CFG1_rsv0                         13
    #define   LSb16SCL1D_YC_HSQ_CFG1_rsv0                         13
    #define       bSCL1D_YC_HSQ_CFG1_rsv0                      3
    #define   MSK32SCL1D_YC_HSQ_CFG1_rsv0                         0x0000E000

    #define     BA_SCL1D_YC_HSQ_CFG1_hsq_indx_1                0x0006
    #define     B16SCL1D_YC_HSQ_CFG1_hsq_indx_1                0x0006
    #define   LSb32SCL1D_YC_HSQ_CFG1_hsq_indx_1                   16
    #define   LSb16SCL1D_YC_HSQ_CFG1_hsq_indx_1                   0
    #define       bSCL1D_YC_HSQ_CFG1_hsq_indx_1                13
    #define   MSK32SCL1D_YC_HSQ_CFG1_hsq_indx_1                   0x1FFF0000

    #define     BA_SCL1D_YC_HSQ_CFG1_rsv1                      0x0007
    #define     B16SCL1D_YC_HSQ_CFG1_rsv1                      0x0006
    #define   LSb32SCL1D_YC_HSQ_CFG1_rsv1                         29
    #define   LSb16SCL1D_YC_HSQ_CFG1_rsv1                         13
    #define       bSCL1D_YC_HSQ_CFG1_rsv1                      3
    #define   MSK32SCL1D_YC_HSQ_CFG1_rsv1                         0xE0000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG2                           0x0008

    #define     BA_SCL1D_YC_HSQ_CFG2_hsq_indx_2                0x0008
    #define     B16SCL1D_YC_HSQ_CFG2_hsq_indx_2                0x0008
    #define   LSb32SCL1D_YC_HSQ_CFG2_hsq_indx_2                   0
    #define   LSb16SCL1D_YC_HSQ_CFG2_hsq_indx_2                   0
    #define       bSCL1D_YC_HSQ_CFG2_hsq_indx_2                13
    #define   MSK32SCL1D_YC_HSQ_CFG2_hsq_indx_2                   0x00001FFF

    #define     BA_SCL1D_YC_HSQ_CFG2_rsv2                      0x0009
    #define     B16SCL1D_YC_HSQ_CFG2_rsv2                      0x0008
    #define   LSb32SCL1D_YC_HSQ_CFG2_rsv2                         13
    #define   LSb16SCL1D_YC_HSQ_CFG2_rsv2                         13
    #define       bSCL1D_YC_HSQ_CFG2_rsv2                      3
    #define   MSK32SCL1D_YC_HSQ_CFG2_rsv2                         0x0000E000

    #define     BA_SCL1D_YC_HSQ_CFG2_hsq_indx_3                0x000A
    #define     B16SCL1D_YC_HSQ_CFG2_hsq_indx_3                0x000A
    #define   LSb32SCL1D_YC_HSQ_CFG2_hsq_indx_3                   16
    #define   LSb16SCL1D_YC_HSQ_CFG2_hsq_indx_3                   0
    #define       bSCL1D_YC_HSQ_CFG2_hsq_indx_3                13
    #define   MSK32SCL1D_YC_HSQ_CFG2_hsq_indx_3                   0x1FFF0000

    #define     BA_SCL1D_YC_HSQ_CFG2_rsv3                      0x000B
    #define     B16SCL1D_YC_HSQ_CFG2_rsv3                      0x000A
    #define   LSb32SCL1D_YC_HSQ_CFG2_rsv3                         29
    #define   LSb16SCL1D_YC_HSQ_CFG2_rsv3                         13
    #define       bSCL1D_YC_HSQ_CFG2_rsv3                      3
    #define   MSK32SCL1D_YC_HSQ_CFG2_rsv3                         0xE0000000
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG3                           0x000C

    #define     BA_SCL1D_YC_HSQ_CFG3_hsq_done                  0x000C
    #define     B16SCL1D_YC_HSQ_CFG3_hsq_done                  0x000C
    #define   LSb32SCL1D_YC_HSQ_CFG3_hsq_done                     0
    #define   LSb16SCL1D_YC_HSQ_CFG3_hsq_done                     0
    #define       bSCL1D_YC_HSQ_CFG3_hsq_done                  1
    #define   MSK32SCL1D_YC_HSQ_CFG3_hsq_done                     0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG4                           0x0010

    #define     BA_SCL1D_YC_HSQ_CFG4_hsq_frph_0                0x0010
    #define     B16SCL1D_YC_HSQ_CFG4_hsq_frph_0                0x0010
    #define   LSb32SCL1D_YC_HSQ_CFG4_hsq_frph_0                   0
    #define   LSb16SCL1D_YC_HSQ_CFG4_hsq_frph_0                   0
    #define       bSCL1D_YC_HSQ_CFG4_hsq_frph_0                20
    #define   MSK32SCL1D_YC_HSQ_CFG4_hsq_frph_0                   0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG5                           0x0014

    #define     BA_SCL1D_YC_HSQ_CFG5_hsq_frph_1                0x0014
    #define     B16SCL1D_YC_HSQ_CFG5_hsq_frph_1                0x0014
    #define   LSb32SCL1D_YC_HSQ_CFG5_hsq_frph_1                   0
    #define   LSb16SCL1D_YC_HSQ_CFG5_hsq_frph_1                   0
    #define       bSCL1D_YC_HSQ_CFG5_hsq_frph_1                20
    #define   MSK32SCL1D_YC_HSQ_CFG5_hsq_frph_1                   0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG6                           0x0018

    #define     BA_SCL1D_YC_HSQ_CFG6_hsq_frph_2                0x0018
    #define     B16SCL1D_YC_HSQ_CFG6_hsq_frph_2                0x0018
    #define   LSb32SCL1D_YC_HSQ_CFG6_hsq_frph_2                   0
    #define   LSb16SCL1D_YC_HSQ_CFG6_hsq_frph_2                   0
    #define       bSCL1D_YC_HSQ_CFG6_hsq_frph_2                20
    #define   MSK32SCL1D_YC_HSQ_CFG6_hsq_frph_2                   0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG7                           0x001C

    #define     BA_SCL1D_YC_HSQ_CFG7_hsq_frph_3                0x001C
    #define     B16SCL1D_YC_HSQ_CFG7_hsq_frph_3                0x001C
    #define   LSb32SCL1D_YC_HSQ_CFG7_hsq_frph_3                   0
    #define   LSb16SCL1D_YC_HSQ_CFG7_hsq_frph_3                   0
    #define       bSCL1D_YC_HSQ_CFG7_hsq_frph_3                20
    #define   MSK32SCL1D_YC_HSQ_CFG7_hsq_frph_3                   0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG8                           0x0020

    #define     BA_SCL1D_YC_HSQ_CFG8_hsq_cidx_0                0x0020
    #define     B16SCL1D_YC_HSQ_CFG8_hsq_cidx_0                0x0020
    #define   LSb32SCL1D_YC_HSQ_CFG8_hsq_cidx_0                   0
    #define   LSb16SCL1D_YC_HSQ_CFG8_hsq_cidx_0                   0
    #define       bSCL1D_YC_HSQ_CFG8_hsq_cidx_0                13
    #define   MSK32SCL1D_YC_HSQ_CFG8_hsq_cidx_0                   0x00001FFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG9                           0x0024

    #define     BA_SCL1D_YC_HSQ_CFG9_hsq_cidx_1                0x0024
    #define     B16SCL1D_YC_HSQ_CFG9_hsq_cidx_1                0x0024
    #define   LSb32SCL1D_YC_HSQ_CFG9_hsq_cidx_1                   0
    #define   LSb16SCL1D_YC_HSQ_CFG9_hsq_cidx_1                   0
    #define       bSCL1D_YC_HSQ_CFG9_hsq_cidx_1                13
    #define   MSK32SCL1D_YC_HSQ_CFG9_hsq_cidx_1                   0x00001FFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG10                          0x0028

    #define     BA_SCL1D_YC_HSQ_CFG10_hsq_cidx_2               0x0028
    #define     B16SCL1D_YC_HSQ_CFG10_hsq_cidx_2               0x0028
    #define   LSb32SCL1D_YC_HSQ_CFG10_hsq_cidx_2                  0
    #define   LSb16SCL1D_YC_HSQ_CFG10_hsq_cidx_2                  0
    #define       bSCL1D_YC_HSQ_CFG10_hsq_cidx_2               13
    #define   MSK32SCL1D_YC_HSQ_CFG10_hsq_cidx_2                  0x00001FFF
    ///////////////////////////////////////////////////////////
    #define     RA_SCL1D_YC_HSQ_CFG11                          0x002C

    #define     BA_SCL1D_YC_HSQ_CFG11_hsq_cidx_3               0x002C
    #define     B16SCL1D_YC_HSQ_CFG11_hsq_cidx_3               0x002C
    #define   LSb32SCL1D_YC_HSQ_CFG11_hsq_cidx_3                  0
    #define   LSb16SCL1D_YC_HSQ_CFG11_hsq_cidx_3                  0
    #define       bSCL1D_YC_HSQ_CFG11_hsq_cidx_3               13
    #define   MSK32SCL1D_YC_HSQ_CFG11_hsq_cidx_3                  0x00001FFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SCL1D_YC_HSQ {
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG0_hsq_mode(r32)             _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_HSQ_CFG0_hsq_mode(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG0_hsq_mode(r16)             _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_HSQ_CFG0_hsq_mode(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG0                           {\
            UNSG32 uCFG0_hsq_mode                              :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG0;
            struct w32SCL1D_YC_HSQ_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG1_hsq_indx_0(r32)           _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_HSQ_CFG1_hsq_indx_0(r32,v)         _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG1_hsq_indx_0(r16)           _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG1_hsq_indx_0(r16,v)         _BFSET_(r16,12, 0,v)

    #define   GET32SCL1D_YC_HSQ_CFG1_rsv0(r32)                 _BFGET_(r32,15,13)
    #define   SET32SCL1D_YC_HSQ_CFG1_rsv0(r32,v)               _BFSET_(r32,15,13,v)
    #define   GET16SCL1D_YC_HSQ_CFG1_rsv0(r16)                 _BFGET_(r16,15,13)
    #define   SET16SCL1D_YC_HSQ_CFG1_rsv0(r16,v)               _BFSET_(r16,15,13,v)

    #define   GET32SCL1D_YC_HSQ_CFG1_hsq_indx_1(r32)           _BFGET_(r32,28,16)
    #define   SET32SCL1D_YC_HSQ_CFG1_hsq_indx_1(r32,v)         _BFSET_(r32,28,16,v)
    #define   GET16SCL1D_YC_HSQ_CFG1_hsq_indx_1(r16)           _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG1_hsq_indx_1(r16,v)         _BFSET_(r16,12, 0,v)

    #define   GET32SCL1D_YC_HSQ_CFG1_rsv1(r32)                 _BFGET_(r32,31,29)
    #define   SET32SCL1D_YC_HSQ_CFG1_rsv1(r32,v)               _BFSET_(r32,31,29,v)
    #define   GET16SCL1D_YC_HSQ_CFG1_rsv1(r16)                 _BFGET_(r16,15,13)
    #define   SET16SCL1D_YC_HSQ_CFG1_rsv1(r16,v)               _BFSET_(r16,15,13,v)

    #define     w32SCL1D_YC_HSQ_CFG1                           {\
            UNSG32 uCFG1_hsq_indx_0                            : 13;\
            UNSG32 uCFG1_rsv0                                  :  3;\
            UNSG32 uCFG1_hsq_indx_1                            : 13;\
            UNSG32 uCFG1_rsv1                                  :  3;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG1;
            struct w32SCL1D_YC_HSQ_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG2_hsq_indx_2(r32)           _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_HSQ_CFG2_hsq_indx_2(r32,v)         _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG2_hsq_indx_2(r16)           _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG2_hsq_indx_2(r16,v)         _BFSET_(r16,12, 0,v)

    #define   GET32SCL1D_YC_HSQ_CFG2_rsv2(r32)                 _BFGET_(r32,15,13)
    #define   SET32SCL1D_YC_HSQ_CFG2_rsv2(r32,v)               _BFSET_(r32,15,13,v)
    #define   GET16SCL1D_YC_HSQ_CFG2_rsv2(r16)                 _BFGET_(r16,15,13)
    #define   SET16SCL1D_YC_HSQ_CFG2_rsv2(r16,v)               _BFSET_(r16,15,13,v)

    #define   GET32SCL1D_YC_HSQ_CFG2_hsq_indx_3(r32)           _BFGET_(r32,28,16)
    #define   SET32SCL1D_YC_HSQ_CFG2_hsq_indx_3(r32,v)         _BFSET_(r32,28,16,v)
    #define   GET16SCL1D_YC_HSQ_CFG2_hsq_indx_3(r16)           _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG2_hsq_indx_3(r16,v)         _BFSET_(r16,12, 0,v)

    #define   GET32SCL1D_YC_HSQ_CFG2_rsv3(r32)                 _BFGET_(r32,31,29)
    #define   SET32SCL1D_YC_HSQ_CFG2_rsv3(r32,v)               _BFSET_(r32,31,29,v)
    #define   GET16SCL1D_YC_HSQ_CFG2_rsv3(r16)                 _BFGET_(r16,15,13)
    #define   SET16SCL1D_YC_HSQ_CFG2_rsv3(r16,v)               _BFSET_(r16,15,13,v)

    #define     w32SCL1D_YC_HSQ_CFG2                           {\
            UNSG32 uCFG2_hsq_indx_2                            : 13;\
            UNSG32 uCFG2_rsv2                                  :  3;\
            UNSG32 uCFG2_hsq_indx_3                            : 13;\
            UNSG32 uCFG2_rsv3                                  :  3;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG2;
            struct w32SCL1D_YC_HSQ_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG3_hsq_done(r32)             _BFGET_(r32, 0, 0)
    #define   SET32SCL1D_YC_HSQ_CFG3_hsq_done(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG3_hsq_done(r16)             _BFGET_(r16, 0, 0)
    #define   SET16SCL1D_YC_HSQ_CFG3_hsq_done(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG3                           {\
            UNSG32 uCFG3_hsq_done                              :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG3;
            struct w32SCL1D_YC_HSQ_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG4_hsq_frph_0(r32)           _BFGET_(r32,19, 0)
    #define   SET32SCL1D_YC_HSQ_CFG4_hsq_frph_0(r32,v)         _BFSET_(r32,19, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG4                           {\
            UNSG32 uCFG4_hsq_frph_0                            : 20;\
            UNSG32 RSVDx10_b20                                 : 12;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG4;
            struct w32SCL1D_YC_HSQ_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG5_hsq_frph_1(r32)           _BFGET_(r32,19, 0)
    #define   SET32SCL1D_YC_HSQ_CFG5_hsq_frph_1(r32,v)         _BFSET_(r32,19, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG5                           {\
            UNSG32 uCFG5_hsq_frph_1                            : 20;\
            UNSG32 RSVDx14_b20                                 : 12;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG5;
            struct w32SCL1D_YC_HSQ_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG6_hsq_frph_2(r32)           _BFGET_(r32,19, 0)
    #define   SET32SCL1D_YC_HSQ_CFG6_hsq_frph_2(r32,v)         _BFSET_(r32,19, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG6                           {\
            UNSG32 uCFG6_hsq_frph_2                            : 20;\
            UNSG32 RSVDx18_b20                                 : 12;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG6;
            struct w32SCL1D_YC_HSQ_CFG6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG7_hsq_frph_3(r32)           _BFGET_(r32,19, 0)
    #define   SET32SCL1D_YC_HSQ_CFG7_hsq_frph_3(r32,v)         _BFSET_(r32,19, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG7                           {\
            UNSG32 uCFG7_hsq_frph_3                            : 20;\
            UNSG32 RSVDx1C_b20                                 : 12;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG7;
            struct w32SCL1D_YC_HSQ_CFG7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG8_hsq_cidx_0(r32)           _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_HSQ_CFG8_hsq_cidx_0(r32,v)         _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG8_hsq_cidx_0(r16)           _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG8_hsq_cidx_0(r16,v)         _BFSET_(r16,12, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG8                           {\
            UNSG32 uCFG8_hsq_cidx_0                            : 13;\
            UNSG32 RSVDx20_b13                                 : 19;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG8;
            struct w32SCL1D_YC_HSQ_CFG8;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG9_hsq_cidx_1(r32)           _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_HSQ_CFG9_hsq_cidx_1(r32,v)         _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG9_hsq_cidx_1(r16)           _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG9_hsq_cidx_1(r16,v)         _BFSET_(r16,12, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG9                           {\
            UNSG32 uCFG9_hsq_cidx_1                            : 13;\
            UNSG32 RSVDx24_b13                                 : 19;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG9;
            struct w32SCL1D_YC_HSQ_CFG9;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG10_hsq_cidx_2(r32)          _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_HSQ_CFG10_hsq_cidx_2(r32,v)        _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG10_hsq_cidx_2(r16)          _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG10_hsq_cidx_2(r16,v)        _BFSET_(r16,12, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG10                          {\
            UNSG32 uCFG10_hsq_cidx_2                           : 13;\
            UNSG32 RSVDx28_b13                                 : 19;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG10;
            struct w32SCL1D_YC_HSQ_CFG10;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SCL1D_YC_HSQ_CFG11_hsq_cidx_3(r32)          _BFGET_(r32,12, 0)
    #define   SET32SCL1D_YC_HSQ_CFG11_hsq_cidx_3(r32,v)        _BFSET_(r32,12, 0,v)
    #define   GET16SCL1D_YC_HSQ_CFG11_hsq_cidx_3(r16)          _BFGET_(r16,12, 0)
    #define   SET16SCL1D_YC_HSQ_CFG11_hsq_cidx_3(r16,v)        _BFSET_(r16,12, 0,v)

    #define     w32SCL1D_YC_HSQ_CFG11                          {\
            UNSG32 uCFG11_hsq_cidx_3                           : 13;\
            UNSG32 RSVDx2C_b13                                 : 19;\
          }
    union { UNSG32 u32SCL1D_YC_HSQ_CFG11;
            struct w32SCL1D_YC_HSQ_CFG11;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SCL1D_YC_HSQ;

    typedef union  T32SCL1D_YC_HSQ_CFG0
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG0;
                 } T32SCL1D_YC_HSQ_CFG0;
    typedef union  T32SCL1D_YC_HSQ_CFG1
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG1;
                 } T32SCL1D_YC_HSQ_CFG1;
    typedef union  T32SCL1D_YC_HSQ_CFG2
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG2;
                 } T32SCL1D_YC_HSQ_CFG2;
    typedef union  T32SCL1D_YC_HSQ_CFG3
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG3;
                 } T32SCL1D_YC_HSQ_CFG3;
    typedef union  T32SCL1D_YC_HSQ_CFG4
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG4;
                 } T32SCL1D_YC_HSQ_CFG4;
    typedef union  T32SCL1D_YC_HSQ_CFG5
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG5;
                 } T32SCL1D_YC_HSQ_CFG5;
    typedef union  T32SCL1D_YC_HSQ_CFG6
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG6;
                 } T32SCL1D_YC_HSQ_CFG6;
    typedef union  T32SCL1D_YC_HSQ_CFG7
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG7;
                 } T32SCL1D_YC_HSQ_CFG7;
    typedef union  T32SCL1D_YC_HSQ_CFG8
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG8;
                 } T32SCL1D_YC_HSQ_CFG8;
    typedef union  T32SCL1D_YC_HSQ_CFG9
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG9;
                 } T32SCL1D_YC_HSQ_CFG9;
    typedef union  T32SCL1D_YC_HSQ_CFG10
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG10;
                 } T32SCL1D_YC_HSQ_CFG10;
    typedef union  T32SCL1D_YC_HSQ_CFG11
          { UNSG32 u32;
            struct w32SCL1D_YC_HSQ_CFG11;
                 } T32SCL1D_YC_HSQ_CFG11;
    ///////////////////////////////////////////////////////////

    typedef union  TSCL1D_YC_HSQ_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG0;
                   };
                 } TSCL1D_YC_HSQ_CFG0;
    typedef union  TSCL1D_YC_HSQ_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG1;
                   };
                 } TSCL1D_YC_HSQ_CFG1;
    typedef union  TSCL1D_YC_HSQ_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG2;
                   };
                 } TSCL1D_YC_HSQ_CFG2;
    typedef union  TSCL1D_YC_HSQ_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG3;
                   };
                 } TSCL1D_YC_HSQ_CFG3;
    typedef union  TSCL1D_YC_HSQ_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG4;
                   };
                 } TSCL1D_YC_HSQ_CFG4;
    typedef union  TSCL1D_YC_HSQ_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG5;
                   };
                 } TSCL1D_YC_HSQ_CFG5;
    typedef union  TSCL1D_YC_HSQ_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG6;
                   };
                 } TSCL1D_YC_HSQ_CFG6;
    typedef union  TSCL1D_YC_HSQ_CFG7
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG7;
                   };
                 } TSCL1D_YC_HSQ_CFG7;
    typedef union  TSCL1D_YC_HSQ_CFG8
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG8;
                   };
                 } TSCL1D_YC_HSQ_CFG8;
    typedef union  TSCL1D_YC_HSQ_CFG9
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG9;
                   };
                 } TSCL1D_YC_HSQ_CFG9;
    typedef union  TSCL1D_YC_HSQ_CFG10
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG10;
                   };
                 } TSCL1D_YC_HSQ_CFG10;
    typedef union  TSCL1D_YC_HSQ_CFG11
          { UNSG32 u32[1];
            struct {
            struct w32SCL1D_YC_HSQ_CFG11;
                   };
                 } TSCL1D_YC_HSQ_CFG11;

    ///////////////////////////////////////////////////////////
     SIGN32 SCL1D_YC_HSQ_drvrd(SIE_SCL1D_YC_HSQ *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SCL1D_YC_HSQ_drvwr(SIE_SCL1D_YC_HSQ *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SCL1D_YC_HSQ_reset(SIE_SCL1D_YC_HSQ *p);
     SIGN32 SCL1D_YC_HSQ_cmp  (SIE_SCL1D_YC_HSQ *p, SIE_SCL1D_YC_HSQ *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SCL1D_YC_HSQ_check(p,pie,pfx,hLOG) SCL1D_YC_HSQ_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SCL1D_YC_HSQ_print(p,    pfx,hLOG) SCL1D_YC_HSQ_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SCL1D_YC_HSQ
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE OVPSCL                  biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL                 (P)
///               %unsigned 1  SCL_CLKEN_CTRL            0x0
///                                    ###
///                                    * 0: Clock enable to scaler depends on the input FIFO status; scaler clken is deasserted when FE can't supply data to scaler.
///                                    * 1: Clock enable to scaler is always high.
///                                    * Since AUX scaler input always comes from CPCB0 – its clock enable should be 1 whenever it is being used.
///                                    ###
///               %unsigned 1  sb_clkg_en                0x1
///                                    ###
///                                    * Clock gating enable for separate clock to 1D SCL (except LUT logic). Default enabled. Write 0 to clock gate logic except LUT logic.
///                                    ###
///               %unsigned 1  cfg_rst                   0x0
///                                    ###
///                                    * Configurable soft reset for Scalar1D
///                                    ###
///               %unsigned 1  scl1d_sw_rst              0x0
///                                    ###
///                                    * Scalar1D software controlled reset. Write 1 to reset   scalar-1D
///                                    ###
///               %unsigned 1  scl_rst_en0               0x1
///                                    ###
///                                    * Scalar1D will get reset on scalar start
///                                    * Disable this bit for not-resetting Scalar-1D on scalar start.
///                                    ###
///               %unsigned 1  scl_rst_en1               0x1
///                                    ###
///                                    * Enable this bit to soft-reset adaptive scalar. Software will have control to soft-reset scalar during VBI
///                                    ###
///               %unsigned 1  scl_rst_en2               0x1
///                                    ###
///                                    * Enable this bit to soft-reset adaptive scalar. Software will have control to soft-reset scalar during VBI
///                                    ###
///               %unsigned 1  scl1d_YC_bypass           0x0
///                                    ###
///                                    * 1- Enables 1D-SCL YC bypass
///                                    * 0- Disables 1D-SCL YC bypass
///                                    ###
///               %unsigned 1  dither_bypass             0x0
///                                    ###
///                                    * DITHER hard-bypass. Write 1 to bypass dither IP
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x00004 scl1d_Inpix          (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of SCL1D-InFIFO. It should be programmed with (ivres*ihres).
///                                    ###
///     @ 0x00008 scl1d_Outpix         (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of SCL1D-Output FIFO. It should be programmed with (ovres*ohres) of Scalar
///                                    ###
///     @ 0x0000C                      (P)
///     # 0x0000C SCL1D_YC             
///               $SCL1D_YC            SCL1D_YC          REG          
///                                    ###
///                                    * 1D -Scalar registers
///                                    ###
///     @ 0x00068                      (P)
///     # 0x00068 SCL1D_YC_COEFF       
///               $SCL1D_YC_COEFF      SCL1D_YC_COEFF    REG          
///                                    ###
///                                    * COEFF related registers.
///                                    ###
///     @ 0x0007C                      (P)
///     # 0x0007C SCL1D_YC_FRC         
///               $SCL1D_YC_FRC        SCL1D_YC_FRC      REG          
///                                    ###
///                                    * FRC related registers.
///                                    ###
///     @ 0x00098                      (P)
///     # 0x00098 DITHER               
///               $DITHER              DITHER            REG          
///                                    ###
///                                    * DITHER IP registers in OVP SCL Pipe path.
///                                    * End of OVPSCL definition.
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     156B, bits:     958b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_OVPSCL
#define h_OVPSCL (){}

    #define     RA_OVPSCL_CTRL                                 0x0000

    #define     BA_OVPSCL_CTRL_SCL_CLKEN_CTRL                  0x0000
    #define     B16OVPSCL_CTRL_SCL_CLKEN_CTRL                  0x0000
    #define   LSb32OVPSCL_CTRL_SCL_CLKEN_CTRL                     0
    #define   LSb16OVPSCL_CTRL_SCL_CLKEN_CTRL                     0
    #define       bOVPSCL_CTRL_SCL_CLKEN_CTRL                  1
    #define   MSK32OVPSCL_CTRL_SCL_CLKEN_CTRL                     0x00000001

    #define     BA_OVPSCL_CTRL_sb_clkg_en                      0x0000
    #define     B16OVPSCL_CTRL_sb_clkg_en                      0x0000
    #define   LSb32OVPSCL_CTRL_sb_clkg_en                         1
    #define   LSb16OVPSCL_CTRL_sb_clkg_en                         1
    #define       bOVPSCL_CTRL_sb_clkg_en                      1
    #define   MSK32OVPSCL_CTRL_sb_clkg_en                         0x00000002

    #define     BA_OVPSCL_CTRL_cfg_rst                         0x0000
    #define     B16OVPSCL_CTRL_cfg_rst                         0x0000
    #define   LSb32OVPSCL_CTRL_cfg_rst                            2
    #define   LSb16OVPSCL_CTRL_cfg_rst                            2
    #define       bOVPSCL_CTRL_cfg_rst                         1
    #define   MSK32OVPSCL_CTRL_cfg_rst                            0x00000004

    #define     BA_OVPSCL_CTRL_scl1d_sw_rst                    0x0000
    #define     B16OVPSCL_CTRL_scl1d_sw_rst                    0x0000
    #define   LSb32OVPSCL_CTRL_scl1d_sw_rst                       3
    #define   LSb16OVPSCL_CTRL_scl1d_sw_rst                       3
    #define       bOVPSCL_CTRL_scl1d_sw_rst                    1
    #define   MSK32OVPSCL_CTRL_scl1d_sw_rst                       0x00000008

    #define     BA_OVPSCL_CTRL_scl_rst_en0                     0x0000
    #define     B16OVPSCL_CTRL_scl_rst_en0                     0x0000
    #define   LSb32OVPSCL_CTRL_scl_rst_en0                        4
    #define   LSb16OVPSCL_CTRL_scl_rst_en0                        4
    #define       bOVPSCL_CTRL_scl_rst_en0                     1
    #define   MSK32OVPSCL_CTRL_scl_rst_en0                        0x00000010

    #define     BA_OVPSCL_CTRL_scl_rst_en1                     0x0000
    #define     B16OVPSCL_CTRL_scl_rst_en1                     0x0000
    #define   LSb32OVPSCL_CTRL_scl_rst_en1                        5
    #define   LSb16OVPSCL_CTRL_scl_rst_en1                        5
    #define       bOVPSCL_CTRL_scl_rst_en1                     1
    #define   MSK32OVPSCL_CTRL_scl_rst_en1                        0x00000020

    #define     BA_OVPSCL_CTRL_scl_rst_en2                     0x0000
    #define     B16OVPSCL_CTRL_scl_rst_en2                     0x0000
    #define   LSb32OVPSCL_CTRL_scl_rst_en2                        6
    #define   LSb16OVPSCL_CTRL_scl_rst_en2                        6
    #define       bOVPSCL_CTRL_scl_rst_en2                     1
    #define   MSK32OVPSCL_CTRL_scl_rst_en2                        0x00000040

    #define     BA_OVPSCL_CTRL_scl1d_YC_bypass                 0x0000
    #define     B16OVPSCL_CTRL_scl1d_YC_bypass                 0x0000
    #define   LSb32OVPSCL_CTRL_scl1d_YC_bypass                    7
    #define   LSb16OVPSCL_CTRL_scl1d_YC_bypass                    7
    #define       bOVPSCL_CTRL_scl1d_YC_bypass                 1
    #define   MSK32OVPSCL_CTRL_scl1d_YC_bypass                    0x00000080

    #define     BA_OVPSCL_CTRL_dither_bypass                   0x0001
    #define     B16OVPSCL_CTRL_dither_bypass                   0x0000
    #define   LSb32OVPSCL_CTRL_dither_bypass                      8
    #define   LSb16OVPSCL_CTRL_dither_bypass                      8
    #define       bOVPSCL_CTRL_dither_bypass                   1
    #define   MSK32OVPSCL_CTRL_dither_bypass                      0x00000100
    ///////////////////////////////////////////////////////////
    #define     RA_OVPSCL_scl1d_Inpix                          0x0004

    #define     BA_OVPSCL_scl1d_Inpix_tot                      0x0004
    #define     B16OVPSCL_scl1d_Inpix_tot                      0x0004
    #define   LSb32OVPSCL_scl1d_Inpix_tot                         0
    #define   LSb16OVPSCL_scl1d_Inpix_tot                         0
    #define       bOVPSCL_scl1d_Inpix_tot                      32
    #define   MSK32OVPSCL_scl1d_Inpix_tot                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_OVPSCL_scl1d_Outpix                         0x0008

    #define     BA_OVPSCL_scl1d_Outpix_tot                     0x0008
    #define     B16OVPSCL_scl1d_Outpix_tot                     0x0008
    #define   LSb32OVPSCL_scl1d_Outpix_tot                        0
    #define   LSb16OVPSCL_scl1d_Outpix_tot                        0
    #define       bOVPSCL_scl1d_Outpix_tot                     32
    #define   MSK32OVPSCL_scl1d_Outpix_tot                        0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_OVPSCL_SCL1D_YC                             0x000C
    ///////////////////////////////////////////////////////////
    #define     RA_OVPSCL_SCL1D_YC_COEFF                       0x0068
    ///////////////////////////////////////////////////////////
    #define     RA_OVPSCL_SCL1D_YC_FRC                         0x007C
    ///////////////////////////////////////////////////////////
    #define     RA_OVPSCL_DITHER                               0x0098
    ///////////////////////////////////////////////////////////

    typedef struct SIE_OVPSCL {
    ///////////////////////////////////////////////////////////
    #define   GET32OVPSCL_CTRL_SCL_CLKEN_CTRL(r32)             _BFGET_(r32, 0, 0)
    #define   SET32OVPSCL_CTRL_SCL_CLKEN_CTRL(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16OVPSCL_CTRL_SCL_CLKEN_CTRL(r16)             _BFGET_(r16, 0, 0)
    #define   SET16OVPSCL_CTRL_SCL_CLKEN_CTRL(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32OVPSCL_CTRL_sb_clkg_en(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32OVPSCL_CTRL_sb_clkg_en(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16OVPSCL_CTRL_sb_clkg_en(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16OVPSCL_CTRL_sb_clkg_en(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32OVPSCL_CTRL_cfg_rst(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32OVPSCL_CTRL_cfg_rst(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16OVPSCL_CTRL_cfg_rst(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16OVPSCL_CTRL_cfg_rst(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32OVPSCL_CTRL_scl1d_sw_rst(r32)               _BFGET_(r32, 3, 3)
    #define   SET32OVPSCL_CTRL_scl1d_sw_rst(r32,v)             _BFSET_(r32, 3, 3,v)
    #define   GET16OVPSCL_CTRL_scl1d_sw_rst(r16)               _BFGET_(r16, 3, 3)
    #define   SET16OVPSCL_CTRL_scl1d_sw_rst(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32OVPSCL_CTRL_scl_rst_en0(r32)                _BFGET_(r32, 4, 4)
    #define   SET32OVPSCL_CTRL_scl_rst_en0(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16OVPSCL_CTRL_scl_rst_en0(r16)                _BFGET_(r16, 4, 4)
    #define   SET16OVPSCL_CTRL_scl_rst_en0(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32OVPSCL_CTRL_scl_rst_en1(r32)                _BFGET_(r32, 5, 5)
    #define   SET32OVPSCL_CTRL_scl_rst_en1(r32,v)              _BFSET_(r32, 5, 5,v)
    #define   GET16OVPSCL_CTRL_scl_rst_en1(r16)                _BFGET_(r16, 5, 5)
    #define   SET16OVPSCL_CTRL_scl_rst_en1(r16,v)              _BFSET_(r16, 5, 5,v)

    #define   GET32OVPSCL_CTRL_scl_rst_en2(r32)                _BFGET_(r32, 6, 6)
    #define   SET32OVPSCL_CTRL_scl_rst_en2(r32,v)              _BFSET_(r32, 6, 6,v)
    #define   GET16OVPSCL_CTRL_scl_rst_en2(r16)                _BFGET_(r16, 6, 6)
    #define   SET16OVPSCL_CTRL_scl_rst_en2(r16,v)              _BFSET_(r16, 6, 6,v)

    #define   GET32OVPSCL_CTRL_scl1d_YC_bypass(r32)            _BFGET_(r32, 7, 7)
    #define   SET32OVPSCL_CTRL_scl1d_YC_bypass(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16OVPSCL_CTRL_scl1d_YC_bypass(r16)            _BFGET_(r16, 7, 7)
    #define   SET16OVPSCL_CTRL_scl1d_YC_bypass(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32OVPSCL_CTRL_dither_bypass(r32)              _BFGET_(r32, 8, 8)
    #define   SET32OVPSCL_CTRL_dither_bypass(r32,v)            _BFSET_(r32, 8, 8,v)
    #define   GET16OVPSCL_CTRL_dither_bypass(r16)              _BFGET_(r16, 8, 8)
    #define   SET16OVPSCL_CTRL_dither_bypass(r16,v)            _BFSET_(r16, 8, 8,v)

    #define     w32OVPSCL_CTRL                                 {\
            UNSG32 uCTRL_SCL_CLKEN_CTRL                        :  1;\
            UNSG32 uCTRL_sb_clkg_en                            :  1;\
            UNSG32 uCTRL_cfg_rst                               :  1;\
            UNSG32 uCTRL_scl1d_sw_rst                          :  1;\
            UNSG32 uCTRL_scl_rst_en0                           :  1;\
            UNSG32 uCTRL_scl_rst_en1                           :  1;\
            UNSG32 uCTRL_scl_rst_en2                           :  1;\
            UNSG32 uCTRL_scl1d_YC_bypass                       :  1;\
            UNSG32 uCTRL_dither_bypass                         :  1;\
            UNSG32 RSVDx0_b9                                   : 23;\
          }
    union { UNSG32 u32OVPSCL_CTRL;
            struct w32OVPSCL_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32OVPSCL_scl1d_Inpix_tot(r32)                 _BFGET_(r32,31, 0)
    #define   SET32OVPSCL_scl1d_Inpix_tot(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32OVPSCL_scl1d_Inpix                          {\
            UNSG32 uscl1d_Inpix_tot                            : 32;\
          }
    union { UNSG32 u32OVPSCL_scl1d_Inpix;
            struct w32OVPSCL_scl1d_Inpix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32OVPSCL_scl1d_Outpix_tot(r32)                _BFGET_(r32,31, 0)
    #define   SET32OVPSCL_scl1d_Outpix_tot(r32,v)              _BFSET_(r32,31, 0,v)

    #define     w32OVPSCL_scl1d_Outpix                         {\
            UNSG32 uscl1d_Outpix_tot                           : 32;\
          }
    union { UNSG32 u32OVPSCL_scl1d_Outpix;
            struct w32OVPSCL_scl1d_Outpix;
          };
    ///////////////////////////////////////////////////////////
              SIE_SCL1D_YC                                     ie_SCL1D_YC;
    ///////////////////////////////////////////////////////////
              SIE_SCL1D_YC_COEFF                               ie_SCL1D_YC_COEFF;
    ///////////////////////////////////////////////////////////
              SIE_SCL1D_YC_FRC                                 ie_SCL1D_YC_FRC;
    ///////////////////////////////////////////////////////////
              SIE_DITHER                                       ie_DITHER;
    ///////////////////////////////////////////////////////////
    } SIE_OVPSCL;

    typedef union  T32OVPSCL_CTRL
          { UNSG32 u32;
            struct w32OVPSCL_CTRL;
                 } T32OVPSCL_CTRL;
    typedef union  T32OVPSCL_scl1d_Inpix
          { UNSG32 u32;
            struct w32OVPSCL_scl1d_Inpix;
                 } T32OVPSCL_scl1d_Inpix;
    typedef union  T32OVPSCL_scl1d_Outpix
          { UNSG32 u32;
            struct w32OVPSCL_scl1d_Outpix;
                 } T32OVPSCL_scl1d_Outpix;
    ///////////////////////////////////////////////////////////

    typedef union  TOVPSCL_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32OVPSCL_CTRL;
                   };
                 } TOVPSCL_CTRL;
    typedef union  TOVPSCL_scl1d_Inpix
          { UNSG32 u32[1];
            struct {
            struct w32OVPSCL_scl1d_Inpix;
                   };
                 } TOVPSCL_scl1d_Inpix;
    typedef union  TOVPSCL_scl1d_Outpix
          { UNSG32 u32[1];
            struct {
            struct w32OVPSCL_scl1d_Outpix;
                   };
                 } TOVPSCL_scl1d_Outpix;

    ///////////////////////////////////////////////////////////
     SIGN32 OVPSCL_drvrd(SIE_OVPSCL *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 OVPSCL_drvwr(SIE_OVPSCL *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void OVPSCL_reset(SIE_OVPSCL *p);
     SIGN32 OVPSCL_cmp  (SIE_OVPSCL *p, SIE_OVPSCL *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define OVPSCL_check(p,pie,pfx,hLOG) OVPSCL_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define OVPSCL_print(p,    pfx,hLOG) OVPSCL_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: OVPSCL
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE VIPSCLTOP               biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL0                (P-)
///               %unsigned 1  start_scl                 0x0
///                                    ###
///                                    * Control bit to start scalar Input FIFO's.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * Control bit to clear scalar's input FIFO's. Level signal.
///                                    ###
///               %unsigned 1  Y_otg_start               0x0
///                                    ###
///                                    * Control bit to start output FIFO and output TG for luma.
///                                    ###
///               %unsigned 1  Y_otg_clear               0x0
///                                    ###
///                                    * Control bit to clear scalar output FIFO and output TG for Luma pipe. Level signal.
///                                    ###
///               %unsigned 1  UV_otg_start              0x0
///                                    ###
///                                    * Control bit to start output FIFO and output TG for chroma pipe.
///                                    ###
///               %unsigned 1  UV_otg_clear              0x0
///                                    ###
///                                    * Control bit to reset scalar output FIFO, and output TG for chroma. Level signal.
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00004 CTRL1                (P)
///               %unsigned 1  clken_ctrl0               0x1
///                                    ###
///                                    * Clock enable control for TG. Write 0 to make flow control independent of ready status from Read Client0
///                                    ###
///               %unsigned 1  clken_ctrl1               0x1
///                                    ###
///                                    * Clock enable control for TG. Write 0 to make flow control independent of ready status from Read Client1
///                                    ###
///               %unsigned 1  fifo_full_ctrlEn          0x0
///                                    ###
///                                    * tg_clken control bit to enable use of FIFO full status from 1D-SCL input FiFO in generating clock enable. Default enable. Write 1 to disable this control.
///                                    ###
///               %unsigned 1  ovpscl_bypass             0x0
///                                    ###
///                                    * [1] : OVP Scalar block Hard-Bypass
///                                    * [0] : OVP Scalar block present In the path
///                                    ###
///               %unsigned 1  ovpscl_sb_clkg_en         0x1
///                                    ###
///                                    * Clock gating enable for separate clock to 1D SCL (except LUT logic). Default enabled. Write 0 to clock gate logic except LUT logic.
///                                    ###
///               %unsigned 1  scl_clken_ctrl            0x0
///                                    ###
///                                    * 0: Clock enable to 1D-scaler depends on the input FIFO status; scalar clken is de-asserted when FE can't supply data to scalar.
///                                    * 1: Clock enable to scalar is always high.
///                                    ###
///               %unsigned 1  scl_clken_fall_bk_en      0x0
///                                    ###
///                                    * 1D-Scalar Clock Enable control : fall back option for previous logic. Write 1 for clock enable generation with previous logic.
///                                    * Default : power saving mode
///                                    ###
///               %unsigned 1  scl_rst_en0               0x1
///                                    ###
///                                    * Scalar will get reset on Read Client0 start (scalar start)
///                                    * Disable this bit for not-resetting Scalar on start.
///                                    ###
///               %unsigned 1  scl_rst_en1               0x1
///                                    ###
///                                    * Scalar will get reset on display TG frst
///                                    * Enable this bit to reset Scalar on frst
///                                    ###
///               %unsigned 1  scl_rst_en2               0x1
///                                    ###
///                                    * Enable this bit to soft-reset for scalar. Software will have control to soft-reset scalar during VBI
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x00008 CTRL2                (P)
///               %unsigned 32 inPixTot0                 0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of OVP Scalar input FIFO (luma). should be programmed with (ivres*ihres).
///                                    ###
///     @ 0x0000C CTRL3                (P)
///               %unsigned 32 inPixTot1                 0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of OVP Scalar output FIFO (croma). should be programmed with (ivres*ihres).
///                                    ###
///     @ 0x00010 CTRL4                (P)
///               %unsigned 1  cfg_rst                   0x0
///                                    ###
///                                    * Configurable soft reset Scalar
///                                    ###
///               %unsigned 1  ovpscl_clken              0x0
///                                    ###
///                                    * Clock enable control for scalar
///                                    ###
///               %unsigned 1  scl_sw_rst                0x0
///                                    ###
///                                    * Scalar software controlled reset. Write 1 to reset scalar.
///                                    ###
///               %unsigned 1  oclken_ctrl0              0x1
///                                    ###
///                                    * Clock enable control for output TG. Write 0 to make flow control independent of ready status from write Client0
///                                    ###
///               %unsigned 1  oclken_ctrl1              0x1
///                                    ###
///                                    * Clock enable control for output TG. Write 0 to make flow control independent of ready status from write Client1
///                                    ###
///               %unsigned 1  ofifo_full_ctrlEn         0x0
///                                    ###
///                                    * tg_clken control bit to enable use of output FIFO full status from output OCPF FIFO in generating clock enable. Default enable. Write 1 to disable this control.
///                                    ###
///               %unsigned 1  wrbk_ctrl420sp            0x0
///                                    ###
///                                    * Write back Control register for 420 SP.
///                                    ###
///               %unsigned 1  out8_420sp_sel            0x0
///                                    ###
///                                    * 0: select 10 bit output data
///                                    * 1: select 8 bit output data
///                                    ###
///               %unsigned 2  out_422_sel               0x0
///                                    ###
///                                    * 00: select 420 sp (Y component) data output (default)
///                                    * 01: select 8 bit 422 output data
///                                    * 10: select 10 bit output data
///                                    * 11: Invalid
///                                    ###
///               %unsigned 1  iptg_eof_intr_en          0x1
///                                    ###
///                                    * Enable Interrupt register for end of frame of input TG. default enable.
///                                    ###
///               %unsigned 1  optg_eof_intr_en          0x1
///                                    ###
///                                    * Enable Interrupt register for end of frame of output TG. default enable.
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00014 CTRL5                (P)
///               %unsigned 1  ofifo_sts0_ctrl           0x1
///                                    ###
///                                    * SCL Output FIFO full status control for luma (used for clk_en generation). Write 1 to enable fifo full status for clk_en generation.
///                                    ###
///               %unsigned 1  ofifo_sts1_ctrl           0x1
///                                    ###
///                                    * SCL Output FIFO full status control for chroma (used for clk_en generation). Write 0 to disable fifo full status for clk_en generation.
///                                    ###
///               %unsigned 1  sclOutrdy_sts0_en         0x1
///                                    ###
///                                    * 1: Take care of rdy from Write Client0 while generating clken for output Tg
///                                    * 0 : don't consider rdy from Write Client0
///                                    * Write 0 to disable ready status from write client 0 for clock enable generation
///                                    ###
///               %unsigned 1  sclOutrdy_sts1_en         0x1
///                                    ###
///                                    * 1: Take care of rdy from Write Client1 while generating clken for output Tg
///                                    * 0 : don't consider rdy from Write Client1
///                                    * Write 0 to disable ready status from write client 1 for clock enable generation
///                                    ###
///               %unsigned 2  luma_data_sel             0x0
///                                    ###
///                                    * 00: 10 bit 420SP luma support
///                                    * 01: 8 bit 420SP luma support
///                                    * 10: 10 bit 422 support
///                                    * 11: 8 bit 422 support
///                                    ###
///               %unsigned 1  chroma_data_sel           0x0
///                                    ###
///                                    * 1 : 8 bit 420SP support
///                                    * 0 : 10 bit 420SP chroma support
///                                    ###
///               %unsigned 1  hde_initval0              0x0
///                                    ###
///                                    * Initialization value for hde mask for Croma
///                                    ###
///               %unsigned 1  hde_initval1              0x1
///                                    ###
///                                    * Initialization value for hde mask for Croma
///                                    ###
///               %unsigned 2  ovpscl_ictrl_sel          0x0
///                                    ###
///                                    * [00]: Data/control from clients output
///                                    * [01]: Not used
///                                    ###
///               %unsigned 1  idata_frmt_ctrl           0x0
///                                    ###
///                                    * Input data control bit for Y and UV Pipe
///                                    * [0] : Input data is YUV420
///                                    * [1] : Input data is YUV422
///                                    ###
///               %unsigned 1  clk_en_sel                0x0
///                                    ###
///                                    * Clock enable select between BL and EL pipe. Default BL
///                                    ###
///               %unsigned 1  hde_msk_en                0x0
///                                    ###
///                                    * Hde mask enable for alternate UV input to Scalar
///                                    * Write 1 to disable masking of alternate UV to scalar
///                                    ###
///               %unsigned 1  sclOfifo_Y_stsCtrl        0x1
///                                    ###
///                                    * Scalar output FIFO full status control for luma (used for clk_en generation). Write 1 to enable fifo full status for clk_en generation.
///                                    ###
///               %unsigned 1  sclOifo_UV_stsCtrl        0x1
///                                    ###
///                                    * Scalar output FIFO full status control for UV (used for clk_en generation). Write 1 to enable fifo full status for clk_en generation.
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00018 STS0                 (R-)
///               %unsigned 16 ipOvpTg_vcnt_sts          0x0
///                                    ###
///                                    * Input OVP TG Vcount Status
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x0001C STS1                 (R-)
///               %unsigned 16 OVPSCL_Y_oTg              0x0
///                                    ###
///                                    * Vcount status for OVPSCL luma OTG
///                                    ###
///               %unsigned 16 OVPSCL_UV_oTg             0x0
///                                    ###
///                                    * Vcount status for OVPSCL chroma OTG
///                                    ###
///     @ 0x00020 INTR_EN              (P)
///               %unsigned 1  OVPSCL_Y_EOF              0x1
///                                    ###
///                                    * Enable for End of Frame interrupt from OVPSCL Pipe.
///                                    ###
///               %unsigned 1  OVPSCL_UV_EOF             0x1
///                                    ###
///                                    * Enable for End of Frame interrupt from OVPSCL Pipe.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00024                      (P)
///     # 0x00024 OVPSCL_Y             
///               $OVPSCL              OVPSCL_Y          REG          
///                                    ###
///                                    * 1D -Scalar registers for Y(luma) component.
///                                    ###
///     @ 0x000C0                      (P)
///     # 0x000C0 OVPSCL_UV            
///               $OVPSCL              OVPSCL_UV         REG          
///                                    ###
///                                    * registers for UV(chroma) component.
///                                    ###
///     @ 0x0015C                      (P)
///     # 0x0015C OVPSCL_OTG_Y         
///               $TG                  OVPSCL_OTG_Y      REG          
///                                    ###
///                                    * OVP SCL Pipe Timing Generator related registers for luma
///                                    ###
///     @ 0x0019C                      (P)
///     # 0x0019C OVPSCL_OTG_UV        
///               $TG                  OVPSCL_OTG_UV     REG          
///                                    ###
///                                    * OVP SCL Pipe Timing Generator related registers for chroma
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     476B, bits:    2914b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_VIPSCLTOP
#define h_VIPSCLTOP (){}

    #define     RA_VIPSCLTOP_CTRL0                             0x0000

    #define     BA_VIPSCLTOP_CTRL0_start_scl                   0x0000
    #define     B16VIPSCLTOP_CTRL0_start_scl                   0x0000
    #define   LSb32VIPSCLTOP_CTRL0_start_scl                      0
    #define   LSb16VIPSCLTOP_CTRL0_start_scl                      0
    #define       bVIPSCLTOP_CTRL0_start_scl                   1
    #define   MSK32VIPSCLTOP_CTRL0_start_scl                      0x00000001

    #define     BA_VIPSCLTOP_CTRL0_clear                       0x0000
    #define     B16VIPSCLTOP_CTRL0_clear                       0x0000
    #define   LSb32VIPSCLTOP_CTRL0_clear                          1
    #define   LSb16VIPSCLTOP_CTRL0_clear                          1
    #define       bVIPSCLTOP_CTRL0_clear                       1
    #define   MSK32VIPSCLTOP_CTRL0_clear                          0x00000002

    #define     BA_VIPSCLTOP_CTRL0_Y_otg_start                 0x0000
    #define     B16VIPSCLTOP_CTRL0_Y_otg_start                 0x0000
    #define   LSb32VIPSCLTOP_CTRL0_Y_otg_start                    2
    #define   LSb16VIPSCLTOP_CTRL0_Y_otg_start                    2
    #define       bVIPSCLTOP_CTRL0_Y_otg_start                 1
    #define   MSK32VIPSCLTOP_CTRL0_Y_otg_start                    0x00000004

    #define     BA_VIPSCLTOP_CTRL0_Y_otg_clear                 0x0000
    #define     B16VIPSCLTOP_CTRL0_Y_otg_clear                 0x0000
    #define   LSb32VIPSCLTOP_CTRL0_Y_otg_clear                    3
    #define   LSb16VIPSCLTOP_CTRL0_Y_otg_clear                    3
    #define       bVIPSCLTOP_CTRL0_Y_otg_clear                 1
    #define   MSK32VIPSCLTOP_CTRL0_Y_otg_clear                    0x00000008

    #define     BA_VIPSCLTOP_CTRL0_UV_otg_start                0x0000
    #define     B16VIPSCLTOP_CTRL0_UV_otg_start                0x0000
    #define   LSb32VIPSCLTOP_CTRL0_UV_otg_start                   4
    #define   LSb16VIPSCLTOP_CTRL0_UV_otg_start                   4
    #define       bVIPSCLTOP_CTRL0_UV_otg_start                1
    #define   MSK32VIPSCLTOP_CTRL0_UV_otg_start                   0x00000010

    #define     BA_VIPSCLTOP_CTRL0_UV_otg_clear                0x0000
    #define     B16VIPSCLTOP_CTRL0_UV_otg_clear                0x0000
    #define   LSb32VIPSCLTOP_CTRL0_UV_otg_clear                   5
    #define   LSb16VIPSCLTOP_CTRL0_UV_otg_clear                   5
    #define       bVIPSCLTOP_CTRL0_UV_otg_clear                1
    #define   MSK32VIPSCLTOP_CTRL0_UV_otg_clear                   0x00000020
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_CTRL1                             0x0004

    #define     BA_VIPSCLTOP_CTRL1_clken_ctrl0                 0x0004
    #define     B16VIPSCLTOP_CTRL1_clken_ctrl0                 0x0004
    #define   LSb32VIPSCLTOP_CTRL1_clken_ctrl0                    0
    #define   LSb16VIPSCLTOP_CTRL1_clken_ctrl0                    0
    #define       bVIPSCLTOP_CTRL1_clken_ctrl0                 1
    #define   MSK32VIPSCLTOP_CTRL1_clken_ctrl0                    0x00000001

    #define     BA_VIPSCLTOP_CTRL1_clken_ctrl1                 0x0004
    #define     B16VIPSCLTOP_CTRL1_clken_ctrl1                 0x0004
    #define   LSb32VIPSCLTOP_CTRL1_clken_ctrl1                    1
    #define   LSb16VIPSCLTOP_CTRL1_clken_ctrl1                    1
    #define       bVIPSCLTOP_CTRL1_clken_ctrl1                 1
    #define   MSK32VIPSCLTOP_CTRL1_clken_ctrl1                    0x00000002

    #define     BA_VIPSCLTOP_CTRL1_fifo_full_ctrlEn            0x0004
    #define     B16VIPSCLTOP_CTRL1_fifo_full_ctrlEn            0x0004
    #define   LSb32VIPSCLTOP_CTRL1_fifo_full_ctrlEn               2
    #define   LSb16VIPSCLTOP_CTRL1_fifo_full_ctrlEn               2
    #define       bVIPSCLTOP_CTRL1_fifo_full_ctrlEn            1
    #define   MSK32VIPSCLTOP_CTRL1_fifo_full_ctrlEn               0x00000004

    #define     BA_VIPSCLTOP_CTRL1_ovpscl_bypass               0x0004
    #define     B16VIPSCLTOP_CTRL1_ovpscl_bypass               0x0004
    #define   LSb32VIPSCLTOP_CTRL1_ovpscl_bypass                  3
    #define   LSb16VIPSCLTOP_CTRL1_ovpscl_bypass                  3
    #define       bVIPSCLTOP_CTRL1_ovpscl_bypass               1
    #define   MSK32VIPSCLTOP_CTRL1_ovpscl_bypass                  0x00000008

    #define     BA_VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en           0x0004
    #define     B16VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en           0x0004
    #define   LSb32VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en              4
    #define   LSb16VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en              4
    #define       bVIPSCLTOP_CTRL1_ovpscl_sb_clkg_en           1
    #define   MSK32VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en              0x00000010

    #define     BA_VIPSCLTOP_CTRL1_scl_clken_ctrl              0x0004
    #define     B16VIPSCLTOP_CTRL1_scl_clken_ctrl              0x0004
    #define   LSb32VIPSCLTOP_CTRL1_scl_clken_ctrl                 5
    #define   LSb16VIPSCLTOP_CTRL1_scl_clken_ctrl                 5
    #define       bVIPSCLTOP_CTRL1_scl_clken_ctrl              1
    #define   MSK32VIPSCLTOP_CTRL1_scl_clken_ctrl                 0x00000020

    #define     BA_VIPSCLTOP_CTRL1_scl_clken_fall_bk_en        0x0004
    #define     B16VIPSCLTOP_CTRL1_scl_clken_fall_bk_en        0x0004
    #define   LSb32VIPSCLTOP_CTRL1_scl_clken_fall_bk_en           6
    #define   LSb16VIPSCLTOP_CTRL1_scl_clken_fall_bk_en           6
    #define       bVIPSCLTOP_CTRL1_scl_clken_fall_bk_en        1
    #define   MSK32VIPSCLTOP_CTRL1_scl_clken_fall_bk_en           0x00000040

    #define     BA_VIPSCLTOP_CTRL1_scl_rst_en0                 0x0004
    #define     B16VIPSCLTOP_CTRL1_scl_rst_en0                 0x0004
    #define   LSb32VIPSCLTOP_CTRL1_scl_rst_en0                    7
    #define   LSb16VIPSCLTOP_CTRL1_scl_rst_en0                    7
    #define       bVIPSCLTOP_CTRL1_scl_rst_en0                 1
    #define   MSK32VIPSCLTOP_CTRL1_scl_rst_en0                    0x00000080

    #define     BA_VIPSCLTOP_CTRL1_scl_rst_en1                 0x0005
    #define     B16VIPSCLTOP_CTRL1_scl_rst_en1                 0x0004
    #define   LSb32VIPSCLTOP_CTRL1_scl_rst_en1                    8
    #define   LSb16VIPSCLTOP_CTRL1_scl_rst_en1                    8
    #define       bVIPSCLTOP_CTRL1_scl_rst_en1                 1
    #define   MSK32VIPSCLTOP_CTRL1_scl_rst_en1                    0x00000100

    #define     BA_VIPSCLTOP_CTRL1_scl_rst_en2                 0x0005
    #define     B16VIPSCLTOP_CTRL1_scl_rst_en2                 0x0004
    #define   LSb32VIPSCLTOP_CTRL1_scl_rst_en2                    9
    #define   LSb16VIPSCLTOP_CTRL1_scl_rst_en2                    9
    #define       bVIPSCLTOP_CTRL1_scl_rst_en2                 1
    #define   MSK32VIPSCLTOP_CTRL1_scl_rst_en2                    0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_CTRL2                             0x0008

    #define     BA_VIPSCLTOP_CTRL2_inPixTot0                   0x0008
    #define     B16VIPSCLTOP_CTRL2_inPixTot0                   0x0008
    #define   LSb32VIPSCLTOP_CTRL2_inPixTot0                      0
    #define   LSb16VIPSCLTOP_CTRL2_inPixTot0                      0
    #define       bVIPSCLTOP_CTRL2_inPixTot0                   32
    #define   MSK32VIPSCLTOP_CTRL2_inPixTot0                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_CTRL3                             0x000C

    #define     BA_VIPSCLTOP_CTRL3_inPixTot1                   0x000C
    #define     B16VIPSCLTOP_CTRL3_inPixTot1                   0x000C
    #define   LSb32VIPSCLTOP_CTRL3_inPixTot1                      0
    #define   LSb16VIPSCLTOP_CTRL3_inPixTot1                      0
    #define       bVIPSCLTOP_CTRL3_inPixTot1                   32
    #define   MSK32VIPSCLTOP_CTRL3_inPixTot1                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_CTRL4                             0x0010

    #define     BA_VIPSCLTOP_CTRL4_cfg_rst                     0x0010
    #define     B16VIPSCLTOP_CTRL4_cfg_rst                     0x0010
    #define   LSb32VIPSCLTOP_CTRL4_cfg_rst                        0
    #define   LSb16VIPSCLTOP_CTRL4_cfg_rst                        0
    #define       bVIPSCLTOP_CTRL4_cfg_rst                     1
    #define   MSK32VIPSCLTOP_CTRL4_cfg_rst                        0x00000001

    #define     BA_VIPSCLTOP_CTRL4_ovpscl_clken                0x0010
    #define     B16VIPSCLTOP_CTRL4_ovpscl_clken                0x0010
    #define   LSb32VIPSCLTOP_CTRL4_ovpscl_clken                   1
    #define   LSb16VIPSCLTOP_CTRL4_ovpscl_clken                   1
    #define       bVIPSCLTOP_CTRL4_ovpscl_clken                1
    #define   MSK32VIPSCLTOP_CTRL4_ovpscl_clken                   0x00000002

    #define     BA_VIPSCLTOP_CTRL4_scl_sw_rst                  0x0010
    #define     B16VIPSCLTOP_CTRL4_scl_sw_rst                  0x0010
    #define   LSb32VIPSCLTOP_CTRL4_scl_sw_rst                     2
    #define   LSb16VIPSCLTOP_CTRL4_scl_sw_rst                     2
    #define       bVIPSCLTOP_CTRL4_scl_sw_rst                  1
    #define   MSK32VIPSCLTOP_CTRL4_scl_sw_rst                     0x00000004

    #define     BA_VIPSCLTOP_CTRL4_oclken_ctrl0                0x0010
    #define     B16VIPSCLTOP_CTRL4_oclken_ctrl0                0x0010
    #define   LSb32VIPSCLTOP_CTRL4_oclken_ctrl0                   3
    #define   LSb16VIPSCLTOP_CTRL4_oclken_ctrl0                   3
    #define       bVIPSCLTOP_CTRL4_oclken_ctrl0                1
    #define   MSK32VIPSCLTOP_CTRL4_oclken_ctrl0                   0x00000008

    #define     BA_VIPSCLTOP_CTRL4_oclken_ctrl1                0x0010
    #define     B16VIPSCLTOP_CTRL4_oclken_ctrl1                0x0010
    #define   LSb32VIPSCLTOP_CTRL4_oclken_ctrl1                   4
    #define   LSb16VIPSCLTOP_CTRL4_oclken_ctrl1                   4
    #define       bVIPSCLTOP_CTRL4_oclken_ctrl1                1
    #define   MSK32VIPSCLTOP_CTRL4_oclken_ctrl1                   0x00000010

    #define     BA_VIPSCLTOP_CTRL4_ofifo_full_ctrlEn           0x0010
    #define     B16VIPSCLTOP_CTRL4_ofifo_full_ctrlEn           0x0010
    #define   LSb32VIPSCLTOP_CTRL4_ofifo_full_ctrlEn              5
    #define   LSb16VIPSCLTOP_CTRL4_ofifo_full_ctrlEn              5
    #define       bVIPSCLTOP_CTRL4_ofifo_full_ctrlEn           1
    #define   MSK32VIPSCLTOP_CTRL4_ofifo_full_ctrlEn              0x00000020

    #define     BA_VIPSCLTOP_CTRL4_wrbk_ctrl420sp              0x0010
    #define     B16VIPSCLTOP_CTRL4_wrbk_ctrl420sp              0x0010
    #define   LSb32VIPSCLTOP_CTRL4_wrbk_ctrl420sp                 6
    #define   LSb16VIPSCLTOP_CTRL4_wrbk_ctrl420sp                 6
    #define       bVIPSCLTOP_CTRL4_wrbk_ctrl420sp              1
    #define   MSK32VIPSCLTOP_CTRL4_wrbk_ctrl420sp                 0x00000040

    #define     BA_VIPSCLTOP_CTRL4_out8_420sp_sel              0x0010
    #define     B16VIPSCLTOP_CTRL4_out8_420sp_sel              0x0010
    #define   LSb32VIPSCLTOP_CTRL4_out8_420sp_sel                 7
    #define   LSb16VIPSCLTOP_CTRL4_out8_420sp_sel                 7
    #define       bVIPSCLTOP_CTRL4_out8_420sp_sel              1
    #define   MSK32VIPSCLTOP_CTRL4_out8_420sp_sel                 0x00000080

    #define     BA_VIPSCLTOP_CTRL4_out_422_sel                 0x0011
    #define     B16VIPSCLTOP_CTRL4_out_422_sel                 0x0010
    #define   LSb32VIPSCLTOP_CTRL4_out_422_sel                    8
    #define   LSb16VIPSCLTOP_CTRL4_out_422_sel                    8
    #define       bVIPSCLTOP_CTRL4_out_422_sel                 2
    #define   MSK32VIPSCLTOP_CTRL4_out_422_sel                    0x00000300

    #define     BA_VIPSCLTOP_CTRL4_iptg_eof_intr_en            0x0011
    #define     B16VIPSCLTOP_CTRL4_iptg_eof_intr_en            0x0010
    #define   LSb32VIPSCLTOP_CTRL4_iptg_eof_intr_en               10
    #define   LSb16VIPSCLTOP_CTRL4_iptg_eof_intr_en               10
    #define       bVIPSCLTOP_CTRL4_iptg_eof_intr_en            1
    #define   MSK32VIPSCLTOP_CTRL4_iptg_eof_intr_en               0x00000400

    #define     BA_VIPSCLTOP_CTRL4_optg_eof_intr_en            0x0011
    #define     B16VIPSCLTOP_CTRL4_optg_eof_intr_en            0x0010
    #define   LSb32VIPSCLTOP_CTRL4_optg_eof_intr_en               11
    #define   LSb16VIPSCLTOP_CTRL4_optg_eof_intr_en               11
    #define       bVIPSCLTOP_CTRL4_optg_eof_intr_en            1
    #define   MSK32VIPSCLTOP_CTRL4_optg_eof_intr_en               0x00000800
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_CTRL5                             0x0014

    #define     BA_VIPSCLTOP_CTRL5_ofifo_sts0_ctrl             0x0014
    #define     B16VIPSCLTOP_CTRL5_ofifo_sts0_ctrl             0x0014
    #define   LSb32VIPSCLTOP_CTRL5_ofifo_sts0_ctrl                0
    #define   LSb16VIPSCLTOP_CTRL5_ofifo_sts0_ctrl                0
    #define       bVIPSCLTOP_CTRL5_ofifo_sts0_ctrl             1
    #define   MSK32VIPSCLTOP_CTRL5_ofifo_sts0_ctrl                0x00000001

    #define     BA_VIPSCLTOP_CTRL5_ofifo_sts1_ctrl             0x0014
    #define     B16VIPSCLTOP_CTRL5_ofifo_sts1_ctrl             0x0014
    #define   LSb32VIPSCLTOP_CTRL5_ofifo_sts1_ctrl                1
    #define   LSb16VIPSCLTOP_CTRL5_ofifo_sts1_ctrl                1
    #define       bVIPSCLTOP_CTRL5_ofifo_sts1_ctrl             1
    #define   MSK32VIPSCLTOP_CTRL5_ofifo_sts1_ctrl                0x00000002

    #define     BA_VIPSCLTOP_CTRL5_sclOutrdy_sts0_en           0x0014
    #define     B16VIPSCLTOP_CTRL5_sclOutrdy_sts0_en           0x0014
    #define   LSb32VIPSCLTOP_CTRL5_sclOutrdy_sts0_en              2
    #define   LSb16VIPSCLTOP_CTRL5_sclOutrdy_sts0_en              2
    #define       bVIPSCLTOP_CTRL5_sclOutrdy_sts0_en           1
    #define   MSK32VIPSCLTOP_CTRL5_sclOutrdy_sts0_en              0x00000004

    #define     BA_VIPSCLTOP_CTRL5_sclOutrdy_sts1_en           0x0014
    #define     B16VIPSCLTOP_CTRL5_sclOutrdy_sts1_en           0x0014
    #define   LSb32VIPSCLTOP_CTRL5_sclOutrdy_sts1_en              3
    #define   LSb16VIPSCLTOP_CTRL5_sclOutrdy_sts1_en              3
    #define       bVIPSCLTOP_CTRL5_sclOutrdy_sts1_en           1
    #define   MSK32VIPSCLTOP_CTRL5_sclOutrdy_sts1_en              0x00000008

    #define     BA_VIPSCLTOP_CTRL5_luma_data_sel               0x0014
    #define     B16VIPSCLTOP_CTRL5_luma_data_sel               0x0014
    #define   LSb32VIPSCLTOP_CTRL5_luma_data_sel                  4
    #define   LSb16VIPSCLTOP_CTRL5_luma_data_sel                  4
    #define       bVIPSCLTOP_CTRL5_luma_data_sel               2
    #define   MSK32VIPSCLTOP_CTRL5_luma_data_sel                  0x00000030

    #define     BA_VIPSCLTOP_CTRL5_chroma_data_sel             0x0014
    #define     B16VIPSCLTOP_CTRL5_chroma_data_sel             0x0014
    #define   LSb32VIPSCLTOP_CTRL5_chroma_data_sel                6
    #define   LSb16VIPSCLTOP_CTRL5_chroma_data_sel                6
    #define       bVIPSCLTOP_CTRL5_chroma_data_sel             1
    #define   MSK32VIPSCLTOP_CTRL5_chroma_data_sel                0x00000040

    #define     BA_VIPSCLTOP_CTRL5_hde_initval0                0x0014
    #define     B16VIPSCLTOP_CTRL5_hde_initval0                0x0014
    #define   LSb32VIPSCLTOP_CTRL5_hde_initval0                   7
    #define   LSb16VIPSCLTOP_CTRL5_hde_initval0                   7
    #define       bVIPSCLTOP_CTRL5_hde_initval0                1
    #define   MSK32VIPSCLTOP_CTRL5_hde_initval0                   0x00000080

    #define     BA_VIPSCLTOP_CTRL5_hde_initval1                0x0015
    #define     B16VIPSCLTOP_CTRL5_hde_initval1                0x0014
    #define   LSb32VIPSCLTOP_CTRL5_hde_initval1                   8
    #define   LSb16VIPSCLTOP_CTRL5_hde_initval1                   8
    #define       bVIPSCLTOP_CTRL5_hde_initval1                1
    #define   MSK32VIPSCLTOP_CTRL5_hde_initval1                   0x00000100

    #define     BA_VIPSCLTOP_CTRL5_ovpscl_ictrl_sel            0x0015
    #define     B16VIPSCLTOP_CTRL5_ovpscl_ictrl_sel            0x0014
    #define   LSb32VIPSCLTOP_CTRL5_ovpscl_ictrl_sel               9
    #define   LSb16VIPSCLTOP_CTRL5_ovpscl_ictrl_sel               9
    #define       bVIPSCLTOP_CTRL5_ovpscl_ictrl_sel            2
    #define   MSK32VIPSCLTOP_CTRL5_ovpscl_ictrl_sel               0x00000600

    #define     BA_VIPSCLTOP_CTRL5_idata_frmt_ctrl             0x0015
    #define     B16VIPSCLTOP_CTRL5_idata_frmt_ctrl             0x0014
    #define   LSb32VIPSCLTOP_CTRL5_idata_frmt_ctrl                11
    #define   LSb16VIPSCLTOP_CTRL5_idata_frmt_ctrl                11
    #define       bVIPSCLTOP_CTRL5_idata_frmt_ctrl             1
    #define   MSK32VIPSCLTOP_CTRL5_idata_frmt_ctrl                0x00000800

    #define     BA_VIPSCLTOP_CTRL5_clk_en_sel                  0x0015
    #define     B16VIPSCLTOP_CTRL5_clk_en_sel                  0x0014
    #define   LSb32VIPSCLTOP_CTRL5_clk_en_sel                     12
    #define   LSb16VIPSCLTOP_CTRL5_clk_en_sel                     12
    #define       bVIPSCLTOP_CTRL5_clk_en_sel                  1
    #define   MSK32VIPSCLTOP_CTRL5_clk_en_sel                     0x00001000

    #define     BA_VIPSCLTOP_CTRL5_hde_msk_en                  0x0015
    #define     B16VIPSCLTOP_CTRL5_hde_msk_en                  0x0014
    #define   LSb32VIPSCLTOP_CTRL5_hde_msk_en                     13
    #define   LSb16VIPSCLTOP_CTRL5_hde_msk_en                     13
    #define       bVIPSCLTOP_CTRL5_hde_msk_en                  1
    #define   MSK32VIPSCLTOP_CTRL5_hde_msk_en                     0x00002000

    #define     BA_VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl          0x0015
    #define     B16VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl          0x0014
    #define   LSb32VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl             14
    #define   LSb16VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl             14
    #define       bVIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl          1
    #define   MSK32VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl             0x00004000

    #define     BA_VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl          0x0015
    #define     B16VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl          0x0014
    #define   LSb32VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl             15
    #define   LSb16VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl             15
    #define       bVIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl          1
    #define   MSK32VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl             0x00008000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_STS0                              0x0018

    #define     BA_VIPSCLTOP_STS0_ipOvpTg_vcnt_sts             0x0018
    #define     B16VIPSCLTOP_STS0_ipOvpTg_vcnt_sts             0x0018
    #define   LSb32VIPSCLTOP_STS0_ipOvpTg_vcnt_sts                0
    #define   LSb16VIPSCLTOP_STS0_ipOvpTg_vcnt_sts                0
    #define       bVIPSCLTOP_STS0_ipOvpTg_vcnt_sts             16
    #define   MSK32VIPSCLTOP_STS0_ipOvpTg_vcnt_sts                0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_STS1                              0x001C

    #define     BA_VIPSCLTOP_STS1_OVPSCL_Y_oTg                 0x001C
    #define     B16VIPSCLTOP_STS1_OVPSCL_Y_oTg                 0x001C
    #define   LSb32VIPSCLTOP_STS1_OVPSCL_Y_oTg                    0
    #define   LSb16VIPSCLTOP_STS1_OVPSCL_Y_oTg                    0
    #define       bVIPSCLTOP_STS1_OVPSCL_Y_oTg                 16
    #define   MSK32VIPSCLTOP_STS1_OVPSCL_Y_oTg                    0x0000FFFF

    #define     BA_VIPSCLTOP_STS1_OVPSCL_UV_oTg                0x001E
    #define     B16VIPSCLTOP_STS1_OVPSCL_UV_oTg                0x001E
    #define   LSb32VIPSCLTOP_STS1_OVPSCL_UV_oTg                   16
    #define   LSb16VIPSCLTOP_STS1_OVPSCL_UV_oTg                   0
    #define       bVIPSCLTOP_STS1_OVPSCL_UV_oTg                16
    #define   MSK32VIPSCLTOP_STS1_OVPSCL_UV_oTg                   0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_INTR_EN                           0x0020

    #define     BA_VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF              0x0020
    #define     B16VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF              0x0020
    #define   LSb32VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF                 0
    #define   LSb16VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF                 0
    #define       bVIPSCLTOP_INTR_EN_OVPSCL_Y_EOF              1
    #define   MSK32VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF                 0x00000001

    #define     BA_VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF             0x0020
    #define     B16VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF             0x0020
    #define   LSb32VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF                1
    #define   LSb16VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF                1
    #define       bVIPSCLTOP_INTR_EN_OVPSCL_UV_EOF             1
    #define   MSK32VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF                0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_OVPSCL_Y                          0x0024
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_OVPSCL_UV                         0x00C0
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_OVPSCL_OTG_Y                      0x015C
    ///////////////////////////////////////////////////////////
    #define     RA_VIPSCLTOP_OVPSCL_OTG_UV                     0x019C
    ///////////////////////////////////////////////////////////

    typedef struct SIE_VIPSCLTOP {
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_CTRL0_start_scl(r32)              _BFGET_(r32, 0, 0)
    #define   SET32VIPSCLTOP_CTRL0_start_scl(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16VIPSCLTOP_CTRL0_start_scl(r16)              _BFGET_(r16, 0, 0)
    #define   SET16VIPSCLTOP_CTRL0_start_scl(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32VIPSCLTOP_CTRL0_clear(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32VIPSCLTOP_CTRL0_clear(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16VIPSCLTOP_CTRL0_clear(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16VIPSCLTOP_CTRL0_clear(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32VIPSCLTOP_CTRL0_Y_otg_start(r32)            _BFGET_(r32, 2, 2)
    #define   SET32VIPSCLTOP_CTRL0_Y_otg_start(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16VIPSCLTOP_CTRL0_Y_otg_start(r16)            _BFGET_(r16, 2, 2)
    #define   SET16VIPSCLTOP_CTRL0_Y_otg_start(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32VIPSCLTOP_CTRL0_Y_otg_clear(r32)            _BFGET_(r32, 3, 3)
    #define   SET32VIPSCLTOP_CTRL0_Y_otg_clear(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16VIPSCLTOP_CTRL0_Y_otg_clear(r16)            _BFGET_(r16, 3, 3)
    #define   SET16VIPSCLTOP_CTRL0_Y_otg_clear(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32VIPSCLTOP_CTRL0_UV_otg_start(r32)           _BFGET_(r32, 4, 4)
    #define   SET32VIPSCLTOP_CTRL0_UV_otg_start(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16VIPSCLTOP_CTRL0_UV_otg_start(r16)           _BFGET_(r16, 4, 4)
    #define   SET16VIPSCLTOP_CTRL0_UV_otg_start(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32VIPSCLTOP_CTRL0_UV_otg_clear(r32)           _BFGET_(r32, 5, 5)
    #define   SET32VIPSCLTOP_CTRL0_UV_otg_clear(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16VIPSCLTOP_CTRL0_UV_otg_clear(r16)           _BFGET_(r16, 5, 5)
    #define   SET16VIPSCLTOP_CTRL0_UV_otg_clear(r16,v)         _BFSET_(r16, 5, 5,v)

    #define     w32VIPSCLTOP_CTRL0                             {\
            UNSG32 uCTRL0_start_scl                            :  1;\
            UNSG32 uCTRL0_clear                                :  1;\
            UNSG32 uCTRL0_Y_otg_start                          :  1;\
            UNSG32 uCTRL0_Y_otg_clear                          :  1;\
            UNSG32 uCTRL0_UV_otg_start                         :  1;\
            UNSG32 uCTRL0_UV_otg_clear                         :  1;\
            UNSG32 RSVDx0_b6                                   : 26;\
          }
    union { UNSG32 u32VIPSCLTOP_CTRL0;
            struct w32VIPSCLTOP_CTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_CTRL1_clken_ctrl0(r32)            _BFGET_(r32, 0, 0)
    #define   SET32VIPSCLTOP_CTRL1_clken_ctrl0(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16VIPSCLTOP_CTRL1_clken_ctrl0(r16)            _BFGET_(r16, 0, 0)
    #define   SET16VIPSCLTOP_CTRL1_clken_ctrl0(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32VIPSCLTOP_CTRL1_clken_ctrl1(r32)            _BFGET_(r32, 1, 1)
    #define   SET32VIPSCLTOP_CTRL1_clken_ctrl1(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16VIPSCLTOP_CTRL1_clken_ctrl1(r16)            _BFGET_(r16, 1, 1)
    #define   SET16VIPSCLTOP_CTRL1_clken_ctrl1(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32VIPSCLTOP_CTRL1_fifo_full_ctrlEn(r32)       _BFGET_(r32, 2, 2)
    #define   SET32VIPSCLTOP_CTRL1_fifo_full_ctrlEn(r32,v)     _BFSET_(r32, 2, 2,v)
    #define   GET16VIPSCLTOP_CTRL1_fifo_full_ctrlEn(r16)       _BFGET_(r16, 2, 2)
    #define   SET16VIPSCLTOP_CTRL1_fifo_full_ctrlEn(r16,v)     _BFSET_(r16, 2, 2,v)

    #define   GET32VIPSCLTOP_CTRL1_ovpscl_bypass(r32)          _BFGET_(r32, 3, 3)
    #define   SET32VIPSCLTOP_CTRL1_ovpscl_bypass(r32,v)        _BFSET_(r32, 3, 3,v)
    #define   GET16VIPSCLTOP_CTRL1_ovpscl_bypass(r16)          _BFGET_(r16, 3, 3)
    #define   SET16VIPSCLTOP_CTRL1_ovpscl_bypass(r16,v)        _BFSET_(r16, 3, 3,v)

    #define   GET32VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en(r32)      _BFGET_(r32, 4, 4)
    #define   SET32VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en(r32,v)    _BFSET_(r32, 4, 4,v)
    #define   GET16VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en(r16)      _BFGET_(r16, 4, 4)
    #define   SET16VIPSCLTOP_CTRL1_ovpscl_sb_clkg_en(r16,v)    _BFSET_(r16, 4, 4,v)

    #define   GET32VIPSCLTOP_CTRL1_scl_clken_ctrl(r32)         _BFGET_(r32, 5, 5)
    #define   SET32VIPSCLTOP_CTRL1_scl_clken_ctrl(r32,v)       _BFSET_(r32, 5, 5,v)
    #define   GET16VIPSCLTOP_CTRL1_scl_clken_ctrl(r16)         _BFGET_(r16, 5, 5)
    #define   SET16VIPSCLTOP_CTRL1_scl_clken_ctrl(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32VIPSCLTOP_CTRL1_scl_clken_fall_bk_en(r32)   _BFGET_(r32, 6, 6)
    #define   SET32VIPSCLTOP_CTRL1_scl_clken_fall_bk_en(r32,v) _BFSET_(r32, 6, 6,v)
    #define   GET16VIPSCLTOP_CTRL1_scl_clken_fall_bk_en(r16)   _BFGET_(r16, 6, 6)
    #define   SET16VIPSCLTOP_CTRL1_scl_clken_fall_bk_en(r16,v) _BFSET_(r16, 6, 6,v)

    #define   GET32VIPSCLTOP_CTRL1_scl_rst_en0(r32)            _BFGET_(r32, 7, 7)
    #define   SET32VIPSCLTOP_CTRL1_scl_rst_en0(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16VIPSCLTOP_CTRL1_scl_rst_en0(r16)            _BFGET_(r16, 7, 7)
    #define   SET16VIPSCLTOP_CTRL1_scl_rst_en0(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32VIPSCLTOP_CTRL1_scl_rst_en1(r32)            _BFGET_(r32, 8, 8)
    #define   SET32VIPSCLTOP_CTRL1_scl_rst_en1(r32,v)          _BFSET_(r32, 8, 8,v)
    #define   GET16VIPSCLTOP_CTRL1_scl_rst_en1(r16)            _BFGET_(r16, 8, 8)
    #define   SET16VIPSCLTOP_CTRL1_scl_rst_en1(r16,v)          _BFSET_(r16, 8, 8,v)

    #define   GET32VIPSCLTOP_CTRL1_scl_rst_en2(r32)            _BFGET_(r32, 9, 9)
    #define   SET32VIPSCLTOP_CTRL1_scl_rst_en2(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16VIPSCLTOP_CTRL1_scl_rst_en2(r16)            _BFGET_(r16, 9, 9)
    #define   SET16VIPSCLTOP_CTRL1_scl_rst_en2(r16,v)          _BFSET_(r16, 9, 9,v)

    #define     w32VIPSCLTOP_CTRL1                             {\
            UNSG32 uCTRL1_clken_ctrl0                          :  1;\
            UNSG32 uCTRL1_clken_ctrl1                          :  1;\
            UNSG32 uCTRL1_fifo_full_ctrlEn                     :  1;\
            UNSG32 uCTRL1_ovpscl_bypass                        :  1;\
            UNSG32 uCTRL1_ovpscl_sb_clkg_en                    :  1;\
            UNSG32 uCTRL1_scl_clken_ctrl                       :  1;\
            UNSG32 uCTRL1_scl_clken_fall_bk_en                 :  1;\
            UNSG32 uCTRL1_scl_rst_en0                          :  1;\
            UNSG32 uCTRL1_scl_rst_en1                          :  1;\
            UNSG32 uCTRL1_scl_rst_en2                          :  1;\
            UNSG32 RSVDx4_b10                                  : 22;\
          }
    union { UNSG32 u32VIPSCLTOP_CTRL1;
            struct w32VIPSCLTOP_CTRL1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_CTRL2_inPixTot0(r32)              _BFGET_(r32,31, 0)
    #define   SET32VIPSCLTOP_CTRL2_inPixTot0(r32,v)            _BFSET_(r32,31, 0,v)

    #define     w32VIPSCLTOP_CTRL2                             {\
            UNSG32 uCTRL2_inPixTot0                            : 32;\
          }
    union { UNSG32 u32VIPSCLTOP_CTRL2;
            struct w32VIPSCLTOP_CTRL2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_CTRL3_inPixTot1(r32)              _BFGET_(r32,31, 0)
    #define   SET32VIPSCLTOP_CTRL3_inPixTot1(r32,v)            _BFSET_(r32,31, 0,v)

    #define     w32VIPSCLTOP_CTRL3                             {\
            UNSG32 uCTRL3_inPixTot1                            : 32;\
          }
    union { UNSG32 u32VIPSCLTOP_CTRL3;
            struct w32VIPSCLTOP_CTRL3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_CTRL4_cfg_rst(r32)                _BFGET_(r32, 0, 0)
    #define   SET32VIPSCLTOP_CTRL4_cfg_rst(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16VIPSCLTOP_CTRL4_cfg_rst(r16)                _BFGET_(r16, 0, 0)
    #define   SET16VIPSCLTOP_CTRL4_cfg_rst(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32VIPSCLTOP_CTRL4_ovpscl_clken(r32)           _BFGET_(r32, 1, 1)
    #define   SET32VIPSCLTOP_CTRL4_ovpscl_clken(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16VIPSCLTOP_CTRL4_ovpscl_clken(r16)           _BFGET_(r16, 1, 1)
    #define   SET16VIPSCLTOP_CTRL4_ovpscl_clken(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32VIPSCLTOP_CTRL4_scl_sw_rst(r32)             _BFGET_(r32, 2, 2)
    #define   SET32VIPSCLTOP_CTRL4_scl_sw_rst(r32,v)           _BFSET_(r32, 2, 2,v)
    #define   GET16VIPSCLTOP_CTRL4_scl_sw_rst(r16)             _BFGET_(r16, 2, 2)
    #define   SET16VIPSCLTOP_CTRL4_scl_sw_rst(r16,v)           _BFSET_(r16, 2, 2,v)

    #define   GET32VIPSCLTOP_CTRL4_oclken_ctrl0(r32)           _BFGET_(r32, 3, 3)
    #define   SET32VIPSCLTOP_CTRL4_oclken_ctrl0(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16VIPSCLTOP_CTRL4_oclken_ctrl0(r16)           _BFGET_(r16, 3, 3)
    #define   SET16VIPSCLTOP_CTRL4_oclken_ctrl0(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32VIPSCLTOP_CTRL4_oclken_ctrl1(r32)           _BFGET_(r32, 4, 4)
    #define   SET32VIPSCLTOP_CTRL4_oclken_ctrl1(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16VIPSCLTOP_CTRL4_oclken_ctrl1(r16)           _BFGET_(r16, 4, 4)
    #define   SET16VIPSCLTOP_CTRL4_oclken_ctrl1(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32VIPSCLTOP_CTRL4_ofifo_full_ctrlEn(r32)      _BFGET_(r32, 5, 5)
    #define   SET32VIPSCLTOP_CTRL4_ofifo_full_ctrlEn(r32,v)    _BFSET_(r32, 5, 5,v)
    #define   GET16VIPSCLTOP_CTRL4_ofifo_full_ctrlEn(r16)      _BFGET_(r16, 5, 5)
    #define   SET16VIPSCLTOP_CTRL4_ofifo_full_ctrlEn(r16,v)    _BFSET_(r16, 5, 5,v)

    #define   GET32VIPSCLTOP_CTRL4_wrbk_ctrl420sp(r32)         _BFGET_(r32, 6, 6)
    #define   SET32VIPSCLTOP_CTRL4_wrbk_ctrl420sp(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16VIPSCLTOP_CTRL4_wrbk_ctrl420sp(r16)         _BFGET_(r16, 6, 6)
    #define   SET16VIPSCLTOP_CTRL4_wrbk_ctrl420sp(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32VIPSCLTOP_CTRL4_out8_420sp_sel(r32)         _BFGET_(r32, 7, 7)
    #define   SET32VIPSCLTOP_CTRL4_out8_420sp_sel(r32,v)       _BFSET_(r32, 7, 7,v)
    #define   GET16VIPSCLTOP_CTRL4_out8_420sp_sel(r16)         _BFGET_(r16, 7, 7)
    #define   SET16VIPSCLTOP_CTRL4_out8_420sp_sel(r16,v)       _BFSET_(r16, 7, 7,v)

    #define   GET32VIPSCLTOP_CTRL4_out_422_sel(r32)            _BFGET_(r32, 9, 8)
    #define   SET32VIPSCLTOP_CTRL4_out_422_sel(r32,v)          _BFSET_(r32, 9, 8,v)
    #define   GET16VIPSCLTOP_CTRL4_out_422_sel(r16)            _BFGET_(r16, 9, 8)
    #define   SET16VIPSCLTOP_CTRL4_out_422_sel(r16,v)          _BFSET_(r16, 9, 8,v)

    #define   GET32VIPSCLTOP_CTRL4_iptg_eof_intr_en(r32)       _BFGET_(r32,10,10)
    #define   SET32VIPSCLTOP_CTRL4_iptg_eof_intr_en(r32,v)     _BFSET_(r32,10,10,v)
    #define   GET16VIPSCLTOP_CTRL4_iptg_eof_intr_en(r16)       _BFGET_(r16,10,10)
    #define   SET16VIPSCLTOP_CTRL4_iptg_eof_intr_en(r16,v)     _BFSET_(r16,10,10,v)

    #define   GET32VIPSCLTOP_CTRL4_optg_eof_intr_en(r32)       _BFGET_(r32,11,11)
    #define   SET32VIPSCLTOP_CTRL4_optg_eof_intr_en(r32,v)     _BFSET_(r32,11,11,v)
    #define   GET16VIPSCLTOP_CTRL4_optg_eof_intr_en(r16)       _BFGET_(r16,11,11)
    #define   SET16VIPSCLTOP_CTRL4_optg_eof_intr_en(r16,v)     _BFSET_(r16,11,11,v)

    #define     w32VIPSCLTOP_CTRL4                             {\
            UNSG32 uCTRL4_cfg_rst                              :  1;\
            UNSG32 uCTRL4_ovpscl_clken                         :  1;\
            UNSG32 uCTRL4_scl_sw_rst                           :  1;\
            UNSG32 uCTRL4_oclken_ctrl0                         :  1;\
            UNSG32 uCTRL4_oclken_ctrl1                         :  1;\
            UNSG32 uCTRL4_ofifo_full_ctrlEn                    :  1;\
            UNSG32 uCTRL4_wrbk_ctrl420sp                       :  1;\
            UNSG32 uCTRL4_out8_420sp_sel                       :  1;\
            UNSG32 uCTRL4_out_422_sel                          :  2;\
            UNSG32 uCTRL4_iptg_eof_intr_en                     :  1;\
            UNSG32 uCTRL4_optg_eof_intr_en                     :  1;\
            UNSG32 RSVDx10_b12                                 : 20;\
          }
    union { UNSG32 u32VIPSCLTOP_CTRL4;
            struct w32VIPSCLTOP_CTRL4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_CTRL5_ofifo_sts0_ctrl(r32)        _BFGET_(r32, 0, 0)
    #define   SET32VIPSCLTOP_CTRL5_ofifo_sts0_ctrl(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16VIPSCLTOP_CTRL5_ofifo_sts0_ctrl(r16)        _BFGET_(r16, 0, 0)
    #define   SET16VIPSCLTOP_CTRL5_ofifo_sts0_ctrl(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32VIPSCLTOP_CTRL5_ofifo_sts1_ctrl(r32)        _BFGET_(r32, 1, 1)
    #define   SET32VIPSCLTOP_CTRL5_ofifo_sts1_ctrl(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16VIPSCLTOP_CTRL5_ofifo_sts1_ctrl(r16)        _BFGET_(r16, 1, 1)
    #define   SET16VIPSCLTOP_CTRL5_ofifo_sts1_ctrl(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32VIPSCLTOP_CTRL5_sclOutrdy_sts0_en(r32)      _BFGET_(r32, 2, 2)
    #define   SET32VIPSCLTOP_CTRL5_sclOutrdy_sts0_en(r32,v)    _BFSET_(r32, 2, 2,v)
    #define   GET16VIPSCLTOP_CTRL5_sclOutrdy_sts0_en(r16)      _BFGET_(r16, 2, 2)
    #define   SET16VIPSCLTOP_CTRL5_sclOutrdy_sts0_en(r16,v)    _BFSET_(r16, 2, 2,v)

    #define   GET32VIPSCLTOP_CTRL5_sclOutrdy_sts1_en(r32)      _BFGET_(r32, 3, 3)
    #define   SET32VIPSCLTOP_CTRL5_sclOutrdy_sts1_en(r32,v)    _BFSET_(r32, 3, 3,v)
    #define   GET16VIPSCLTOP_CTRL5_sclOutrdy_sts1_en(r16)      _BFGET_(r16, 3, 3)
    #define   SET16VIPSCLTOP_CTRL5_sclOutrdy_sts1_en(r16,v)    _BFSET_(r16, 3, 3,v)

    #define   GET32VIPSCLTOP_CTRL5_luma_data_sel(r32)          _BFGET_(r32, 5, 4)
    #define   SET32VIPSCLTOP_CTRL5_luma_data_sel(r32,v)        _BFSET_(r32, 5, 4,v)
    #define   GET16VIPSCLTOP_CTRL5_luma_data_sel(r16)          _BFGET_(r16, 5, 4)
    #define   SET16VIPSCLTOP_CTRL5_luma_data_sel(r16,v)        _BFSET_(r16, 5, 4,v)

    #define   GET32VIPSCLTOP_CTRL5_chroma_data_sel(r32)        _BFGET_(r32, 6, 6)
    #define   SET32VIPSCLTOP_CTRL5_chroma_data_sel(r32,v)      _BFSET_(r32, 6, 6,v)
    #define   GET16VIPSCLTOP_CTRL5_chroma_data_sel(r16)        _BFGET_(r16, 6, 6)
    #define   SET16VIPSCLTOP_CTRL5_chroma_data_sel(r16,v)      _BFSET_(r16, 6, 6,v)

    #define   GET32VIPSCLTOP_CTRL5_hde_initval0(r32)           _BFGET_(r32, 7, 7)
    #define   SET32VIPSCLTOP_CTRL5_hde_initval0(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16VIPSCLTOP_CTRL5_hde_initval0(r16)           _BFGET_(r16, 7, 7)
    #define   SET16VIPSCLTOP_CTRL5_hde_initval0(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32VIPSCLTOP_CTRL5_hde_initval1(r32)           _BFGET_(r32, 8, 8)
    #define   SET32VIPSCLTOP_CTRL5_hde_initval1(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16VIPSCLTOP_CTRL5_hde_initval1(r16)           _BFGET_(r16, 8, 8)
    #define   SET16VIPSCLTOP_CTRL5_hde_initval1(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32VIPSCLTOP_CTRL5_ovpscl_ictrl_sel(r32)       _BFGET_(r32,10, 9)
    #define   SET32VIPSCLTOP_CTRL5_ovpscl_ictrl_sel(r32,v)     _BFSET_(r32,10, 9,v)
    #define   GET16VIPSCLTOP_CTRL5_ovpscl_ictrl_sel(r16)       _BFGET_(r16,10, 9)
    #define   SET16VIPSCLTOP_CTRL5_ovpscl_ictrl_sel(r16,v)     _BFSET_(r16,10, 9,v)

    #define   GET32VIPSCLTOP_CTRL5_idata_frmt_ctrl(r32)        _BFGET_(r32,11,11)
    #define   SET32VIPSCLTOP_CTRL5_idata_frmt_ctrl(r32,v)      _BFSET_(r32,11,11,v)
    #define   GET16VIPSCLTOP_CTRL5_idata_frmt_ctrl(r16)        _BFGET_(r16,11,11)
    #define   SET16VIPSCLTOP_CTRL5_idata_frmt_ctrl(r16,v)      _BFSET_(r16,11,11,v)

    #define   GET32VIPSCLTOP_CTRL5_clk_en_sel(r32)             _BFGET_(r32,12,12)
    #define   SET32VIPSCLTOP_CTRL5_clk_en_sel(r32,v)           _BFSET_(r32,12,12,v)
    #define   GET16VIPSCLTOP_CTRL5_clk_en_sel(r16)             _BFGET_(r16,12,12)
    #define   SET16VIPSCLTOP_CTRL5_clk_en_sel(r16,v)           _BFSET_(r16,12,12,v)

    #define   GET32VIPSCLTOP_CTRL5_hde_msk_en(r32)             _BFGET_(r32,13,13)
    #define   SET32VIPSCLTOP_CTRL5_hde_msk_en(r32,v)           _BFSET_(r32,13,13,v)
    #define   GET16VIPSCLTOP_CTRL5_hde_msk_en(r16)             _BFGET_(r16,13,13)
    #define   SET16VIPSCLTOP_CTRL5_hde_msk_en(r16,v)           _BFSET_(r16,13,13,v)

    #define   GET32VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl(r32)     _BFGET_(r32,14,14)
    #define   SET32VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl(r32,v)   _BFSET_(r32,14,14,v)
    #define   GET16VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl(r16)     _BFGET_(r16,14,14)
    #define   SET16VIPSCLTOP_CTRL5_sclOfifo_Y_stsCtrl(r16,v)   _BFSET_(r16,14,14,v)

    #define   GET32VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl(r32)     _BFGET_(r32,15,15)
    #define   SET32VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl(r32,v)   _BFSET_(r32,15,15,v)
    #define   GET16VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl(r16)     _BFGET_(r16,15,15)
    #define   SET16VIPSCLTOP_CTRL5_sclOifo_UV_stsCtrl(r16,v)   _BFSET_(r16,15,15,v)

    #define     w32VIPSCLTOP_CTRL5                             {\
            UNSG32 uCTRL5_ofifo_sts0_ctrl                      :  1;\
            UNSG32 uCTRL5_ofifo_sts1_ctrl                      :  1;\
            UNSG32 uCTRL5_sclOutrdy_sts0_en                    :  1;\
            UNSG32 uCTRL5_sclOutrdy_sts1_en                    :  1;\
            UNSG32 uCTRL5_luma_data_sel                        :  2;\
            UNSG32 uCTRL5_chroma_data_sel                      :  1;\
            UNSG32 uCTRL5_hde_initval0                         :  1;\
            UNSG32 uCTRL5_hde_initval1                         :  1;\
            UNSG32 uCTRL5_ovpscl_ictrl_sel                     :  2;\
            UNSG32 uCTRL5_idata_frmt_ctrl                      :  1;\
            UNSG32 uCTRL5_clk_en_sel                           :  1;\
            UNSG32 uCTRL5_hde_msk_en                           :  1;\
            UNSG32 uCTRL5_sclOfifo_Y_stsCtrl                   :  1;\
            UNSG32 uCTRL5_sclOifo_UV_stsCtrl                   :  1;\
            UNSG32 RSVDx14_b16                                 : 16;\
          }
    union { UNSG32 u32VIPSCLTOP_CTRL5;
            struct w32VIPSCLTOP_CTRL5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_STS0_ipOvpTg_vcnt_sts(r32)        _BFGET_(r32,15, 0)
    #define   SET32VIPSCLTOP_STS0_ipOvpTg_vcnt_sts(r32,v)      _BFSET_(r32,15, 0,v)
    #define   GET16VIPSCLTOP_STS0_ipOvpTg_vcnt_sts(r16)        _BFGET_(r16,15, 0)
    #define   SET16VIPSCLTOP_STS0_ipOvpTg_vcnt_sts(r16,v)      _BFSET_(r16,15, 0,v)

    #define     w32VIPSCLTOP_STS0                              {\
            UNSG32 uSTS0_ipOvpTg_vcnt_sts                      : 16;\
            UNSG32 RSVDx18_b16                                 : 16;\
          }
    union { UNSG32 u32VIPSCLTOP_STS0;
            struct w32VIPSCLTOP_STS0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_STS1_OVPSCL_Y_oTg(r32)            _BFGET_(r32,15, 0)
    #define   SET32VIPSCLTOP_STS1_OVPSCL_Y_oTg(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16VIPSCLTOP_STS1_OVPSCL_Y_oTg(r16)            _BFGET_(r16,15, 0)
    #define   SET16VIPSCLTOP_STS1_OVPSCL_Y_oTg(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32VIPSCLTOP_STS1_OVPSCL_UV_oTg(r32)           _BFGET_(r32,31,16)
    #define   SET32VIPSCLTOP_STS1_OVPSCL_UV_oTg(r32,v)         _BFSET_(r32,31,16,v)
    #define   GET16VIPSCLTOP_STS1_OVPSCL_UV_oTg(r16)           _BFGET_(r16,15, 0)
    #define   SET16VIPSCLTOP_STS1_OVPSCL_UV_oTg(r16,v)         _BFSET_(r16,15, 0,v)

    #define     w32VIPSCLTOP_STS1                              {\
            UNSG32 uSTS1_OVPSCL_Y_oTg                          : 16;\
            UNSG32 uSTS1_OVPSCL_UV_oTg                         : 16;\
          }
    union { UNSG32 u32VIPSCLTOP_STS1;
            struct w32VIPSCLTOP_STS1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF(r32)         _BFGET_(r32, 0, 0)
    #define   SET32VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF(r16)         _BFGET_(r16, 0, 0)
    #define   SET16VIPSCLTOP_INTR_EN_OVPSCL_Y_EOF(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF(r32)        _BFGET_(r32, 1, 1)
    #define   SET32VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF(r16)        _BFGET_(r16, 1, 1)
    #define   SET16VIPSCLTOP_INTR_EN_OVPSCL_UV_EOF(r16,v)      _BFSET_(r16, 1, 1,v)

    #define     w32VIPSCLTOP_INTR_EN                           {\
            UNSG32 uINTR_EN_OVPSCL_Y_EOF                       :  1;\
            UNSG32 uINTR_EN_OVPSCL_UV_EOF                      :  1;\
            UNSG32 RSVDx20_b2                                  : 30;\
          }
    union { UNSG32 u32VIPSCLTOP_INTR_EN;
            struct w32VIPSCLTOP_INTR_EN;
          };
    ///////////////////////////////////////////////////////////
              SIE_OVPSCL                                       ie_OVPSCL_Y;
    ///////////////////////////////////////////////////////////
              SIE_OVPSCL                                       ie_OVPSCL_UV;
    ///////////////////////////////////////////////////////////
              SIE_TG                                           ie_OVPSCL_OTG_Y;
    ///////////////////////////////////////////////////////////
              SIE_TG                                           ie_OVPSCL_OTG_UV;
    ///////////////////////////////////////////////////////////
    } SIE_VIPSCLTOP;

    typedef union  T32VIPSCLTOP_CTRL0
          { UNSG32 u32;
            struct w32VIPSCLTOP_CTRL0;
                 } T32VIPSCLTOP_CTRL0;
    typedef union  T32VIPSCLTOP_CTRL1
          { UNSG32 u32;
            struct w32VIPSCLTOP_CTRL1;
                 } T32VIPSCLTOP_CTRL1;
    typedef union  T32VIPSCLTOP_CTRL2
          { UNSG32 u32;
            struct w32VIPSCLTOP_CTRL2;
                 } T32VIPSCLTOP_CTRL2;
    typedef union  T32VIPSCLTOP_CTRL3
          { UNSG32 u32;
            struct w32VIPSCLTOP_CTRL3;
                 } T32VIPSCLTOP_CTRL3;
    typedef union  T32VIPSCLTOP_CTRL4
          { UNSG32 u32;
            struct w32VIPSCLTOP_CTRL4;
                 } T32VIPSCLTOP_CTRL4;
    typedef union  T32VIPSCLTOP_CTRL5
          { UNSG32 u32;
            struct w32VIPSCLTOP_CTRL5;
                 } T32VIPSCLTOP_CTRL5;
    typedef union  T32VIPSCLTOP_STS0
          { UNSG32 u32;
            struct w32VIPSCLTOP_STS0;
                 } T32VIPSCLTOP_STS0;
    typedef union  T32VIPSCLTOP_STS1
          { UNSG32 u32;
            struct w32VIPSCLTOP_STS1;
                 } T32VIPSCLTOP_STS1;
    typedef union  T32VIPSCLTOP_INTR_EN
          { UNSG32 u32;
            struct w32VIPSCLTOP_INTR_EN;
                 } T32VIPSCLTOP_INTR_EN;
    ///////////////////////////////////////////////////////////

    typedef union  TVIPSCLTOP_CTRL0
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_CTRL0;
                   };
                 } TVIPSCLTOP_CTRL0;
    typedef union  TVIPSCLTOP_CTRL1
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_CTRL1;
                   };
                 } TVIPSCLTOP_CTRL1;
    typedef union  TVIPSCLTOP_CTRL2
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_CTRL2;
                   };
                 } TVIPSCLTOP_CTRL2;
    typedef union  TVIPSCLTOP_CTRL3
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_CTRL3;
                   };
                 } TVIPSCLTOP_CTRL3;
    typedef union  TVIPSCLTOP_CTRL4
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_CTRL4;
                   };
                 } TVIPSCLTOP_CTRL4;
    typedef union  TVIPSCLTOP_CTRL5
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_CTRL5;
                   };
                 } TVIPSCLTOP_CTRL5;
    typedef union  TVIPSCLTOP_STS0
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_STS0;
                   };
                 } TVIPSCLTOP_STS0;
    typedef union  TVIPSCLTOP_STS1
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_STS1;
                   };
                 } TVIPSCLTOP_STS1;
    typedef union  TVIPSCLTOP_INTR_EN
          { UNSG32 u32[1];
            struct {
            struct w32VIPSCLTOP_INTR_EN;
                   };
                 } TVIPSCLTOP_INTR_EN;

    ///////////////////////////////////////////////////////////
     SIGN32 VIPSCLTOP_drvrd(SIE_VIPSCLTOP *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 VIPSCLTOP_drvwr(SIE_VIPSCLTOP *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void VIPSCLTOP_reset(SIE_VIPSCLTOP *p);
     SIGN32 VIPSCLTOP_cmp  (SIE_VIPSCLTOP *p, SIE_VIPSCLTOP *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define VIPSCLTOP_check(p,pie,pfx,hLOG) VIPSCLTOP_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define VIPSCLTOP_print(p,    pfx,hLOG) VIPSCLTOP_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: VIPSCLTOP
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE EDR_HDMIRX              biu              (4,4)
///     ###
///     * Register specification of interface
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 1  enable                    0x0
///                                    ###
///                                    * Enable Descrambler
///                                    ###
///               %unsigned 1  dv_mode                   0x0
///                                    ###
///                                    * 1: Enable EDR metada write to DHUB
///                                    * 0: Disable metadata DHUB write
///                                    ###
///               %unsigned 1  ycswap_in                 0x0
///                                    ###
///                                    * 1: Enable Y and C order swap at input data bus
///                                    * 0: Disable input YC swap
///                                    ###
///               %unsigned 1  ycswap_out                0x0
///                                    ###
///                                    * 1: Enable Y and C order swap at output data bus
///                                    * 0: Disable output YC swap
///                                    ###
///               %unsigned 1  retain_lsb                0x1
///                                    ###
///                                    * 1: Retain the LSB data of YC data, i.e[0] chroma bit unchanged.
///                                    * 0:Force 0 on to LSB bit of YC data, i.e[0] chroma bit fixed to 0
///                                    ###
///               %unsigned 1  tunnel_on                 0x0
///                                    ###
///                                    * 1: Enable RGB8bit to YUV422-12bit channel de-tunneling from the HDMI-RX 24bit channel
///                                    * 0: Receive YUV422-12bit from HDMI-RX 24bit channel
///                                    ###
///               %unsigned 1  bgr_rgb                   0x0
///                                    ###
///                                    * 1: RGB input to BGR input order change
///                                    * 0: BGR input
///                                    ###
///               %unsigned 1  crc32ord                  0x0
///                                    ###
///                                    * CRC check byte order
///                                    * 1:Little endian order {crc[7:0],crc[15:8],crc[23:16],crc[31:24]}
///                                    * 0:Big endian order crc[31:0]
///                                    ###
///               %unsigned 1  auto_mdlength             0x0
///                                    ###
///                                    * 1: Automatic meta-data extracted length to fix the Metadata bytes per frame.
///                                    * 0: Use firmware programmed max_md_wr to fix the Metadata bytes per frame.
///                                    ###
///               %unsigned 1  mode_mdlength             0x0
///                                    ###
///                                    * 1: meta-data byte length as defined in extracted meta-data packet type. This is dynamic/variable metadata packet size. Not to use if Dhub write client requires fixed metadata information on every frame.
///                                    * 0: meta-data length as programmed by max_md_wr/auto as   opted by auto_mdlength selection. Fixed metadata information on every frame. Last packet will be repeated if metadata information is less than programmed bytelength.
///                                    ###
///               %unsigned 6  dummy                     0x0
///                                    ###
///                                    * Not used
///                                    ###
///               %unsigned 16 max_md_wr                 0x3200
///                                    ###
///                                    * Max size of Dolby Metadata bytes per frame, while writing multi-metadata packets in to DHUB. See section 2.4 in programming guide.
///                                    ###
///     @ 0x00004 CFG1                 (R-)
///               %unsigned 1  CRC_CHK                   
///                                    ###
///                                    * CRC check status, updated by the internal CRC check Interrupt
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 CFG2                 (R-)
///               %unsigned 8  HEAD_BYTE0                
///                                    ###
///                                    * [0]    no_md
///                                    * [3:1] metadata_version
///                                    * [5:4] metadata_type
///                                    * [7:6] packet_type
///                                    * Refer section 1.4.2 of this document
///                                    ###
///               %unsigned 8  HEAD_BYTE1                
///                                    ###
///                                    * [3:0] current_metadata_id
///                                    * [7:4] affected_metadata_id
///                                    * Refer section 1.4.3 of this document
///                                    ###
///               %unsigned 8  HEAD_BYTE2                
///                                    ###
///                                    * [0] EOS
///                                    * [7:1] RESERVED
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0000C CFG3                 (R-)
///               %unsigned 8  BODY_BYTE0                
///                                    ###
///                                    * metadata_length_hi
///                                    * MSB byte of Metadata length
///                                    ###
///               %unsigned 8  BODY_BYTE1                
///                                    ###
///                                    * metadata_length_lo
///                                    * LSB byte of metadata length
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      16B, bits:      73b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_EDR_HDMIRX
#define h_EDR_HDMIRX (){}

    #define     RA_EDR_HDMIRX_CFG0                             0x0000

    #define     BA_EDR_HDMIRX_CFG0_enable                      0x0000
    #define     B16EDR_HDMIRX_CFG0_enable                      0x0000
    #define   LSb32EDR_HDMIRX_CFG0_enable                         0
    #define   LSb16EDR_HDMIRX_CFG0_enable                         0
    #define       bEDR_HDMIRX_CFG0_enable                      1
    #define   MSK32EDR_HDMIRX_CFG0_enable                         0x00000001

    #define     BA_EDR_HDMIRX_CFG0_dv_mode                     0x0000
    #define     B16EDR_HDMIRX_CFG0_dv_mode                     0x0000
    #define   LSb32EDR_HDMIRX_CFG0_dv_mode                        1
    #define   LSb16EDR_HDMIRX_CFG0_dv_mode                        1
    #define       bEDR_HDMIRX_CFG0_dv_mode                     1
    #define   MSK32EDR_HDMIRX_CFG0_dv_mode                        0x00000002

    #define     BA_EDR_HDMIRX_CFG0_ycswap_in                   0x0000
    #define     B16EDR_HDMIRX_CFG0_ycswap_in                   0x0000
    #define   LSb32EDR_HDMIRX_CFG0_ycswap_in                      2
    #define   LSb16EDR_HDMIRX_CFG0_ycswap_in                      2
    #define       bEDR_HDMIRX_CFG0_ycswap_in                   1
    #define   MSK32EDR_HDMIRX_CFG0_ycswap_in                      0x00000004

    #define     BA_EDR_HDMIRX_CFG0_ycswap_out                  0x0000
    #define     B16EDR_HDMIRX_CFG0_ycswap_out                  0x0000
    #define   LSb32EDR_HDMIRX_CFG0_ycswap_out                     3
    #define   LSb16EDR_HDMIRX_CFG0_ycswap_out                     3
    #define       bEDR_HDMIRX_CFG0_ycswap_out                  1
    #define   MSK32EDR_HDMIRX_CFG0_ycswap_out                     0x00000008

    #define     BA_EDR_HDMIRX_CFG0_retain_lsb                  0x0000
    #define     B16EDR_HDMIRX_CFG0_retain_lsb                  0x0000
    #define   LSb32EDR_HDMIRX_CFG0_retain_lsb                     4
    #define   LSb16EDR_HDMIRX_CFG0_retain_lsb                     4
    #define       bEDR_HDMIRX_CFG0_retain_lsb                  1
    #define   MSK32EDR_HDMIRX_CFG0_retain_lsb                     0x00000010

    #define     BA_EDR_HDMIRX_CFG0_tunnel_on                   0x0000
    #define     B16EDR_HDMIRX_CFG0_tunnel_on                   0x0000
    #define   LSb32EDR_HDMIRX_CFG0_tunnel_on                      5
    #define   LSb16EDR_HDMIRX_CFG0_tunnel_on                      5
    #define       bEDR_HDMIRX_CFG0_tunnel_on                   1
    #define   MSK32EDR_HDMIRX_CFG0_tunnel_on                      0x00000020

    #define     BA_EDR_HDMIRX_CFG0_bgr_rgb                     0x0000
    #define     B16EDR_HDMIRX_CFG0_bgr_rgb                     0x0000
    #define   LSb32EDR_HDMIRX_CFG0_bgr_rgb                        6
    #define   LSb16EDR_HDMIRX_CFG0_bgr_rgb                        6
    #define       bEDR_HDMIRX_CFG0_bgr_rgb                     1
    #define   MSK32EDR_HDMIRX_CFG0_bgr_rgb                        0x00000040

    #define     BA_EDR_HDMIRX_CFG0_crc32ord                    0x0000
    #define     B16EDR_HDMIRX_CFG0_crc32ord                    0x0000
    #define   LSb32EDR_HDMIRX_CFG0_crc32ord                       7
    #define   LSb16EDR_HDMIRX_CFG0_crc32ord                       7
    #define       bEDR_HDMIRX_CFG0_crc32ord                    1
    #define   MSK32EDR_HDMIRX_CFG0_crc32ord                       0x00000080

    #define     BA_EDR_HDMIRX_CFG0_auto_mdlength               0x0001
    #define     B16EDR_HDMIRX_CFG0_auto_mdlength               0x0000
    #define   LSb32EDR_HDMIRX_CFG0_auto_mdlength                  8
    #define   LSb16EDR_HDMIRX_CFG0_auto_mdlength                  8
    #define       bEDR_HDMIRX_CFG0_auto_mdlength               1
    #define   MSK32EDR_HDMIRX_CFG0_auto_mdlength                  0x00000100

    #define     BA_EDR_HDMIRX_CFG0_mode_mdlength               0x0001
    #define     B16EDR_HDMIRX_CFG0_mode_mdlength               0x0000
    #define   LSb32EDR_HDMIRX_CFG0_mode_mdlength                  9
    #define   LSb16EDR_HDMIRX_CFG0_mode_mdlength                  9
    #define       bEDR_HDMIRX_CFG0_mode_mdlength               1
    #define   MSK32EDR_HDMIRX_CFG0_mode_mdlength                  0x00000200

    #define     BA_EDR_HDMIRX_CFG0_dummy                       0x0001
    #define     B16EDR_HDMIRX_CFG0_dummy                       0x0000
    #define   LSb32EDR_HDMIRX_CFG0_dummy                          10
    #define   LSb16EDR_HDMIRX_CFG0_dummy                          10
    #define       bEDR_HDMIRX_CFG0_dummy                       6
    #define   MSK32EDR_HDMIRX_CFG0_dummy                          0x0000FC00

    #define     BA_EDR_HDMIRX_CFG0_max_md_wr                   0x0002
    #define     B16EDR_HDMIRX_CFG0_max_md_wr                   0x0002
    #define   LSb32EDR_HDMIRX_CFG0_max_md_wr                      16
    #define   LSb16EDR_HDMIRX_CFG0_max_md_wr                      0
    #define       bEDR_HDMIRX_CFG0_max_md_wr                   16
    #define   MSK32EDR_HDMIRX_CFG0_max_md_wr                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_EDR_HDMIRX_CFG1                             0x0004

    #define     BA_EDR_HDMIRX_CFG1_CRC_CHK                     0x0004
    #define     B16EDR_HDMIRX_CFG1_CRC_CHK                     0x0004
    #define   LSb32EDR_HDMIRX_CFG1_CRC_CHK                        0
    #define   LSb16EDR_HDMIRX_CFG1_CRC_CHK                        0
    #define       bEDR_HDMIRX_CFG1_CRC_CHK                     1
    #define   MSK32EDR_HDMIRX_CFG1_CRC_CHK                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_EDR_HDMIRX_CFG2                             0x0008

    #define     BA_EDR_HDMIRX_CFG2_HEAD_BYTE0                  0x0008
    #define     B16EDR_HDMIRX_CFG2_HEAD_BYTE0                  0x0008
    #define   LSb32EDR_HDMIRX_CFG2_HEAD_BYTE0                     0
    #define   LSb16EDR_HDMIRX_CFG2_HEAD_BYTE0                     0
    #define       bEDR_HDMIRX_CFG2_HEAD_BYTE0                  8
    #define   MSK32EDR_HDMIRX_CFG2_HEAD_BYTE0                     0x000000FF

    #define     BA_EDR_HDMIRX_CFG2_HEAD_BYTE1                  0x0009
    #define     B16EDR_HDMIRX_CFG2_HEAD_BYTE1                  0x0008
    #define   LSb32EDR_HDMIRX_CFG2_HEAD_BYTE1                     8
    #define   LSb16EDR_HDMIRX_CFG2_HEAD_BYTE1                     8
    #define       bEDR_HDMIRX_CFG2_HEAD_BYTE1                  8
    #define   MSK32EDR_HDMIRX_CFG2_HEAD_BYTE1                     0x0000FF00

    #define     BA_EDR_HDMIRX_CFG2_HEAD_BYTE2                  0x000A
    #define     B16EDR_HDMIRX_CFG2_HEAD_BYTE2                  0x000A
    #define   LSb32EDR_HDMIRX_CFG2_HEAD_BYTE2                     16
    #define   LSb16EDR_HDMIRX_CFG2_HEAD_BYTE2                     0
    #define       bEDR_HDMIRX_CFG2_HEAD_BYTE2                  8
    #define   MSK32EDR_HDMIRX_CFG2_HEAD_BYTE2                     0x00FF0000
    ///////////////////////////////////////////////////////////
    #define     RA_EDR_HDMIRX_CFG3                             0x000C

    #define     BA_EDR_HDMIRX_CFG3_BODY_BYTE0                  0x000C
    #define     B16EDR_HDMIRX_CFG3_BODY_BYTE0                  0x000C
    #define   LSb32EDR_HDMIRX_CFG3_BODY_BYTE0                     0
    #define   LSb16EDR_HDMIRX_CFG3_BODY_BYTE0                     0
    #define       bEDR_HDMIRX_CFG3_BODY_BYTE0                  8
    #define   MSK32EDR_HDMIRX_CFG3_BODY_BYTE0                     0x000000FF

    #define     BA_EDR_HDMIRX_CFG3_BODY_BYTE1                  0x000D
    #define     B16EDR_HDMIRX_CFG3_BODY_BYTE1                  0x000C
    #define   LSb32EDR_HDMIRX_CFG3_BODY_BYTE1                     8
    #define   LSb16EDR_HDMIRX_CFG3_BODY_BYTE1                     8
    #define       bEDR_HDMIRX_CFG3_BODY_BYTE1                  8
    #define   MSK32EDR_HDMIRX_CFG3_BODY_BYTE1                     0x0000FF00
    ///////////////////////////////////////////////////////////

    typedef struct SIE_EDR_HDMIRX {
    ///////////////////////////////////////////////////////////
    #define   GET32EDR_HDMIRX_CFG0_enable(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32EDR_HDMIRX_CFG0_enable(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16EDR_HDMIRX_CFG0_enable(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16EDR_HDMIRX_CFG0_enable(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32EDR_HDMIRX_CFG0_dv_mode(r32)                _BFGET_(r32, 1, 1)
    #define   SET32EDR_HDMIRX_CFG0_dv_mode(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16EDR_HDMIRX_CFG0_dv_mode(r16)                _BFGET_(r16, 1, 1)
    #define   SET16EDR_HDMIRX_CFG0_dv_mode(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32EDR_HDMIRX_CFG0_ycswap_in(r32)              _BFGET_(r32, 2, 2)
    #define   SET32EDR_HDMIRX_CFG0_ycswap_in(r32,v)            _BFSET_(r32, 2, 2,v)
    #define   GET16EDR_HDMIRX_CFG0_ycswap_in(r16)              _BFGET_(r16, 2, 2)
    #define   SET16EDR_HDMIRX_CFG0_ycswap_in(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32EDR_HDMIRX_CFG0_ycswap_out(r32)             _BFGET_(r32, 3, 3)
    #define   SET32EDR_HDMIRX_CFG0_ycswap_out(r32,v)           _BFSET_(r32, 3, 3,v)
    #define   GET16EDR_HDMIRX_CFG0_ycswap_out(r16)             _BFGET_(r16, 3, 3)
    #define   SET16EDR_HDMIRX_CFG0_ycswap_out(r16,v)           _BFSET_(r16, 3, 3,v)

    #define   GET32EDR_HDMIRX_CFG0_retain_lsb(r32)             _BFGET_(r32, 4, 4)
    #define   SET32EDR_HDMIRX_CFG0_retain_lsb(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16EDR_HDMIRX_CFG0_retain_lsb(r16)             _BFGET_(r16, 4, 4)
    #define   SET16EDR_HDMIRX_CFG0_retain_lsb(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32EDR_HDMIRX_CFG0_tunnel_on(r32)              _BFGET_(r32, 5, 5)
    #define   SET32EDR_HDMIRX_CFG0_tunnel_on(r32,v)            _BFSET_(r32, 5, 5,v)
    #define   GET16EDR_HDMIRX_CFG0_tunnel_on(r16)              _BFGET_(r16, 5, 5)
    #define   SET16EDR_HDMIRX_CFG0_tunnel_on(r16,v)            _BFSET_(r16, 5, 5,v)

    #define   GET32EDR_HDMIRX_CFG0_bgr_rgb(r32)                _BFGET_(r32, 6, 6)
    #define   SET32EDR_HDMIRX_CFG0_bgr_rgb(r32,v)              _BFSET_(r32, 6, 6,v)
    #define   GET16EDR_HDMIRX_CFG0_bgr_rgb(r16)                _BFGET_(r16, 6, 6)
    #define   SET16EDR_HDMIRX_CFG0_bgr_rgb(r16,v)              _BFSET_(r16, 6, 6,v)

    #define   GET32EDR_HDMIRX_CFG0_crc32ord(r32)               _BFGET_(r32, 7, 7)
    #define   SET32EDR_HDMIRX_CFG0_crc32ord(r32,v)             _BFSET_(r32, 7, 7,v)
    #define   GET16EDR_HDMIRX_CFG0_crc32ord(r16)               _BFGET_(r16, 7, 7)
    #define   SET16EDR_HDMIRX_CFG0_crc32ord(r16,v)             _BFSET_(r16, 7, 7,v)

    #define   GET32EDR_HDMIRX_CFG0_auto_mdlength(r32)          _BFGET_(r32, 8, 8)
    #define   SET32EDR_HDMIRX_CFG0_auto_mdlength(r32,v)        _BFSET_(r32, 8, 8,v)
    #define   GET16EDR_HDMIRX_CFG0_auto_mdlength(r16)          _BFGET_(r16, 8, 8)
    #define   SET16EDR_HDMIRX_CFG0_auto_mdlength(r16,v)        _BFSET_(r16, 8, 8,v)

    #define   GET32EDR_HDMIRX_CFG0_mode_mdlength(r32)          _BFGET_(r32, 9, 9)
    #define   SET32EDR_HDMIRX_CFG0_mode_mdlength(r32,v)        _BFSET_(r32, 9, 9,v)
    #define   GET16EDR_HDMIRX_CFG0_mode_mdlength(r16)          _BFGET_(r16, 9, 9)
    #define   SET16EDR_HDMIRX_CFG0_mode_mdlength(r16,v)        _BFSET_(r16, 9, 9,v)

    #define   GET32EDR_HDMIRX_CFG0_dummy(r32)                  _BFGET_(r32,15,10)
    #define   SET32EDR_HDMIRX_CFG0_dummy(r32,v)                _BFSET_(r32,15,10,v)
    #define   GET16EDR_HDMIRX_CFG0_dummy(r16)                  _BFGET_(r16,15,10)
    #define   SET16EDR_HDMIRX_CFG0_dummy(r16,v)                _BFSET_(r16,15,10,v)

    #define   GET32EDR_HDMIRX_CFG0_max_md_wr(r32)              _BFGET_(r32,31,16)
    #define   SET32EDR_HDMIRX_CFG0_max_md_wr(r32,v)            _BFSET_(r32,31,16,v)
    #define   GET16EDR_HDMIRX_CFG0_max_md_wr(r16)              _BFGET_(r16,15, 0)
    #define   SET16EDR_HDMIRX_CFG0_max_md_wr(r16,v)            _BFSET_(r16,15, 0,v)

    #define     w32EDR_HDMIRX_CFG0                             {\
            UNSG32 uCFG0_enable                                :  1;\
            UNSG32 uCFG0_dv_mode                               :  1;\
            UNSG32 uCFG0_ycswap_in                             :  1;\
            UNSG32 uCFG0_ycswap_out                            :  1;\
            UNSG32 uCFG0_retain_lsb                            :  1;\
            UNSG32 uCFG0_tunnel_on                             :  1;\
            UNSG32 uCFG0_bgr_rgb                               :  1;\
            UNSG32 uCFG0_crc32ord                              :  1;\
            UNSG32 uCFG0_auto_mdlength                         :  1;\
            UNSG32 uCFG0_mode_mdlength                         :  1;\
            UNSG32 uCFG0_dummy                                 :  6;\
            UNSG32 uCFG0_max_md_wr                             : 16;\
          }
    union { UNSG32 u32EDR_HDMIRX_CFG0;
            struct w32EDR_HDMIRX_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32EDR_HDMIRX_CFG1_CRC_CHK(r32)                _BFGET_(r32, 0, 0)
    #define   SET32EDR_HDMIRX_CFG1_CRC_CHK(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16EDR_HDMIRX_CFG1_CRC_CHK(r16)                _BFGET_(r16, 0, 0)
    #define   SET16EDR_HDMIRX_CFG1_CRC_CHK(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32EDR_HDMIRX_CFG1                             {\
            UNSG32 uCFG1_CRC_CHK                               :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32EDR_HDMIRX_CFG1;
            struct w32EDR_HDMIRX_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32EDR_HDMIRX_CFG2_HEAD_BYTE0(r32)             _BFGET_(r32, 7, 0)
    #define   SET32EDR_HDMIRX_CFG2_HEAD_BYTE0(r32,v)           _BFSET_(r32, 7, 0,v)
    #define   GET16EDR_HDMIRX_CFG2_HEAD_BYTE0(r16)             _BFGET_(r16, 7, 0)
    #define   SET16EDR_HDMIRX_CFG2_HEAD_BYTE0(r16,v)           _BFSET_(r16, 7, 0,v)

    #define   GET32EDR_HDMIRX_CFG2_HEAD_BYTE1(r32)             _BFGET_(r32,15, 8)
    #define   SET32EDR_HDMIRX_CFG2_HEAD_BYTE1(r32,v)           _BFSET_(r32,15, 8,v)
    #define   GET16EDR_HDMIRX_CFG2_HEAD_BYTE1(r16)             _BFGET_(r16,15, 8)
    #define   SET16EDR_HDMIRX_CFG2_HEAD_BYTE1(r16,v)           _BFSET_(r16,15, 8,v)

    #define   GET32EDR_HDMIRX_CFG2_HEAD_BYTE2(r32)             _BFGET_(r32,23,16)
    #define   SET32EDR_HDMIRX_CFG2_HEAD_BYTE2(r32,v)           _BFSET_(r32,23,16,v)
    #define   GET16EDR_HDMIRX_CFG2_HEAD_BYTE2(r16)             _BFGET_(r16, 7, 0)
    #define   SET16EDR_HDMIRX_CFG2_HEAD_BYTE2(r16,v)           _BFSET_(r16, 7, 0,v)

    #define     w32EDR_HDMIRX_CFG2                             {\
            UNSG32 uCFG2_HEAD_BYTE0                            :  8;\
            UNSG32 uCFG2_HEAD_BYTE1                            :  8;\
            UNSG32 uCFG2_HEAD_BYTE2                            :  8;\
            UNSG32 RSVDx8_b24                                  :  8;\
          }
    union { UNSG32 u32EDR_HDMIRX_CFG2;
            struct w32EDR_HDMIRX_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32EDR_HDMIRX_CFG3_BODY_BYTE0(r32)             _BFGET_(r32, 7, 0)
    #define   SET32EDR_HDMIRX_CFG3_BODY_BYTE0(r32,v)           _BFSET_(r32, 7, 0,v)
    #define   GET16EDR_HDMIRX_CFG3_BODY_BYTE0(r16)             _BFGET_(r16, 7, 0)
    #define   SET16EDR_HDMIRX_CFG3_BODY_BYTE0(r16,v)           _BFSET_(r16, 7, 0,v)

    #define   GET32EDR_HDMIRX_CFG3_BODY_BYTE1(r32)             _BFGET_(r32,15, 8)
    #define   SET32EDR_HDMIRX_CFG3_BODY_BYTE1(r32,v)           _BFSET_(r32,15, 8,v)
    #define   GET16EDR_HDMIRX_CFG3_BODY_BYTE1(r16)             _BFGET_(r16,15, 8)
    #define   SET16EDR_HDMIRX_CFG3_BODY_BYTE1(r16,v)           _BFSET_(r16,15, 8,v)

    #define     w32EDR_HDMIRX_CFG3                             {\
            UNSG32 uCFG3_BODY_BYTE0                            :  8;\
            UNSG32 uCFG3_BODY_BYTE1                            :  8;\
            UNSG32 RSVDxC_b16                                  : 16;\
          }
    union { UNSG32 u32EDR_HDMIRX_CFG3;
            struct w32EDR_HDMIRX_CFG3;
          };
    ///////////////////////////////////////////////////////////
    } SIE_EDR_HDMIRX;

    typedef union  T32EDR_HDMIRX_CFG0
          { UNSG32 u32;
            struct w32EDR_HDMIRX_CFG0;
                 } T32EDR_HDMIRX_CFG0;
    typedef union  T32EDR_HDMIRX_CFG1
          { UNSG32 u32;
            struct w32EDR_HDMIRX_CFG1;
                 } T32EDR_HDMIRX_CFG1;
    typedef union  T32EDR_HDMIRX_CFG2
          { UNSG32 u32;
            struct w32EDR_HDMIRX_CFG2;
                 } T32EDR_HDMIRX_CFG2;
    typedef union  T32EDR_HDMIRX_CFG3
          { UNSG32 u32;
            struct w32EDR_HDMIRX_CFG3;
                 } T32EDR_HDMIRX_CFG3;
    ///////////////////////////////////////////////////////////

    typedef union  TEDR_HDMIRX_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32EDR_HDMIRX_CFG0;
                   };
                 } TEDR_HDMIRX_CFG0;
    typedef union  TEDR_HDMIRX_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32EDR_HDMIRX_CFG1;
                   };
                 } TEDR_HDMIRX_CFG1;
    typedef union  TEDR_HDMIRX_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32EDR_HDMIRX_CFG2;
                   };
                 } TEDR_HDMIRX_CFG2;
    typedef union  TEDR_HDMIRX_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32EDR_HDMIRX_CFG3;
                   };
                 } TEDR_HDMIRX_CFG3;

    ///////////////////////////////////////////////////////////
     SIGN32 EDR_HDMIRX_drvrd(SIE_EDR_HDMIRX *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 EDR_HDMIRX_drvwr(SIE_EDR_HDMIRX *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void EDR_HDMIRX_reset(SIE_EDR_HDMIRX *p);
     SIGN32 EDR_HDMIRX_cmp  (SIE_EDR_HDMIRX *p, SIE_EDR_HDMIRX *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define EDR_HDMIRX_check(p,pie,pfx,hLOG) EDR_HDMIRX_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define EDR_HDMIRX_print(p,    pfx,hLOG) EDR_HDMIRX_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: EDR_HDMIRX
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SRAMPWR                                  (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  SD                        0x0
///                                    : ON                        0x0
///                                    : SHUTDWN                   0x1
///                                                 ###
///                                                 * Shut down mode achieves highest leakage reduction without data retention
///                                                 ###
///               %unsigned 1  DSLP                      0x0
///                                    : ON                        0x0
///                                    : DEEPSLP                   0x1
///                                                 ###
///                                                 * Deep sleep mode powers down the most of peripheral circuit for leakage reduction and retains memory
///                                                 * array content with lower voltage
///                                                 ###
///               %unsigned 1  SLP                       0x0
///                                    : ON                        0x0
///                                    : SLEEP                     0x1
///                                                 ###
///                                                 * Sleep mode powers down most peripheral circuit for leakage reduction with data retention
///                                                 ###
///               %%        29         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       3b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMPWR
#define h_SRAMPWR (){}

    #define     RA_SRAMPWR_ctrl                                0x0000

    #define     BA_SRAMPWR_ctrl_SD                             0x0000
    #define     B16SRAMPWR_ctrl_SD                             0x0000
    #define   LSb32SRAMPWR_ctrl_SD                                0
    #define   LSb16SRAMPWR_ctrl_SD                                0
    #define       bSRAMPWR_ctrl_SD                             1
    #define   MSK32SRAMPWR_ctrl_SD                                0x00000001
    #define        SRAMPWR_ctrl_SD_ON                                       0x0
    #define        SRAMPWR_ctrl_SD_SHUTDWN                                  0x1

    #define     BA_SRAMPWR_ctrl_DSLP                           0x0000
    #define     B16SRAMPWR_ctrl_DSLP                           0x0000
    #define   LSb32SRAMPWR_ctrl_DSLP                              1
    #define   LSb16SRAMPWR_ctrl_DSLP                              1
    #define       bSRAMPWR_ctrl_DSLP                           1
    #define   MSK32SRAMPWR_ctrl_DSLP                              0x00000002
    #define        SRAMPWR_ctrl_DSLP_ON                                     0x0
    #define        SRAMPWR_ctrl_DSLP_DEEPSLP                                0x1

    #define     BA_SRAMPWR_ctrl_SLP                            0x0000
    #define     B16SRAMPWR_ctrl_SLP                            0x0000
    #define   LSb32SRAMPWR_ctrl_SLP                               2
    #define   LSb16SRAMPWR_ctrl_SLP                               2
    #define       bSRAMPWR_ctrl_SLP                            1
    #define   MSK32SRAMPWR_ctrl_SLP                               0x00000004
    #define        SRAMPWR_ctrl_SLP_ON                                      0x0
    #define        SRAMPWR_ctrl_SLP_SLEEP                                   0x1
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMPWR {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMPWR_ctrl_SD(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32SRAMPWR_ctrl_SD(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16SRAMPWR_ctrl_SD(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16SRAMPWR_ctrl_SD(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define   GET32SRAMPWR_ctrl_DSLP(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32SRAMPWR_ctrl_DSLP(r32,v)                    _BFSET_(r32, 1, 1,v)
    #define   GET16SRAMPWR_ctrl_DSLP(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16SRAMPWR_ctrl_DSLP(r16,v)                    _BFSET_(r16, 1, 1,v)

    #define   GET32SRAMPWR_ctrl_SLP(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32SRAMPWR_ctrl_SLP(r32,v)                     _BFSET_(r32, 2, 2,v)
    #define   GET16SRAMPWR_ctrl_SLP(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16SRAMPWR_ctrl_SLP(r16,v)                     _BFSET_(r16, 2, 2,v)

    #define     w32SRAMPWR_ctrl                                {\
            UNSG32 uctrl_SD                                    :  1;\
            UNSG32 uctrl_DSLP                                  :  1;\
            UNSG32 uctrl_SLP                                   :  1;\
            UNSG32 RSVDx0_b3                                   : 29;\
          }
    union { UNSG32 u32SRAMPWR_ctrl;
            struct w32SRAMPWR_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMPWR;

    typedef union  T32SRAMPWR_ctrl
          { UNSG32 u32;
            struct w32SRAMPWR_ctrl;
                 } T32SRAMPWR_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMPWR_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32SRAMPWR_ctrl;
                   };
                 } TSRAMPWR_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMPWR_drvrd(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMPWR_drvwr(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMPWR_reset(SIE_SRAMPWR *p);
     SIGN32 SRAMPWR_cmp  (SIE_SRAMPWR *p, SIE_SRAMPWR *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMPWR_check(p,pie,pfx,hLOG) SRAMPWR_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAMPWR_print(p,    pfx,hLOG) SRAMPWR_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAMPWR
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SRAMRWTC                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl0                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  RF1P                      0x5
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  UHDRF1P                   0x9
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 10 (default)
///                                    ###
///               %unsigned 8  RF2P                      0x35
///                                    ###
///                                    * RCT [1:0] = 01 (default)
///                                    * WCT [3:2] = 01 (default)
///                                    * KP[6:4]      = 011 (default)
///                                    * Bit7 not used
///                                    ###
///               %unsigned 8  UHDRF2P                   0x1
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 00 (default)
///                                    * MTSEL [5:4] = 00 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///               %unsigned 8  UHDRF2P_ULVT              0x15
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 01 (default)
///                                    * MTSEL [5:4] = 01 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///     @ 0x00004 ctrl1                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  SHDMBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHDSBSR1P                 0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_SSEG            0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_USEG            0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P_CUSTM           0xD
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 11 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT0                0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT1                0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///     @ 0x00008 ctrl2                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  L1CACHE                   0x0
///                                    ###
///                                    * MCR[1:0] = 00 (default)
///                                    * MCW[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  DPSR2P                    0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 8  ROM                       0x15
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * PTSEL[3:2] = 01 (default)
///                                    * TRB[5:4]: 01
///                                    * TM[6]: 0
///                                    * Bit 7 not used
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      12B, bits:      80b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMRWTC
#define h_SRAMRWTC (){}

    #define     RA_SRAMRWTC_ctrl0                              0x0000

    #define     BA_SRAMRWTC_ctrl0_RF1P                         0x0000
    #define     B16SRAMRWTC_ctrl0_RF1P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF1P                            0
    #define   LSb16SRAMRWTC_ctrl0_RF1P                            0
    #define       bSRAMRWTC_ctrl0_RF1P                         4
    #define   MSK32SRAMRWTC_ctrl0_RF1P                            0x0000000F

    #define     BA_SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define     B16SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define   LSb32SRAMRWTC_ctrl0_UHDRF1P                         4
    #define   LSb16SRAMRWTC_ctrl0_UHDRF1P                         4
    #define       bSRAMRWTC_ctrl0_UHDRF1P                      4
    #define   MSK32SRAMRWTC_ctrl0_UHDRF1P                         0x000000F0

    #define     BA_SRAMRWTC_ctrl0_RF2P                         0x0001
    #define     B16SRAMRWTC_ctrl0_RF2P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF2P                            8
    #define   LSb16SRAMRWTC_ctrl0_RF2P                            8
    #define       bSRAMRWTC_ctrl0_RF2P                         8
    #define   MSK32SRAMRWTC_ctrl0_RF2P                            0x0000FF00

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define     B16SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P                         16
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P                         0
    #define       bSRAMRWTC_ctrl0_UHDRF2P                      8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P                         0x00FF0000

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0003
    #define     B16SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    24
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P_ULVT                    8
    #define       bSRAMRWTC_ctrl0_UHDRF2P_ULVT                 8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl1                              0x0004

    #define     BA_SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define   LSb16SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHDMBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDMBSR1P                       0x0000000F

    #define     BA_SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define   LSb16SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define       bSRAMRWTC_ctrl1_SHDSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDSBSR1P                       0x000000F0

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_SSEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  0x00000F00

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_USEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  0x0000F000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P                       16
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P                       0x000F0000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 20
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 4
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 0x00F00000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT0                      24
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT0                      8
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT0                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT0                      0x0F000000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT1                      28
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT1                      12
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT1                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT1                      0xF0000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl2                              0x0008

    #define     BA_SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define     B16SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define   LSb32SRAMRWTC_ctrl2_L1CACHE                         0
    #define   LSb16SRAMRWTC_ctrl2_L1CACHE                         0
    #define       bSRAMRWTC_ctrl2_L1CACHE                      4
    #define   MSK32SRAMRWTC_ctrl2_L1CACHE                         0x0000000F

    #define     BA_SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define     B16SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define   LSb32SRAMRWTC_ctrl2_DPSR2P                          4
    #define   LSb16SRAMRWTC_ctrl2_DPSR2P                          4
    #define       bSRAMRWTC_ctrl2_DPSR2P                       4
    #define   MSK32SRAMRWTC_ctrl2_DPSR2P                          0x000000F0

    #define     BA_SRAMRWTC_ctrl2_ROM                          0x0009
    #define     B16SRAMRWTC_ctrl2_ROM                          0x0008
    #define   LSb32SRAMRWTC_ctrl2_ROM                             8
    #define   LSb16SRAMRWTC_ctrl2_ROM                             8
    #define       bSRAMRWTC_ctrl2_ROM                          8
    #define   MSK32SRAMRWTC_ctrl2_ROM                             0x0000FF00
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMRWTC {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl0_RF1P(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl0_RF1P(r32,v)                  _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl0_RF1P(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl0_RF1P(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF1P(r32)                 _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl0_UHDRF1P(r32,v)               _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF1P(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl0_UHDRF1P(r16,v)               _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl0_RF2P(r32)                    _BFGET_(r32,15, 8)
    #define   SET32SRAMRWTC_ctrl0_RF2P(r32,v)                  _BFSET_(r32,15, 8,v)
    #define   GET16SRAMRWTC_ctrl0_RF2P(r16)                    _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl0_RF2P(r16,v)                  _BFSET_(r16,15, 8,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P(r32)                 _BFGET_(r32,23,16)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P(r32,v)               _BFSET_(r32,23,16,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P(r16,v)               _BFSET_(r16, 7, 0,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32)            _BFGET_(r32,31,24)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32,v)          _BFSET_(r32,31,24,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16)            _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16,v)          _BFSET_(r16,15, 8,v)

    #define     w32SRAMRWTC_ctrl0                              {\
            UNSG32 uctrl0_RF1P                                 :  4;\
            UNSG32 uctrl0_UHDRF1P                              :  4;\
            UNSG32 uctrl0_RF2P                                 :  8;\
            UNSG32 uctrl0_UHDRF2P                              :  8;\
            UNSG32 uctrl0_UHDRF2P_ULVT                         :  8;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl0;
            struct w32SRAMRWTC_ctrl0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl1_SHDMBSR1P(r32)               _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl1_SHDMBSR1P(r32,v)             _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl1_SHDMBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHDMBSR1P(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl1_SHDSBSR1P(r32)               _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl1_SHDSBSR1P(r32,v)             _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl1_SHDSBSR1P(r16)               _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHDSBSR1P(r16,v)             _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32)          _BFGET_(r32,11, 8)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32,v)        _BFSET_(r32,11, 8,v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16)          _BFGET_(r16,11, 8)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16,v)        _BFSET_(r16,11, 8,v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32)          _BFGET_(r32,15,12)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32,v)        _BFSET_(r32,15,12,v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16)          _BFGET_(r16,15,12)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16,v)        _BFSET_(r16,15,12,v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P(r32)               _BFGET_(r32,19,16)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P(r32,v)             _BFSET_(r32,19,16,v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32)         _BFGET_(r32,23,20)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32,v)       _BFSET_(r32,23,20,v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16)         _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16,v)       _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32)              _BFGET_(r32,27,24)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32,v)            _BFSET_(r32,27,24,v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16)              _BFGET_(r16,11, 8)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16,v)            _BFSET_(r16,11, 8,v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32)              _BFGET_(r32,31,28)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32,v)            _BFSET_(r32,31,28,v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16)              _BFGET_(r16,15,12)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16,v)            _BFSET_(r16,15,12,v)

    #define     w32SRAMRWTC_ctrl1                              {\
            UNSG32 uctrl1_SHDMBSR1P                            :  4;\
            UNSG32 uctrl1_SHDSBSR1P                            :  4;\
            UNSG32 uctrl1_SHCMBSR1P_SSEG                       :  4;\
            UNSG32 uctrl1_SHCMBSR1P_USEG                       :  4;\
            UNSG32 uctrl1_SHCSBSR1P                            :  4;\
            UNSG32 uctrl1_SHCSBSR1P_CUSTM                      :  4;\
            UNSG32 uctrl1_SPSRAM_WT0                           :  4;\
            UNSG32 uctrl1_SPSRAM_WT1                           :  4;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl1;
            struct w32SRAMRWTC_ctrl1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl2_L1CACHE(r32)                 _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl2_L1CACHE(r32,v)               _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl2_L1CACHE(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl2_L1CACHE(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl2_DPSR2P(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl2_DPSR2P(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl2_DPSR2P(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl2_DPSR2P(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl2_ROM(r32)                     _BFGET_(r32,15, 8)
    #define   SET32SRAMRWTC_ctrl2_ROM(r32,v)                   _BFSET_(r32,15, 8,v)
    #define   GET16SRAMRWTC_ctrl2_ROM(r16)                     _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl2_ROM(r16,v)                   _BFSET_(r16,15, 8,v)

    #define     w32SRAMRWTC_ctrl2                              {\
            UNSG32 uctrl2_L1CACHE                              :  4;\
            UNSG32 uctrl2_DPSR2P                               :  4;\
            UNSG32 uctrl2_ROM                                  :  8;\
            UNSG32 RSVDx8_b16                                  : 16;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl2;
            struct w32SRAMRWTC_ctrl2;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMRWTC;

    typedef union  T32SRAMRWTC_ctrl0
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl0;
                 } T32SRAMRWTC_ctrl0;
    typedef union  T32SRAMRWTC_ctrl1
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl1;
                 } T32SRAMRWTC_ctrl1;
    typedef union  T32SRAMRWTC_ctrl2
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl2;
                 } T32SRAMRWTC_ctrl2;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMRWTC_ctrl0
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl0;
                   };
                 } TSRAMRWTC_ctrl0;
    typedef union  TSRAMRWTC_ctrl1
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl1;
                   };
                 } TSRAMRWTC_ctrl1;
    typedef union  TSRAMRWTC_ctrl2
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl2;
                   };
                 } TSRAMRWTC_ctrl2;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMRWTC_drvrd(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMRWTC_drvwr(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMRWTC_reset(SIE_SRAMRWTC *p);
     SIGN32 SRAMRWTC_cmp  (SIE_SRAMRWTC *p, SIE_SRAMRWTC *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMRWTC_check(p,pie,pfx,hLOG) SRAMRWTC_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAMRWTC_print(p,    pfx,hLOG) SRAMRWTC_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAMRWTC
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE VIP_WriteClient         biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Wr                   (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Start bit for the respective clients.
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the client.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * 0 : Don't clear, normal state.
///                                    * 1 : Clear the asynchronous FIFO between the respective client and dHub.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00004 pix                  (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected from input to write client. This is used to generate flush in Write client to write the partially formed 128-bit data (if any) to DDR.
///                                    * Should be programmed with (ovres*ohres).
///                                    ###
///     @ 0x00008 NonStdRes            (P)
///               %unsigned 1  enable                    0x0
///                                    ###
///                                    * Enable for Read Client when resolution is not integer multiple of 16
///                                    ###
///               %unsigned 13 pixlineTot                0x64
///                                    ###
///                                    * Total number of pixels in a line (for Write Client)
///                                    ###
///               %%        18         # Stuffing bits...
///     @ 0x0000C pack                 (P)
///               %unsigned 4  Sel                       0x0
///                                    ###
///                                    * PackSel for Write Client. Please refer to Interface instance for packSel configuration values
///                                    ###
///               %%        28         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      16B, bits:      52b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_VIP_WriteClient
#define h_VIP_WriteClient (){}

    #define     RA_VIP_WriteClient_Wr                          0x0000

    #define     BA_VIP_WriteClient_Wr_start                    0x0000
    #define     B16VIP_WriteClient_Wr_start                    0x0000
    #define   LSb32VIP_WriteClient_Wr_start                       0
    #define   LSb16VIP_WriteClient_Wr_start                       0
    #define       bVIP_WriteClient_Wr_start                    1
    #define   MSK32VIP_WriteClient_Wr_start                       0x00000001

    #define     BA_VIP_WriteClient_Wr_clear                    0x0000
    #define     B16VIP_WriteClient_Wr_clear                    0x0000
    #define   LSb32VIP_WriteClient_Wr_clear                       1
    #define   LSb16VIP_WriteClient_Wr_clear                       1
    #define       bVIP_WriteClient_Wr_clear                    1
    #define   MSK32VIP_WriteClient_Wr_clear                       0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_VIP_WriteClient_pix                         0x0004

    #define     BA_VIP_WriteClient_pix_tot                     0x0004
    #define     B16VIP_WriteClient_pix_tot                     0x0004
    #define   LSb32VIP_WriteClient_pix_tot                        0
    #define   LSb16VIP_WriteClient_pix_tot                        0
    #define       bVIP_WriteClient_pix_tot                     32
    #define   MSK32VIP_WriteClient_pix_tot                        0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_VIP_WriteClient_NonStdRes                   0x0008

    #define     BA_VIP_WriteClient_NonStdRes_enable            0x0008
    #define     B16VIP_WriteClient_NonStdRes_enable            0x0008
    #define   LSb32VIP_WriteClient_NonStdRes_enable               0
    #define   LSb16VIP_WriteClient_NonStdRes_enable               0
    #define       bVIP_WriteClient_NonStdRes_enable            1
    #define   MSK32VIP_WriteClient_NonStdRes_enable               0x00000001

    #define     BA_VIP_WriteClient_NonStdRes_pixlineTot        0x0008
    #define     B16VIP_WriteClient_NonStdRes_pixlineTot        0x0008
    #define   LSb32VIP_WriteClient_NonStdRes_pixlineTot           1
    #define   LSb16VIP_WriteClient_NonStdRes_pixlineTot           1
    #define       bVIP_WriteClient_NonStdRes_pixlineTot        13
    #define   MSK32VIP_WriteClient_NonStdRes_pixlineTot           0x00003FFE
    ///////////////////////////////////////////////////////////
    #define     RA_VIP_WriteClient_pack                        0x000C

    #define     BA_VIP_WriteClient_pack_Sel                    0x000C
    #define     B16VIP_WriteClient_pack_Sel                    0x000C
    #define   LSb32VIP_WriteClient_pack_Sel                       0
    #define   LSb16VIP_WriteClient_pack_Sel                       0
    #define       bVIP_WriteClient_pack_Sel                    4
    #define   MSK32VIP_WriteClient_pack_Sel                       0x0000000F
    ///////////////////////////////////////////////////////////

    typedef struct SIE_VIP_WriteClient {
    ///////////////////////////////////////////////////////////
    #define   GET32VIP_WriteClient_Wr_start(r32)               _BFGET_(r32, 0, 0)
    #define   SET32VIP_WriteClient_Wr_start(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16VIP_WriteClient_Wr_start(r16)               _BFGET_(r16, 0, 0)
    #define   SET16VIP_WriteClient_Wr_start(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32VIP_WriteClient_Wr_clear(r32)               _BFGET_(r32, 1, 1)
    #define   SET32VIP_WriteClient_Wr_clear(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16VIP_WriteClient_Wr_clear(r16)               _BFGET_(r16, 1, 1)
    #define   SET16VIP_WriteClient_Wr_clear(r16,v)             _BFSET_(r16, 1, 1,v)

    #define     w32VIP_WriteClient_Wr                          {\
            UNSG32 uWr_start                                   :  1;\
            UNSG32 uWr_clear                                   :  1;\
            UNSG32 RSVDx0_b2                                   : 30;\
          }
    union { UNSG32 u32VIP_WriteClient_Wr;
            struct w32VIP_WriteClient_Wr;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIP_WriteClient_pix_tot(r32)                _BFGET_(r32,31, 0)
    #define   SET32VIP_WriteClient_pix_tot(r32,v)              _BFSET_(r32,31, 0,v)

    #define     w32VIP_WriteClient_pix                         {\
            UNSG32 upix_tot                                    : 32;\
          }
    union { UNSG32 u32VIP_WriteClient_pix;
            struct w32VIP_WriteClient_pix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIP_WriteClient_NonStdRes_enable(r32)       _BFGET_(r32, 0, 0)
    #define   SET32VIP_WriteClient_NonStdRes_enable(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16VIP_WriteClient_NonStdRes_enable(r16)       _BFGET_(r16, 0, 0)
    #define   SET16VIP_WriteClient_NonStdRes_enable(r16,v)     _BFSET_(r16, 0, 0,v)

    #define   GET32VIP_WriteClient_NonStdRes_pixlineTot(r32)   _BFGET_(r32,13, 1)
    #define   SET32VIP_WriteClient_NonStdRes_pixlineTot(r32,v) _BFSET_(r32,13, 1,v)
    #define   GET16VIP_WriteClient_NonStdRes_pixlineTot(r16)   _BFGET_(r16,13, 1)
    #define   SET16VIP_WriteClient_NonStdRes_pixlineTot(r16,v) _BFSET_(r16,13, 1,v)

    #define     w32VIP_WriteClient_NonStdRes                   {\
            UNSG32 uNonStdRes_enable                           :  1;\
            UNSG32 uNonStdRes_pixlineTot                       : 13;\
            UNSG32 RSVDx8_b14                                  : 18;\
          }
    union { UNSG32 u32VIP_WriteClient_NonStdRes;
            struct w32VIP_WriteClient_NonStdRes;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32VIP_WriteClient_pack_Sel(r32)               _BFGET_(r32, 3, 0)
    #define   SET32VIP_WriteClient_pack_Sel(r32,v)             _BFSET_(r32, 3, 0,v)
    #define   GET16VIP_WriteClient_pack_Sel(r16)               _BFGET_(r16, 3, 0)
    #define   SET16VIP_WriteClient_pack_Sel(r16,v)             _BFSET_(r16, 3, 0,v)

    #define     w32VIP_WriteClient_pack                        {\
            UNSG32 upack_Sel                                   :  4;\
            UNSG32 RSVDxC_b4                                   : 28;\
          }
    union { UNSG32 u32VIP_WriteClient_pack;
            struct w32VIP_WriteClient_pack;
          };
    ///////////////////////////////////////////////////////////
    } SIE_VIP_WriteClient;

    typedef union  T32VIP_WriteClient_Wr
          { UNSG32 u32;
            struct w32VIP_WriteClient_Wr;
                 } T32VIP_WriteClient_Wr;
    typedef union  T32VIP_WriteClient_pix
          { UNSG32 u32;
            struct w32VIP_WriteClient_pix;
                 } T32VIP_WriteClient_pix;
    typedef union  T32VIP_WriteClient_NonStdRes
          { UNSG32 u32;
            struct w32VIP_WriteClient_NonStdRes;
                 } T32VIP_WriteClient_NonStdRes;
    typedef union  T32VIP_WriteClient_pack
          { UNSG32 u32;
            struct w32VIP_WriteClient_pack;
                 } T32VIP_WriteClient_pack;
    ///////////////////////////////////////////////////////////

    typedef union  TVIP_WriteClient_Wr
          { UNSG32 u32[1];
            struct {
            struct w32VIP_WriteClient_Wr;
                   };
                 } TVIP_WriteClient_Wr;
    typedef union  TVIP_WriteClient_pix
          { UNSG32 u32[1];
            struct {
            struct w32VIP_WriteClient_pix;
                   };
                 } TVIP_WriteClient_pix;
    typedef union  TVIP_WriteClient_NonStdRes
          { UNSG32 u32[1];
            struct {
            struct w32VIP_WriteClient_NonStdRes;
                   };
                 } TVIP_WriteClient_NonStdRes;
    typedef union  TVIP_WriteClient_pack
          { UNSG32 u32[1];
            struct {
            struct w32VIP_WriteClient_pack;
                   };
                 } TVIP_WriteClient_pack;

    ///////////////////////////////////////////////////////////
     SIGN32 VIP_WriteClient_drvrd(SIE_VIP_WriteClient *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 VIP_WriteClient_drvwr(SIE_VIP_WriteClient *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void VIP_WriteClient_reset(SIE_VIP_WriteClient *p);
     SIGN32 VIP_WriteClient_cmp  (SIE_VIP_WriteClient *p, SIE_VIP_WriteClient *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define VIP_WriteClient_check(p,pie,pfx,hLOG) VIP_WriteClient_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define VIP_WriteClient_print(p,    pfx,hLOG) VIP_WriteClient_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: VIP_WriteClient
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE HDMIRX_PIPE             biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL                 (P)
///               %unsigned 1  SCL_CLKEN_CTRL            0x0
///                                    ###
///                                    * 0: Clock enable to scaler depends on the input FIFO status; scaler clken is deasserted when FE can't supply data to scaler.
///                                    * 1: Clock enable to scaler is always high.
///                                    * Since AUX scaler input always comes from CPCB0. its clock enable should be 1 whenever it is being used.
///                                    ###
///               %unsigned 1  fifo_sts_ctrl             0x0
///                                    ###
///                                    * SCL Input FIFO full status control (used for clk_en generation). Write 1 to enable fifo full status for clk_en generation.
///                                    ###
///               %unsigned 1  scl1d_in                  0x0
///                                    ###
///                                    * 1D Scalar input control. Default DNS444to422 output is fed to 1D Scalar.
///                                    * Write 1 to have UPS420to422 output as input to 1D Scalar
///                                    ###
///               %unsigned 1  sb_clkg_en                0x1
///                                    ###
///                                    * Clock gating enable for separate clock to 1D SCL (except LUT logic). Default enabled. Write 0 to clock gate logic except LUT logic.
///                                    ###
///               %unsigned 1  cfg_rst                   0x0
///                                    ###
///                                    * Configurable soft reset for Scalar1D
///                                    ###
///               %unsigned 1  scl1d_sw_rst              0x0
///                                    ###
///                                    * Scalar1D software controlled reset. Write 1 to reset   scalar-1D
///                                    ###
///               %unsigned 1  scl_rst_en0               0x1
///                                    ###
///                                    * Scalar1D will get reset on scalar start
///                                    * Disable this bit for not-resetting Scalar-1D on scalar start.
///                                    ###
///               %unsigned 1  scl_rst_en1               0x0
///                                    ###
///                                    * Enable this bit to soft-reset adaptive scalar. Software will have control to soft-reset scalar during VBI
///                                    ###
///               %unsigned 2  read_sel                  0x2
///                                    ###
///                                    * Read Select control bit.
///                                    * 2'b11 : Read is from ASYNC FIFO for DolbyVision EDR Test Data [HDMI_VOP]
///                                    * 2'b10 : Read is from ASYNC FIFO for DolbyComposer/DM test data/Offline Scalar
///                                    * 2'b01 : Read is from ASYNC FIFO for PATGEN/VPP-VOP
///                                    * 2'b00 : Read is from ASYNC FIFO for HDMIRX
///                                    ###
///               %unsigned 4  clken_cnt                 0x2
///                                    ###
///                                    * Count Value which specifies number of hde's for which HDMIRX-PIPE TG will operate with clock_en = 1. After programmed value, tg will run on actual pipe clock enable
///                                    ###
///               %unsigned 1  clken_ctrl                0x1
///                                    ###
///                                    * Control bit for HDMIRX-PIPE tg clock enable. Default, clock enable is controlled based on clken_cnt value.
///                                    * Write 0 to make tg run on actual clock enable only.
///                                    ###
///               %unsigned 1  tgEof_en                  0x0
///                                    ###
///                                    * Tg end of frame signal enable for clearing start mask. Write 1 to enable tgEof for clearing start_mask to Asynchronous FIFO in HDMIRX-PIPE
///                                    ###
///               %unsigned 1  rdy_sts0_en               0x0
///                                    ###
///                                    * 1: Take care of rdy from Write Client0 while generating clken for hdmirxpipe (for 420SP Write Back case)
///                                    * 0 : don't consider rdy from Write Client0
///                                    * Make this bit 1 whenever write client 0 (for 420SP Write Back) is turned-on.
///                                    ###
///               %unsigned 1  rdy_sts1_en               0x0
///                                    ###
///                                    * 1: Take care of rdy from Write Client1 while generating clken for hdmirxpipe (for 420SP Write Back case)
///                                    * 0 : don't consider rdy from Write Client1
///                                    * Make this bit 1 whenever write client 1 (for 420SP Write Back) is turned-on.
///                                    ###
///               %unsigned 1  hdmi420sp_wrbk            0x0
///                                    ###
///                                    * Control bit for 420SP Write Back case to DRAM from HDMIRX.
///                                    * Make this bit 1 for 420SP Write Back path
///                                    ###
///               %unsigned 1  ofifo_sts_ctrl            0x1
///                                    ###
///                                    * SCL Output FIFO full status control (used for clk_en generation). Write 1 to enable fifo full status for clk_en generation.
///                                    ###
///               %unsigned 1  sclOutrdy_sts0_en         0x1
///                                    ###
///                                    * 1: Take care of rdy from Write Client 0 while generating clken for hdrx_oTg (for 420SP Write Back case)
///                                    * 0 : don't consider rdy from Write Client 0
///                                    * Write 0 to disable ready status from Write Client 0 for clock enable generation
///                                    ###
///               %unsigned 1  sclOutrdy_sts1_en         0x0
///                                    ###
///                                    * 1: Take care of rdy from Write Client1 while generating clken for hdrx_oTg (for 420SP Write Back case)
///                                    * 0 : don't consider rdy from Write Client1
///                                    * Make this bit 1 whenever write client 1 (for 420SP Write Back) is turned-on.
///                                    ###
///               %unsigned 4  oclken_ocnt               0x2
///                                    ###
///                                    * Count value which specifies number of hde's for which HDMIRX PIPE OTG will operate with clk_en =1. After programmed value otg will run on actual pipe clock enable.
///                                    ###
///               %unsigned 1  oclken_ctrl               0x1
///                                    ###
///                                    * Control bit for HDMIRX PIPE output TG clock enable. Default clock enable is controlled based on oclken_cnt value.
///                                    * Write 0 to make otg to run on actual clock enable only.
///                                    ###
///               %unsigned 1  swap_regs                 0x0
///                                    ###
///                                    * [0] : output of UV Packing is {Idata1,Idata0}
///                                    * [1] : output of UV Packing is {Idata0,Idata1}
///                                    ###
///               %unsigned 1  uvPack_sftrst             0x0
///                                    ###
///                                    * Soft reset bit for UV Packing logic
///                                    * write 1 to reset
///                                    ###
///               %unsigned 1  uvPack_sel                0x0
///                                    ###
///                                    * Control bit to select uvPacking logic for 420-SP croma data
///                                    ###
///               %unsigned 1  scl_InFifo_Yctrl          0x0
///                                    ###
///                                    * SCL Input Luma FIFO full status control (used for clk_en generation). Write 1 to enable fifo full status for clk_en generation.
///                                    ###
///               %unsigned 1  scl_InFifo_UVctrl         0x0
///                                    ###
///                                    * SCL Input Croma FIFO full status control (used for clk_en generation). Write 1 to enable fifo full status for clk_en generation.
///                                    ###
///     @ 0x00004 CTRL0                (P)
///               %unsigned 1  rdy0_sts_ctrl             0x0
///                                    ###
///                                    * Write 1 to dependent clock enable generation logic based on write client0 ready status.
///                                    ###
///               %unsigned 1  rdy1_sts_ctrl             0x0
///                                    ###
///                                    * Write 1 to dependent clock enable generation logic based on write client1 ready status.
///                                    ###
///               %unsigned 1  scl_OFifo_fullCtrl        0x0
///                                    ###
///                                    * Scalar output FIFO full status control for Luma(Y) and Chroma(UV) (used for clk_en generation). Write 1 to enable Scalar output fifo full status for clk_en generation.
///                                    ###
///               %unsigned 1  edr_hdmirx_sel            0x0
///                                    ###
///                                    * 0 : To select scalar input data from CSC/UPS420-422 IP.
///                                    * 1 : To select scalar input data from EDR HDMIRX IP.
///                                    ###
///               %unsigned 1  edr_hdmirx_clken_sel      0x0
///                                    ###
///                                    * Not used
///                                    ###
///               %unsigned 1  hdmirx_metadata_wrbk      0x0
///                                    ###
///                                    * Write 1 to enable metadata write back support in VIP path.
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00008 BYPASS_CTRL          (P)
///               %unsigned 1  scl1d_bypass              0x0
///                                    ###
///                                    * 1- Enables 1D-SCL bypass
///                                    * 0- Disables 1D-SCL bypass
///                                    ###
///               %unsigned 1  ups420_bypass             0x1
///                                    ###
///                                    * Hard-bypass for UPS420-SP. Write 1 to bypass it.
///                                    ###
///               %unsigned 1  csc_bypass                0x1
///                                    ###
///                                    * CSC Hard-bypass bit. Write 1 to Hard Bypass CSC
///                                    ###
///               %unsigned 1  dns444_422_bypass         0x0
///                                    ###
///                                    * DNS444_to_422 hard-bypass. Write 1 to bypass DNS444_422
///                                    ###
///               %unsigned 1  dither_bypass             0x0
///                                    ###
///                                    * DITHER hard-bypass. Write 1 to bypass dither IP
///                                    ###
///               %unsigned 1  vipsts_bypass             0x0
///                                    ###
///                                    * VIPSTS module hard-bypass. Write 1 to bypass VIPSTS IP.
///                                    ###
///               %unsigned 1  patgen_bypass             0x1
///                                    ###
///                                    * patgen module hard-bypass. Write 1 to enable patgen IP.
///                                    ###
///               %unsigned 1  hdmiRxFifo_bypass         0x1
///                                    ###
///                                    * HDMI-RX FIFO module hard-bypass. Write 1 to enable HDMIRX FIFO (Buffer).
///                                    ###
///               %unsigned 1  edr_hdmirx_bypass         0x1
///                                    ###
///                                    * EDR-HDMIRX module hard-bypass. Write 0 to enable EDR-HDMIRX IP.
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x0000C tg_ctrl              (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Hdmirx-pipe tg start bit -
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the VP TG.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * Clear bit to reset Fifo's, and TG. Level signal.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00010 CFG0                 (P)
///               %unsigned 1  pat_vopFifo_ctrl          0x0
///                                    ###
///                                    * PAT_VOP FIFO control bit.
///                                    * 1'b1 : Write to this FIFO is from PATGEN
///                                    * 1'b0 : Write to this FIFO is from VPP-VOP
///                                    ###
///               %unsigned 1  patvop_fifoCLR            0x0
///                                    ###
///                                    * Clear bit to reset Fifo. Level signal. Write 1 to clear
///                                    ###
///               %unsigned 8  CfgSelAlgn                0x91
///                                    ###
///                                    * [1:0] - 00 : (12-12-12) 8/10 bits LSB aligned
///                                    * 01 : (12-12-12) 8/10 bits MSB aligned
///                                    * 10 : 24/30 bits LSB aligned
///                                    * 11 : 24/30 bits MSB aligned
///                                    * [3:2] - 0: Will select Y data
///                                    * 1: Will select U data
///                                    * else: Will select V data
///                                    * [5:4] - 0: Will select Y data
///                                    * 1: Will select U data
///                                    * else: Will select V data
///                                    * [7:6] - 0: Will select Y data
///                                    * 1: Will select U data
///                                    * else: Will select V data
///                                    ###
///               %unsigned 4  CfgSel_12_10_8            0x0
///                                    ###
///                                    * For 10 bit data alignment ( makes 36 bits with below options)
///                                    *  2'b00: {10bit data, 2'b00 , 10bit data, 2'b00 ,10bit data, 2'b00 }
///                                    * 2'b01: {2'b00 , 10bit data, 2'b00 , 10bit data, 2'b00 , 10bit data}
///                                    * 2'b10: {6'd0, 30 bit data}
///                                    * 2'b11: {30bit data, 6'd0}
///                                    *  For 8 bit data alignment ( makes 36 bits with below options)
///                                    *  22'b00: {8bit data, 4'b0000 , 8bit data, 4'b0000 ,8bit data, 4'b0000 }
///                                    * 2'b01: { 4'b0000 , 8bit data, 4'b0000 , 8bit data, 4'b0000 , 8bit data}
///                                    * 2'b10: {12'd0, 24 bit data}
///                                    * 2'b11: {24bit data, 12'd0}
///                                    * Chooses between 8bit -> packed to 36 bits as above or  10 bit data -> packed to 36 bits as above or 12 bit data  directly -> 36 bits
///                                    * 4'b0000 :  Bypass, input is sent directly to output.
///                                    * 4'b0001: 8 bit packed data with above options
///                                    * 4'b0010: 10 bit packed data with above options
///                                    * 4'b0011: 12 bit directly to output
///                                    ###
///               %unsigned 1  fifo_rd_sel               0x0
///                                    ###
///                                    * hdmiRxPipe_async_fifo0 Read Select control for HDMI Pack Input format (HDMIRX). Write 1 to enable read for HDMI pack Input format
///                                    ###
///               %unsigned 1  rd_en_init                0x0
///                                    ###
///                                    * Initialisation Bit for read enable signal for hdmiRxPipe_async_fifo0 (HDMI Pack input format)
///                                    ###
///               %unsigned 2  hdmi_pk_8b_10b            0x2
///                                    ###
///                                    * 0 : HDMI Pack Input format is 8bpc (Not valid for BG5CTpZ1)
///                                    * 1 : HDMI Pack Input format is 10 bpc (Not valid for BG5CTpZ1)
///                                    * 2 : HDMI Pack Input format is 12 bpc
///                                    ###
///               %unsigned 1  rd_init0                  0x0
///                                    ###
///                                    * Default Value for read enable signal for hdmiRxPipe_async_fifo0 (HDMI Pack input format)
///                                    ###
///               %unsigned 1  rden_sft_rst              0x0
///                                    ###
///                                    * 0 : Don't clear, normal state.
///                                    * 1 : Soft reset read enable signal for async fifo. Soft reset value will be 'rd_en_init'
///                                    ###
///               %unsigned 5  vsync_cnt_val             0x0
///                                    ###
///                                    * Programmable Count value for HDMIRX Vsync on which write mask to ASYNC Fifo will be disabled. On programmable count value, HDMIRX data will be taken as valid data to Async Fifo.
///                                    ###
///               %unsigned 1  start_mask_reset          0x0
///                                    ###
///                                    * Reset Control bit for start_mask for HDMIRX Input fifo.
///                                    * During start (initial bringup) or any resolution change in HDMIRX-Path, this bit should be made as 1'b1 to reset (level signal) (enable masking of any invalid writes to Async FIFO).
///                                    * To reset : 0 -> 1 -> 0
///                                    ###
///               %unsigned 2  write_sel_8b              0x0
///                                    ###
///                                    * [00] : Input format is 8 bpc
///                                    * [01] : Input format is 10 bpc
///                                    * [10] : Input format is 12 bpc
///                                    * [11]:   Invalid
///                                    ###
///               %unsigned 1  hdmipk_420_sel            0x0
///                                    ###
///                                    * Selection bit for hdmi pack 420 format (from HDMIRX). Write 1 to enable this bit when input from HDMIRX is at 594MHz (with packing)
///                                    ###
///               %unsigned 1  clock_en_sel              0x0
///                                    ###
///                                    * Clock enable select bit. Write 1 to select clock enable from HDMIRX. Default, internally generated clock enable is used for packing & writing 420 (HDMI Pack at 594MHz) data in Asynchronous FIFO
///                                    ###
///               %unsigned 1  pol_ctrl                  0x0
///                                    ###
///                                    * Polarity control bit for clock enable. Write 1 to invert the polarity of clock enable used to write 420 (HDMI Pack at 594MHz) data in Asynchronous FIFO
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x00014 CFG01                
///               %unsigned 2  sp_wrbk_8b                0x2
///                                    ###
///                                    * [0] : Write to DHUB is 8bit for 420SP format
///                                    * [1] : Write to DHUB is 10 bit for 420SP format
///                                    * [2] : Write to DHUB is 12 bit for 420SP format
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00018 CFG1                 (P)
///               %unsigned 32 vs_cnt                    0x64
///                                    ###
///                                    * Programmable Vsync Count value for detecting Vsync Polarity (Positive Sync or Negative Sync).
///                                    * Program this value equal to VSYNC (in number of clock cycles)
///                                    ###
///     @ 0x0001C CFG2                 (P)
///               %unsigned 16 hs_cnt                    0x64
///                                    ###
///                                    * Programmable Hsync Count value for detecting Hsync Polarity (Positive Sync or Negative Sync).
///                                    * Program this value equal to HSYNC (in number of clock cycles)
///                                    ###
///               %unsigned 2  sync_pol_ctrl             0x0
///                                    ###
///                                    * [0] : HSync Polarity Control Bit. Write 1 to invert polarity of HSync
///                                    * [1] : VSync Polarity Control Bit. Write 1 to invert polarity of VSync
///                                    ###
///               %unsigned 2  sync_sts_en               0x0
///                                    ###
///                                    * [0] : HSync Status Enable bit. Write 1 to enable Hsync status updated in BIU
///                                    * [1] : VSync Status Enable bit. Write 1 to enable Vsync status updated in BIU
///                                    ###
///               %unsigned 1  sts_clr                   0x0
///                                    ###
///                                    * Status signals clear bit. Write 1 to clear initial or previous state of status signals.
///                                    * Recommended to clear status signals before frame processing. Level signal.
///                                    ###
///               %unsigned 1  stsflg_clr_en             0x1
///                                    ###
///                                    * Status Flag Clear Enable bit. Default high.
///                                    * Used for Enabling Clear/EoF Intr which will reset internal flags generated every frame for Top/Bottom Field detection.
///                                    ###
///               %unsigned 1  interlace_inp_en          0x0
///                                    ###
///                                    * Interlaced Input format selection for field detection
///                                    * Write 1 to enable field detection logic
///                                    ###
///               %unsigned 1  patgenFifo_stsClr         0x0
///                                    ###
///                                    * Control Bit to clear UF/OF status clear of PATGEN input FIFO.
///                                    * write 1 to clear (level signal)
///                                    ###
///               %unsigned 1  hdmiRxFifo_stsClr         0x0
///                                    ###
///                                    * Control Bit to clear UF/OF status clear of HDMIRX Input FIFO.
///                                    * write 1 to clear (level signal)
///                                    ###
///               %%        7          # Stuffing bits...
///     @ 0x00020 CFG3                 (P)
///               %unsigned 16 fldsts_l                  0x442
///                                    ###
///                                    * Field Status indication (lower threshold) programmable register value. It should be programmed less than Htotal/2 [Eg : 2200/2 -10]
///                                    ###
///               %unsigned 16 fldsts_h                  0x456
///                                    ###
///                                    * Field Status indication (upper threshold) programmable register value. It should be programmed more than Htotal/2 [Eg : 2200/2 + 10]
///                                    ###
///     @ 0x00024 CFG4                 (P)
///               %unsigned 1  dvtest_offsclr_Fifoctrl   0x0
///                                    ###
///                                    * DVTEST DATA_OFFLINE Scalar FIFO control bit.
///                                    * 1'b1 : Write to this FIFO is from DV TEST DATA
///                                    * 1'b0 : Write to this FIFO is from OFFLine Scalar
///                                    ###
///               %unsigned 1  dvtest_ups420sp_datasel   0x0
///                                    ###
///                                    * DVTEST DATA FIFO output or UPS 420sp output control bit.
///                                    * 1'b1 : DV test data [LUMA 16 bit]
///                                    * 1'b0 : UPS420-SP [LUMA 8/10 bit]
///                                    ###
///               %unsigned 1  dlbyedr_datasel           0x0
///                                    ###
///                                    * Dolby Vision EDR data or 1D Scalar output.
///                                    * 1'b1 : Dolby vision EDR test data.
///                                    * 1'b0 : YC422 [1D Scalar output]
///                                    ###
///               %unsigned 1  dvtest_fifoCLR            0x0
///                                    ###
///                                    * Clear bit to reset Fifo. Level signal. Write 1 to clear
///                                    ###
///               %unsigned 1  dlbyedr_fifoCLR           0x0
///                                    ###
///                                    * Clear bit to reset Fifo. Level signal. Write 1 to clear
///                                    ###
///               %unsigned 1  rdmain_initval0           0x0
///                                    ###
///                                    * Initiallization value for write Mask for WriteClient1 (420SP)
///                                    ###
///               %unsigned 1  rdmain_initval1           0x1
///                                    ###
///                                    * Initiallization value for write Mask for WriteClient1 (420SP)
///                                    ###
///               %unsigned 1  dvtest_dither_en          0x0
///                                    ###
///                                    * [0] : DVEDR test Write back Path is YUV422 Pack 12Bit format
///                                    * [1] : DVEDR test Write back Path is YUV422 Pack 10Bit format [DV Dither Enabled in HDMI_VOP]
///                                    ###
///               %unsigned 1  uvrd_en_init0             0x0
///                                    ###
///                                    * Initial value at EoF for read enable of UV FIFO
///                                    ###
///               %unsigned 1  uvrd_en_init1             0x0
///                                    ###
///                                    * Initial value at soft reset for read enable of UV FIFO
///                                    ###
///               %unsigned 1  scl_OFifoY_aEmpCtrl       0x0
///                                    ###
///                                    * Scalar output FIFO aEmp status control for Luma (used for clk_en generation). Write 1 to enable fifo empty status for clk_en generation.
///                                    ###
///               %unsigned 1  scl_OFifoUV_aEmpCtrl      0x0
///                                    ###
///                                    * Scalar output FIFO aEmp status control for Croma (used for clk_en generation). Write 1 to enable fifo empty status for clk_en generation.
///                                    ###
///               %unsigned 1  uvrd_en_mask              0x0
///                                    ###
///                                    * Alternate read enable mask for UV data.
///                                    * To be enabled (1'b1) for YUV444 case. NO alternate read is required for YUV444 case. Hence alternate read to be disabled.
///                                    ###
///               %unsigned 1  uv422_444_sel             0x0
///                                    ###
///                                    * Control bit to select YUV422 or YUV444 data input before DITHER
///                                    * [0] : YUV422
///                                    * [1] : YUV444
///                                    ###
///               %unsigned 1  yuv422_444_sel            0x0
///                                    ###
///                                    * Control bit to select input data from Dolby Test path (from VOP).
///                                    * [0] : YUV422
///                                    * [1] : YUV444
///                                    * Further selection of bit width/component is controlled by 'write_sel_8b'
///                                    ###
///               %unsigned 1  mode_yc42x                0x0
///                                    ###
///                                    * [0] : for scl1d_yc input is YUV 444 input
///                                    * [1] : for scl1d_yc input is YC420/YUV 422 input
///                                    ###
///               %unsigned 1  UV_swap_regs              0x0
///                                    ###
///                                    * Enable register to swap UV component.
///                                    ###
///               %unsigned 1  vip_420sp_en              0x0
///                                    ###
///                                    * 1: enable for VPP final output 420 to VIP 420SP write back
///                                    * 0: disable
///                                    ###
///               %unsigned 2  vip_420_mode_ctrl         0x2
///                                    ###
///                                    * 2: 420 mode
///                                    * others: Not Used
///                                    ###
///               %unsigned 4  vip_420_width_ctrl        0x6
///                                    ###
///                                    * 6: 12bpc
///                                    * others: Not Used
///                                    ###
///               %unsigned 1  dummy_reg                 0x0
///                                    ###
///                                    * Reserved register
///                                    ###
///               %unsigned 1  pw_opt_en                 0x0
///                                    ###
///                                    * Enable bit for power optimization logic.
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00028 CFG5                 (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Hdmirx-pipe OTg start bit -
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the oTg.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * Clear bit to reset Fifo's, and TG. Level signal.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x0002C VIP_CTRL             (P-)
///               %unsigned 1  otg_start                 0x0
///                                    ###
///                                    * 1: to start VIP output TG
///                                    * 0: no effect
///                                    ###
///               %unsigned 1  otg_clear                 0x0
///                                    ###
///                                    * 1: to clear VIP output TG
///                                    * 0: no effect
///                                    ###
///               %unsigned 1  sclOfifo_Y_clear          0x0
///                                    ###
///                                    * 1: to clear scl output fifo for luma component
///                                    * 0: no effect
///                                    ###
///               %unsigned 1  sclOfifo_UV_clear         0x0
///                                    ###
///                                    * 1: to clear scl output fifo for UV component
///                                    * 0: no effect
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00030 tg_ctrl_420          (P-)
///               %unsigned 1  rd_start                  0x0
///                                    ###
///                                    * Hdmirx-pipe 420SP tg start bit -
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the 420SP Mode.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00034 scl1d_Inpix          (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of SCL1D-InFIFO. It should be programmed with (ivres*ihres).
///                                    ###
///     @ 0x00038 sclOFIFO_YInpix      (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of NGPTV Y-InFIFO. It should be programmed with (ivres*ihres) for Luma
///                                    ###
///     @ 0x0003C sclOFIFO_UVInpix     (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of NGPTV UV-InFIFO. It should be programmed with (ivres*ihres) for Croma
///                                    ###
///     @ 0x00040 hdmirxpipe_Inpix     (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of HDMIRX-InFIFO. It should be programmed with (ivres*ihres).
///                                    ###
///     @ 0x00044 STATUS               (R-)
///               %unsigned 16 VIP_Tg                    0x0
///                                    ###
///                                    * Vcount status for VIP TG
///                                    ###
///               %unsigned 2  SYNC                      0x0
///                                    ###
///                                    * SYNC Status bits
///                                    * [0] : HSYNC status. If status bit is 1, HSYNC is negative polarity
///                                    * [1] :   VSYNC status. If status bit is 1, VSYNC is negative polarity
///                                    ###
///               %unsigned 1  FIELD                     0x0
///                                    ###
///                                    * FIELD Status bit for interlaced input from HDMIRX.
///                                    * If status is 1, Input is Bottom Field
///                                    ###
///               %unsigned 1  patgenFifo_UF             0x0
///                                    ###
///                                    * PATGEN input Asynchronous FIFO UnderFlow Status.
///                                    * This status bit is high PATGEN FIFO is empty during active timeframe.
///                                    * Once set, it has to be cleared by SW
///                                    ###
///               %unsigned 1  patgenFifo_OF             0x0
///               %unsigned 1  hdrxFifo_UF               0x0
///               %unsigned 1  hdrxFifo_OF               0x0
///               %unsigned 1  PATGEN_FLD                0x0
///                                    ###
///                                    * FIELD Status bit for interlaced input from PATGEN
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00048 INTR_EN              (P)
///               %unsigned 1  EOF                       0x0
///                                    ###
///                                    * Enable for End of Frame interrupt from HDMIRX-PIPE
///                                    ###
///               %unsigned 1  HDMIRX                    0x0
///                                    ###
///                                    * Enable for HDMIRX Interrupt
///                                    ###
///               %unsigned 2  SPDIFRX                   0x0
///                                    ###
///                                    * Enable for SPDIF-RX Interrupts
///                                    * 0 : SPDIF-RX Interrupt
///                                    * 1: SPDIF-RX change over interrupt
///                                    ###
///               %unsigned 1  EOF_YTG                   0x0
///                                    ###
///                                    * Enable for End of frame for Y TG Interrupt
///                                    ###
///               %unsigned 1  EOF_UVTG                  0x0
///                                    ###
///                                    * Enable for End of frame for UV TG Interrupt
///                                    ###
///               %unsigned 1  EOF_INPTG                 0x0
///                                    ###
///                                    * Enable for End of frame for input TG Interrupt
///                                    ###
///               %unsigned 1  SPDIFRX_FPLL_INTR         0x0
///                                    ###
///                                    * Enable for SPDIF-RX FPLL Interrupt
///                                    ###
///               %unsigned 1  DSI_INTR                  0x0
///                                    ###
///                                    * Enable for DSI Interrupt
///                                    ###
///               %unsigned 1  HDMIRX_EARCTX_INTR        0x0
///                                    ###
///                                    * Enable for HDMIRX eARC-TX Interrupt
///                                    ###
///               %unsigned 1  HDMIRX_CFG_HPD_INTR       0x0
///                                    ###
///                                    * Enable for CFG HPD Interrupt
///                                    ###
///               %unsigned 1  EARCRX_INTR               0x0
///                                    ###
///                                    * Enable for EARCRX Interrupt
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x0004C oTg_ctrl             (P-)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * Hdmirx-pipe tg start bit -
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the HDMIRX OTG.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * Clear bit to reset Fifo's, and HDMIRX OTG. Level signal.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00050 scl1d_Outpix         (P)
///               %unsigned 32 tot                       0x64
///                                    ###
///                                    * Specifies the total number of pixels expected at the input of SCL1D- OutFIFO. It should be programmed with (ivres*ihres).
///                                    ###
///     @ 0x00054 STATUS1              (R-)
///               %unsigned 16 HDRX_oTg                  0x0
///                                    ###
///                                    * Vcount status for VIP OTG
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00058 STATUS2              (R-)
///               %unsigned 16 VIP_YTg                   0x0
///                                    ###
///                                    * Vcount status for VIP Y TG
///                                    ###
///               %unsigned 16 VIP_UVTg                  0x0
///                                    ###
///                                    * Vcount status for VIP UV TG
///                                    ###
///     @ 0x0005C                      (P)
///     # 0x0005C VIP_WR               
///               $VIP_WriteClient     VIP_WR            REG          
///                                    ###
///                                    * Write Client related registers for HDMI RX Write Back
///                                    * PackSel configuration :
///                                    * [0000] : 16 Bit Packing
///                                    * [0001] : 20 Bit Packing
///                                    * [0010] : 8 Bit Packing
///                                    * [0011] : 10 Bit Packing
///                                    * [0100] : 12 Bit Packing
///                                    * [0101] : 24 Bit Packing
///                                    * [0110] : 30 Bit Packing
///                                    * [0111] : 32 Bit Packing
///                                    * [1000] : 36 Bit Packing
///                                    ###
///     @ 0x0006C                      (P)
///     # 0x0006C VIP_CRCH_WR          
///               $VIP_WriteClient     VIP_CRCH_WR       REG          
///                                    ###
///                                    * Write Client related registers for HDMI RX Write Back for Croma Channel: 420SP Write
///                                    * PackSel configuration :
///                                    * [0000] : 8 Bit Packing
///                                    * [0001] : 10 Bit Packing
///                                    * [0010] : 12 Bit Packing
///                                    * [0011] : 16 Bit Packing
///                                    * [0100] : 20 Bit Packing
///                                    * [0101] : 24 Bit Packing
///                                    ###
///     @ 0x0007C                      (P)
///     # 0x0007C VIP_METADATA_WR      
///               $VIP_WriteClient     VIP_METADATA_WR   REG          
///                                    ###
///                                    * Write Client related registers for HDMI RX write back MetaData Channe.
///                                    ###
///     @ 0x0008C                      (P)
///     # 0x0008C VIP_TG               
///               $TG                  VIP_TG            REG          
///                                    ###
///                                    * VIP Plane Tming Generator related registers
///                                    ###
///     @ 0x000CC                      (P)
///     # 0x000CC VIPSCLTOP            
///               $VIPSCLTOP           VIPSCLTOP         REG          
///                                    ###
///                                    * VIP SCL1D TOP register specifications
///                                    ###
///     @ 0x002A8                      (P)
///     # 0x002A8 VIP_CSC              
///               $CSC_C17O24          VIP_CSC           REG          
///                                    ###
///                                    * CSC coefficients for PIP plane CSC
///                                    ###
///     @ 0x002E4                      (P)
///     # 0x002E4 VIP_DITHER           
///               $DITHER              VIP_DITHER        REG          
///                                    ###
///                                    * “Read Client PipR1 for Semi-Planar 420 support” related registers
///                                    ###
///     @ 0x002E8                      (P)
///     # 0x002E8 VIP_UPS420_HDMI      
///               $UPS_420_422_HDMI_12b VIP_UPS420_HDMI   REG          
///                                    ###
///                                    * Register specifications for UPS420_422_HDMI in HDMIRX Path
///                                    ###
///     @ 0x0030C                      (P)
///     # 0x0030C VIP_PATGEN           
///               $PATGEN              VIP_PATGEN        REG          
///                                    ###
///                                    * Register specifications for patgen in HDMIRX Pipe Path
///                                    ###
///     @ 0x00334                      (P)
///     # 0x00334 VIPSTS               
///               $VIPSTS              VIPSTS            REG          
///                                    ###
///                                    * Register specifications for vipSts in HDMIRX Pipe Path
///                                    ###
///     @ 0x00380                      (P)
///     # 0x00380 VIP_OTG              
///               $TG                  VIP_OTG           REG          
///                                    ###
///                                    * VIP Plane Output Timing generator related registers
///                                    ###
///     @ 0x003C0                      (P)
///     # 0x003C0 SRAMPWR_UPS420_HDMI  
///               $SRAMPWR             SRAMPWR_UPS420_HDMI REG          
///                                    ###
///                                    * Power down register for UPS420_HDMI.
///                                    ###
///     @ 0x003C4                      (P)
///     # 0x003C4 SRAMPWR_Y            
///               $SRAMPWR             SRAMPWR_Y         REG          
///                                    ###
///                                    * Power down register for VIP SCL Pipe LUMA pixel storage.
///                                    ###
///     @ 0x003C8                      (P)
///     # 0x003C8 SRAMPWR_UV           
///               $SRAMPWR             SRAMPWR_UV        REG          
///                                    ###
///                                    * Power down register for VIP SCL Pipe CHROMA pixel storage.
///                                    ###
///     @ 0x003CC                      (P)
///     # 0x003CC SRAMPWR_Y_HLUT       
///               $SRAMPWR             SRAMPWR_Y_HLUT    REG          
///                                    ###
///                                    * Power down register for VIP SCL LUMA Pipe HLUT storage.
///                                    ###
///     @ 0x003D0                      (P)
///     # 0x003D0 SRAMPWR_Y_VLUT       
///               $SRAMPWR             SRAMPWR_Y_VLUT    REG          
///                                    ###
///                                    * Power down register for VIP SCL LUMA Pipe VLUT storage.
///                                    ###
///     @ 0x003D4                      (P)
///     # 0x003D4 SRAMPWR_C_HLUT       
///               $SRAMPWR             SRAMPWR_C_HLUT    REG          
///                                    ###
///                                    * Power down register for VIP SCL CHROMA Pipe HLUT storage.
///                                    ###
///     @ 0x003D8                      (P)
///     # 0x003D8 SRAMPWR_C_VLUT       
///               $SRAMPWR             SRAMPWR_C_VLUT    REG          
///                                    ###
///                                    * Power down register for VIP SCL CHROMA Pipe VLUT storage.
///                                    ###
///     @ 0x003DC                      (P)
///     # 0x003DC SRAMPWR_UFP_FIFO     
///               $SRAMPWR             SRAMPWR_UFP_FIFO  REG          
///                                    ###
///                                    * Power down register for HDMI Rx underflow FIFO..
///                                    ###
///     @ 0x003E0                      (P)
///     # 0x003E0 EDR_HDMIRX           
///               $EDR_HDMIRX          EDR_HDMIRX        REG          
///                                    ###
///                                    * Register specifications for EDR HDMIRX Metadata IP in HDMIRX Pipe Path
///                                    * End of HDMIRX PIPE definition.
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:    1008B, bits:    5827b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_HDMIRX_PIPE
#define h_HDMIRX_PIPE (){}

    #define     RA_HDMIRX_PIPE_CTRL                            0x0000

    #define     BA_HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL             0x0000
    #define     B16HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL             0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL                0
    #define   LSb16HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL                0
    #define       bHDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL             1
    #define   MSK32HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL                0x00000001

    #define     BA_HDMIRX_PIPE_CTRL_fifo_sts_ctrl              0x0000
    #define     B16HDMIRX_PIPE_CTRL_fifo_sts_ctrl              0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_fifo_sts_ctrl                 1
    #define   LSb16HDMIRX_PIPE_CTRL_fifo_sts_ctrl                 1
    #define       bHDMIRX_PIPE_CTRL_fifo_sts_ctrl              1
    #define   MSK32HDMIRX_PIPE_CTRL_fifo_sts_ctrl                 0x00000002

    #define     BA_HDMIRX_PIPE_CTRL_scl1d_in                   0x0000
    #define     B16HDMIRX_PIPE_CTRL_scl1d_in                   0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_scl1d_in                      2
    #define   LSb16HDMIRX_PIPE_CTRL_scl1d_in                      2
    #define       bHDMIRX_PIPE_CTRL_scl1d_in                   1
    #define   MSK32HDMIRX_PIPE_CTRL_scl1d_in                      0x00000004

    #define     BA_HDMIRX_PIPE_CTRL_sb_clkg_en                 0x0000
    #define     B16HDMIRX_PIPE_CTRL_sb_clkg_en                 0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_sb_clkg_en                    3
    #define   LSb16HDMIRX_PIPE_CTRL_sb_clkg_en                    3
    #define       bHDMIRX_PIPE_CTRL_sb_clkg_en                 1
    #define   MSK32HDMIRX_PIPE_CTRL_sb_clkg_en                    0x00000008

    #define     BA_HDMIRX_PIPE_CTRL_cfg_rst                    0x0000
    #define     B16HDMIRX_PIPE_CTRL_cfg_rst                    0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_cfg_rst                       4
    #define   LSb16HDMIRX_PIPE_CTRL_cfg_rst                       4
    #define       bHDMIRX_PIPE_CTRL_cfg_rst                    1
    #define   MSK32HDMIRX_PIPE_CTRL_cfg_rst                       0x00000010

    #define     BA_HDMIRX_PIPE_CTRL_scl1d_sw_rst               0x0000
    #define     B16HDMIRX_PIPE_CTRL_scl1d_sw_rst               0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_scl1d_sw_rst                  5
    #define   LSb16HDMIRX_PIPE_CTRL_scl1d_sw_rst                  5
    #define       bHDMIRX_PIPE_CTRL_scl1d_sw_rst               1
    #define   MSK32HDMIRX_PIPE_CTRL_scl1d_sw_rst                  0x00000020

    #define     BA_HDMIRX_PIPE_CTRL_scl_rst_en0                0x0000
    #define     B16HDMIRX_PIPE_CTRL_scl_rst_en0                0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_scl_rst_en0                   6
    #define   LSb16HDMIRX_PIPE_CTRL_scl_rst_en0                   6
    #define       bHDMIRX_PIPE_CTRL_scl_rst_en0                1
    #define   MSK32HDMIRX_PIPE_CTRL_scl_rst_en0                   0x00000040

    #define     BA_HDMIRX_PIPE_CTRL_scl_rst_en1                0x0000
    #define     B16HDMIRX_PIPE_CTRL_scl_rst_en1                0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_scl_rst_en1                   7
    #define   LSb16HDMIRX_PIPE_CTRL_scl_rst_en1                   7
    #define       bHDMIRX_PIPE_CTRL_scl_rst_en1                1
    #define   MSK32HDMIRX_PIPE_CTRL_scl_rst_en1                   0x00000080

    #define     BA_HDMIRX_PIPE_CTRL_read_sel                   0x0001
    #define     B16HDMIRX_PIPE_CTRL_read_sel                   0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_read_sel                      8
    #define   LSb16HDMIRX_PIPE_CTRL_read_sel                      8
    #define       bHDMIRX_PIPE_CTRL_read_sel                   2
    #define   MSK32HDMIRX_PIPE_CTRL_read_sel                      0x00000300

    #define     BA_HDMIRX_PIPE_CTRL_clken_cnt                  0x0001
    #define     B16HDMIRX_PIPE_CTRL_clken_cnt                  0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_clken_cnt                     10
    #define   LSb16HDMIRX_PIPE_CTRL_clken_cnt                     10
    #define       bHDMIRX_PIPE_CTRL_clken_cnt                  4
    #define   MSK32HDMIRX_PIPE_CTRL_clken_cnt                     0x00003C00

    #define     BA_HDMIRX_PIPE_CTRL_clken_ctrl                 0x0001
    #define     B16HDMIRX_PIPE_CTRL_clken_ctrl                 0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_clken_ctrl                    14
    #define   LSb16HDMIRX_PIPE_CTRL_clken_ctrl                    14
    #define       bHDMIRX_PIPE_CTRL_clken_ctrl                 1
    #define   MSK32HDMIRX_PIPE_CTRL_clken_ctrl                    0x00004000

    #define     BA_HDMIRX_PIPE_CTRL_tgEof_en                   0x0001
    #define     B16HDMIRX_PIPE_CTRL_tgEof_en                   0x0000
    #define   LSb32HDMIRX_PIPE_CTRL_tgEof_en                      15
    #define   LSb16HDMIRX_PIPE_CTRL_tgEof_en                      15
    #define       bHDMIRX_PIPE_CTRL_tgEof_en                   1
    #define   MSK32HDMIRX_PIPE_CTRL_tgEof_en                      0x00008000

    #define     BA_HDMIRX_PIPE_CTRL_rdy_sts0_en                0x0002
    #define     B16HDMIRX_PIPE_CTRL_rdy_sts0_en                0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_rdy_sts0_en                   16
    #define   LSb16HDMIRX_PIPE_CTRL_rdy_sts0_en                   0
    #define       bHDMIRX_PIPE_CTRL_rdy_sts0_en                1
    #define   MSK32HDMIRX_PIPE_CTRL_rdy_sts0_en                   0x00010000

    #define     BA_HDMIRX_PIPE_CTRL_rdy_sts1_en                0x0002
    #define     B16HDMIRX_PIPE_CTRL_rdy_sts1_en                0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_rdy_sts1_en                   17
    #define   LSb16HDMIRX_PIPE_CTRL_rdy_sts1_en                   1
    #define       bHDMIRX_PIPE_CTRL_rdy_sts1_en                1
    #define   MSK32HDMIRX_PIPE_CTRL_rdy_sts1_en                   0x00020000

    #define     BA_HDMIRX_PIPE_CTRL_hdmi420sp_wrbk             0x0002
    #define     B16HDMIRX_PIPE_CTRL_hdmi420sp_wrbk             0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_hdmi420sp_wrbk                18
    #define   LSb16HDMIRX_PIPE_CTRL_hdmi420sp_wrbk                2
    #define       bHDMIRX_PIPE_CTRL_hdmi420sp_wrbk             1
    #define   MSK32HDMIRX_PIPE_CTRL_hdmi420sp_wrbk                0x00040000

    #define     BA_HDMIRX_PIPE_CTRL_ofifo_sts_ctrl             0x0002
    #define     B16HDMIRX_PIPE_CTRL_ofifo_sts_ctrl             0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_ofifo_sts_ctrl                19
    #define   LSb16HDMIRX_PIPE_CTRL_ofifo_sts_ctrl                3
    #define       bHDMIRX_PIPE_CTRL_ofifo_sts_ctrl             1
    #define   MSK32HDMIRX_PIPE_CTRL_ofifo_sts_ctrl                0x00080000

    #define     BA_HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en          0x0002
    #define     B16HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en          0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en             20
    #define   LSb16HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en             4
    #define       bHDMIRX_PIPE_CTRL_sclOutrdy_sts0_en          1
    #define   MSK32HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en             0x00100000

    #define     BA_HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en          0x0002
    #define     B16HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en          0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en             21
    #define   LSb16HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en             5
    #define       bHDMIRX_PIPE_CTRL_sclOutrdy_sts1_en          1
    #define   MSK32HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en             0x00200000

    #define     BA_HDMIRX_PIPE_CTRL_oclken_ocnt                0x0002
    #define     B16HDMIRX_PIPE_CTRL_oclken_ocnt                0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_oclken_ocnt                   22
    #define   LSb16HDMIRX_PIPE_CTRL_oclken_ocnt                   6
    #define       bHDMIRX_PIPE_CTRL_oclken_ocnt                4
    #define   MSK32HDMIRX_PIPE_CTRL_oclken_ocnt                   0x03C00000

    #define     BA_HDMIRX_PIPE_CTRL_oclken_ctrl                0x0003
    #define     B16HDMIRX_PIPE_CTRL_oclken_ctrl                0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_oclken_ctrl                   26
    #define   LSb16HDMIRX_PIPE_CTRL_oclken_ctrl                   10
    #define       bHDMIRX_PIPE_CTRL_oclken_ctrl                1
    #define   MSK32HDMIRX_PIPE_CTRL_oclken_ctrl                   0x04000000

    #define     BA_HDMIRX_PIPE_CTRL_swap_regs                  0x0003
    #define     B16HDMIRX_PIPE_CTRL_swap_regs                  0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_swap_regs                     27
    #define   LSb16HDMIRX_PIPE_CTRL_swap_regs                     11
    #define       bHDMIRX_PIPE_CTRL_swap_regs                  1
    #define   MSK32HDMIRX_PIPE_CTRL_swap_regs                     0x08000000

    #define     BA_HDMIRX_PIPE_CTRL_uvPack_sftrst              0x0003
    #define     B16HDMIRX_PIPE_CTRL_uvPack_sftrst              0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_uvPack_sftrst                 28
    #define   LSb16HDMIRX_PIPE_CTRL_uvPack_sftrst                 12
    #define       bHDMIRX_PIPE_CTRL_uvPack_sftrst              1
    #define   MSK32HDMIRX_PIPE_CTRL_uvPack_sftrst                 0x10000000

    #define     BA_HDMIRX_PIPE_CTRL_uvPack_sel                 0x0003
    #define     B16HDMIRX_PIPE_CTRL_uvPack_sel                 0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_uvPack_sel                    29
    #define   LSb16HDMIRX_PIPE_CTRL_uvPack_sel                    13
    #define       bHDMIRX_PIPE_CTRL_uvPack_sel                 1
    #define   MSK32HDMIRX_PIPE_CTRL_uvPack_sel                    0x20000000

    #define     BA_HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl           0x0003
    #define     B16HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl           0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl              30
    #define   LSb16HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl              14
    #define       bHDMIRX_PIPE_CTRL_scl_InFifo_Yctrl           1
    #define   MSK32HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl              0x40000000

    #define     BA_HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl          0x0003
    #define     B16HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl          0x0002
    #define   LSb32HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl             31
    #define   LSb16HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl             15
    #define       bHDMIRX_PIPE_CTRL_scl_InFifo_UVctrl          1
    #define   MSK32HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl             0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_CTRL0                           0x0004

    #define     BA_HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl             0x0004
    #define     B16HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl             0x0004
    #define   LSb32HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl                0
    #define   LSb16HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl                0
    #define       bHDMIRX_PIPE_CTRL0_rdy0_sts_ctrl             1
    #define   MSK32HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl                0x00000001

    #define     BA_HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl             0x0004
    #define     B16HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl             0x0004
    #define   LSb32HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl                1
    #define   LSb16HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl                1
    #define       bHDMIRX_PIPE_CTRL0_rdy1_sts_ctrl             1
    #define   MSK32HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl                0x00000002

    #define     BA_HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl        0x0004
    #define     B16HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl        0x0004
    #define   LSb32HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl           2
    #define   LSb16HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl           2
    #define       bHDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl        1
    #define   MSK32HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl           0x00000004

    #define     BA_HDMIRX_PIPE_CTRL0_edr_hdmirx_sel            0x0004
    #define     B16HDMIRX_PIPE_CTRL0_edr_hdmirx_sel            0x0004
    #define   LSb32HDMIRX_PIPE_CTRL0_edr_hdmirx_sel               3
    #define   LSb16HDMIRX_PIPE_CTRL0_edr_hdmirx_sel               3
    #define       bHDMIRX_PIPE_CTRL0_edr_hdmirx_sel            1
    #define   MSK32HDMIRX_PIPE_CTRL0_edr_hdmirx_sel               0x00000008

    #define     BA_HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel      0x0004
    #define     B16HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel      0x0004
    #define   LSb32HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel         4
    #define   LSb16HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel         4
    #define       bHDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel      1
    #define   MSK32HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel         0x00000010

    #define     BA_HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk      0x0004
    #define     B16HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk      0x0004
    #define   LSb32HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk         5
    #define   LSb16HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk         5
    #define       bHDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk      1
    #define   MSK32HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk         0x00000020
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_BYPASS_CTRL                     0x0008

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass        0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass        0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass           0
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass           0
    #define       bHDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass        1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass           0x00000001

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass       0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass       0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass          1
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass          1
    #define       bHDMIRX_PIPE_BYPASS_CTRL_ups420_bypass       1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass          0x00000002

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_csc_bypass          0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_csc_bypass          0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_csc_bypass             2
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_csc_bypass             2
    #define       bHDMIRX_PIPE_BYPASS_CTRL_csc_bypass          1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_csc_bypass             0x00000004

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass   0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass   0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass      3
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass      3
    #define       bHDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass   1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass      0x00000008

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_dither_bypass       0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_dither_bypass       0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_dither_bypass          4
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_dither_bypass          4
    #define       bHDMIRX_PIPE_BYPASS_CTRL_dither_bypass       1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_dither_bypass          0x00000010

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass       0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass       0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass          5
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass          5
    #define       bHDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass       1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass          0x00000020

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass       0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass       0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass          6
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass          6
    #define       bHDMIRX_PIPE_BYPASS_CTRL_patgen_bypass       1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass          0x00000040

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass   0x0008
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass   0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass      7
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass      7
    #define       bHDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass   1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass      0x00000080

    #define     BA_HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass   0x0009
    #define     B16HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass   0x0008
    #define   LSb32HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass      8
    #define   LSb16HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass      8
    #define       bHDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass   1
    #define   MSK32HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass      0x00000100
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_tg_ctrl                         0x000C

    #define     BA_HDMIRX_PIPE_tg_ctrl_start                   0x000C
    #define     B16HDMIRX_PIPE_tg_ctrl_start                   0x000C
    #define   LSb32HDMIRX_PIPE_tg_ctrl_start                      0
    #define   LSb16HDMIRX_PIPE_tg_ctrl_start                      0
    #define       bHDMIRX_PIPE_tg_ctrl_start                   1
    #define   MSK32HDMIRX_PIPE_tg_ctrl_start                      0x00000001

    #define     BA_HDMIRX_PIPE_tg_ctrl_clear                   0x000C
    #define     B16HDMIRX_PIPE_tg_ctrl_clear                   0x000C
    #define   LSb32HDMIRX_PIPE_tg_ctrl_clear                      1
    #define   LSb16HDMIRX_PIPE_tg_ctrl_clear                      1
    #define       bHDMIRX_PIPE_tg_ctrl_clear                   1
    #define   MSK32HDMIRX_PIPE_tg_ctrl_clear                      0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_CFG0                            0x0010

    #define     BA_HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl           0x0010
    #define     B16HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl           0x0010
    #define   LSb32HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl              0
    #define   LSb16HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl              0
    #define       bHDMIRX_PIPE_CFG0_pat_vopFifo_ctrl           1
    #define   MSK32HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl              0x00000001

    #define     BA_HDMIRX_PIPE_CFG0_patvop_fifoCLR             0x0010
    #define     B16HDMIRX_PIPE_CFG0_patvop_fifoCLR             0x0010
    #define   LSb32HDMIRX_PIPE_CFG0_patvop_fifoCLR                1
    #define   LSb16HDMIRX_PIPE_CFG0_patvop_fifoCLR                1
    #define       bHDMIRX_PIPE_CFG0_patvop_fifoCLR             1
    #define   MSK32HDMIRX_PIPE_CFG0_patvop_fifoCLR                0x00000002

    #define     BA_HDMIRX_PIPE_CFG0_CfgSelAlgn                 0x0010
    #define     B16HDMIRX_PIPE_CFG0_CfgSelAlgn                 0x0010
    #define   LSb32HDMIRX_PIPE_CFG0_CfgSelAlgn                    2
    #define   LSb16HDMIRX_PIPE_CFG0_CfgSelAlgn                    2
    #define       bHDMIRX_PIPE_CFG0_CfgSelAlgn                 8
    #define   MSK32HDMIRX_PIPE_CFG0_CfgSelAlgn                    0x000003FC

    #define     BA_HDMIRX_PIPE_CFG0_CfgSel_12_10_8             0x0011
    #define     B16HDMIRX_PIPE_CFG0_CfgSel_12_10_8             0x0010
    #define   LSb32HDMIRX_PIPE_CFG0_CfgSel_12_10_8                10
    #define   LSb16HDMIRX_PIPE_CFG0_CfgSel_12_10_8                10
    #define       bHDMIRX_PIPE_CFG0_CfgSel_12_10_8             4
    #define   MSK32HDMIRX_PIPE_CFG0_CfgSel_12_10_8                0x00003C00

    #define     BA_HDMIRX_PIPE_CFG0_fifo_rd_sel                0x0011
    #define     B16HDMIRX_PIPE_CFG0_fifo_rd_sel                0x0010
    #define   LSb32HDMIRX_PIPE_CFG0_fifo_rd_sel                   14
    #define   LSb16HDMIRX_PIPE_CFG0_fifo_rd_sel                   14
    #define       bHDMIRX_PIPE_CFG0_fifo_rd_sel                1
    #define   MSK32HDMIRX_PIPE_CFG0_fifo_rd_sel                   0x00004000

    #define     BA_HDMIRX_PIPE_CFG0_rd_en_init                 0x0011
    #define     B16HDMIRX_PIPE_CFG0_rd_en_init                 0x0010
    #define   LSb32HDMIRX_PIPE_CFG0_rd_en_init                    15
    #define   LSb16HDMIRX_PIPE_CFG0_rd_en_init                    15
    #define       bHDMIRX_PIPE_CFG0_rd_en_init                 1
    #define   MSK32HDMIRX_PIPE_CFG0_rd_en_init                    0x00008000

    #define     BA_HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b             0x0012
    #define     B16HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b             0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b                16
    #define   LSb16HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b                0
    #define       bHDMIRX_PIPE_CFG0_hdmi_pk_8b_10b             2
    #define   MSK32HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b                0x00030000

    #define     BA_HDMIRX_PIPE_CFG0_rd_init0                   0x0012
    #define     B16HDMIRX_PIPE_CFG0_rd_init0                   0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_rd_init0                      18
    #define   LSb16HDMIRX_PIPE_CFG0_rd_init0                      2
    #define       bHDMIRX_PIPE_CFG0_rd_init0                   1
    #define   MSK32HDMIRX_PIPE_CFG0_rd_init0                      0x00040000

    #define     BA_HDMIRX_PIPE_CFG0_rden_sft_rst               0x0012
    #define     B16HDMIRX_PIPE_CFG0_rden_sft_rst               0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_rden_sft_rst                  19
    #define   LSb16HDMIRX_PIPE_CFG0_rden_sft_rst                  3
    #define       bHDMIRX_PIPE_CFG0_rden_sft_rst               1
    #define   MSK32HDMIRX_PIPE_CFG0_rden_sft_rst                  0x00080000

    #define     BA_HDMIRX_PIPE_CFG0_vsync_cnt_val              0x0012
    #define     B16HDMIRX_PIPE_CFG0_vsync_cnt_val              0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_vsync_cnt_val                 20
    #define   LSb16HDMIRX_PIPE_CFG0_vsync_cnt_val                 4
    #define       bHDMIRX_PIPE_CFG0_vsync_cnt_val              5
    #define   MSK32HDMIRX_PIPE_CFG0_vsync_cnt_val                 0x01F00000

    #define     BA_HDMIRX_PIPE_CFG0_start_mask_reset           0x0013
    #define     B16HDMIRX_PIPE_CFG0_start_mask_reset           0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_start_mask_reset              25
    #define   LSb16HDMIRX_PIPE_CFG0_start_mask_reset              9
    #define       bHDMIRX_PIPE_CFG0_start_mask_reset           1
    #define   MSK32HDMIRX_PIPE_CFG0_start_mask_reset              0x02000000

    #define     BA_HDMIRX_PIPE_CFG0_write_sel_8b               0x0013
    #define     B16HDMIRX_PIPE_CFG0_write_sel_8b               0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_write_sel_8b                  26
    #define   LSb16HDMIRX_PIPE_CFG0_write_sel_8b                  10
    #define       bHDMIRX_PIPE_CFG0_write_sel_8b               2
    #define   MSK32HDMIRX_PIPE_CFG0_write_sel_8b                  0x0C000000

    #define     BA_HDMIRX_PIPE_CFG0_hdmipk_420_sel             0x0013
    #define     B16HDMIRX_PIPE_CFG0_hdmipk_420_sel             0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_hdmipk_420_sel                28
    #define   LSb16HDMIRX_PIPE_CFG0_hdmipk_420_sel                12
    #define       bHDMIRX_PIPE_CFG0_hdmipk_420_sel             1
    #define   MSK32HDMIRX_PIPE_CFG0_hdmipk_420_sel                0x10000000

    #define     BA_HDMIRX_PIPE_CFG0_clock_en_sel               0x0013
    #define     B16HDMIRX_PIPE_CFG0_clock_en_sel               0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_clock_en_sel                  29
    #define   LSb16HDMIRX_PIPE_CFG0_clock_en_sel                  13
    #define       bHDMIRX_PIPE_CFG0_clock_en_sel               1
    #define   MSK32HDMIRX_PIPE_CFG0_clock_en_sel                  0x20000000

    #define     BA_HDMIRX_PIPE_CFG0_pol_ctrl                   0x0013
    #define     B16HDMIRX_PIPE_CFG0_pol_ctrl                   0x0012
    #define   LSb32HDMIRX_PIPE_CFG0_pol_ctrl                      30
    #define   LSb16HDMIRX_PIPE_CFG0_pol_ctrl                      14
    #define       bHDMIRX_PIPE_CFG0_pol_ctrl                   1
    #define   MSK32HDMIRX_PIPE_CFG0_pol_ctrl                      0x40000000

    #define     RA_HDMIRX_PIPE_CFG01                           0x0014

    #define     BA_HDMIRX_PIPE_CFG0_sp_wrbk_8b                 0x0014
    #define     B16HDMIRX_PIPE_CFG0_sp_wrbk_8b                 0x0014
    #define   LSb32HDMIRX_PIPE_CFG0_sp_wrbk_8b                    0
    #define   LSb16HDMIRX_PIPE_CFG0_sp_wrbk_8b                    0
    #define       bHDMIRX_PIPE_CFG0_sp_wrbk_8b                 2
    #define   MSK32HDMIRX_PIPE_CFG0_sp_wrbk_8b                    0x00000003
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_CFG1                            0x0018

    #define     BA_HDMIRX_PIPE_CFG1_vs_cnt                     0x0018
    #define     B16HDMIRX_PIPE_CFG1_vs_cnt                     0x0018
    #define   LSb32HDMIRX_PIPE_CFG1_vs_cnt                        0
    #define   LSb16HDMIRX_PIPE_CFG1_vs_cnt                        0
    #define       bHDMIRX_PIPE_CFG1_vs_cnt                     32
    #define   MSK32HDMIRX_PIPE_CFG1_vs_cnt                        0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_CFG2                            0x001C

    #define     BA_HDMIRX_PIPE_CFG2_hs_cnt                     0x001C
    #define     B16HDMIRX_PIPE_CFG2_hs_cnt                     0x001C
    #define   LSb32HDMIRX_PIPE_CFG2_hs_cnt                        0
    #define   LSb16HDMIRX_PIPE_CFG2_hs_cnt                        0
    #define       bHDMIRX_PIPE_CFG2_hs_cnt                     16
    #define   MSK32HDMIRX_PIPE_CFG2_hs_cnt                        0x0000FFFF

    #define     BA_HDMIRX_PIPE_CFG2_sync_pol_ctrl              0x001E
    #define     B16HDMIRX_PIPE_CFG2_sync_pol_ctrl              0x001E
    #define   LSb32HDMIRX_PIPE_CFG2_sync_pol_ctrl                 16
    #define   LSb16HDMIRX_PIPE_CFG2_sync_pol_ctrl                 0
    #define       bHDMIRX_PIPE_CFG2_sync_pol_ctrl              2
    #define   MSK32HDMIRX_PIPE_CFG2_sync_pol_ctrl                 0x00030000

    #define     BA_HDMIRX_PIPE_CFG2_sync_sts_en                0x001E
    #define     B16HDMIRX_PIPE_CFG2_sync_sts_en                0x001E
    #define   LSb32HDMIRX_PIPE_CFG2_sync_sts_en                   18
    #define   LSb16HDMIRX_PIPE_CFG2_sync_sts_en                   2
    #define       bHDMIRX_PIPE_CFG2_sync_sts_en                2
    #define   MSK32HDMIRX_PIPE_CFG2_sync_sts_en                   0x000C0000

    #define     BA_HDMIRX_PIPE_CFG2_sts_clr                    0x001E
    #define     B16HDMIRX_PIPE_CFG2_sts_clr                    0x001E
    #define   LSb32HDMIRX_PIPE_CFG2_sts_clr                       20
    #define   LSb16HDMIRX_PIPE_CFG2_sts_clr                       4
    #define       bHDMIRX_PIPE_CFG2_sts_clr                    1
    #define   MSK32HDMIRX_PIPE_CFG2_sts_clr                       0x00100000

    #define     BA_HDMIRX_PIPE_CFG2_stsflg_clr_en              0x001E
    #define     B16HDMIRX_PIPE_CFG2_stsflg_clr_en              0x001E
    #define   LSb32HDMIRX_PIPE_CFG2_stsflg_clr_en                 21
    #define   LSb16HDMIRX_PIPE_CFG2_stsflg_clr_en                 5
    #define       bHDMIRX_PIPE_CFG2_stsflg_clr_en              1
    #define   MSK32HDMIRX_PIPE_CFG2_stsflg_clr_en                 0x00200000

    #define     BA_HDMIRX_PIPE_CFG2_interlace_inp_en           0x001E
    #define     B16HDMIRX_PIPE_CFG2_interlace_inp_en           0x001E
    #define   LSb32HDMIRX_PIPE_CFG2_interlace_inp_en              22
    #define   LSb16HDMIRX_PIPE_CFG2_interlace_inp_en              6
    #define       bHDMIRX_PIPE_CFG2_interlace_inp_en           1
    #define   MSK32HDMIRX_PIPE_CFG2_interlace_inp_en              0x00400000

    #define     BA_HDMIRX_PIPE_CFG2_patgenFifo_stsClr          0x001E
    #define     B16HDMIRX_PIPE_CFG2_patgenFifo_stsClr          0x001E
    #define   LSb32HDMIRX_PIPE_CFG2_patgenFifo_stsClr             23
    #define   LSb16HDMIRX_PIPE_CFG2_patgenFifo_stsClr             7
    #define       bHDMIRX_PIPE_CFG2_patgenFifo_stsClr          1
    #define   MSK32HDMIRX_PIPE_CFG2_patgenFifo_stsClr             0x00800000

    #define     BA_HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr          0x001F
    #define     B16HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr          0x001E
    #define   LSb32HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr             24
    #define   LSb16HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr             8
    #define       bHDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr          1
    #define   MSK32HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr             0x01000000
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_CFG3                            0x0020

    #define     BA_HDMIRX_PIPE_CFG3_fldsts_l                   0x0020
    #define     B16HDMIRX_PIPE_CFG3_fldsts_l                   0x0020
    #define   LSb32HDMIRX_PIPE_CFG3_fldsts_l                      0
    #define   LSb16HDMIRX_PIPE_CFG3_fldsts_l                      0
    #define       bHDMIRX_PIPE_CFG3_fldsts_l                   16
    #define   MSK32HDMIRX_PIPE_CFG3_fldsts_l                      0x0000FFFF

    #define     BA_HDMIRX_PIPE_CFG3_fldsts_h                   0x0022
    #define     B16HDMIRX_PIPE_CFG3_fldsts_h                   0x0022
    #define   LSb32HDMIRX_PIPE_CFG3_fldsts_h                      16
    #define   LSb16HDMIRX_PIPE_CFG3_fldsts_h                      0
    #define       bHDMIRX_PIPE_CFG3_fldsts_h                   16
    #define   MSK32HDMIRX_PIPE_CFG3_fldsts_h                      0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_CFG4                            0x0024

    #define     BA_HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl    0x0024
    #define     B16HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl    0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl       0
    #define   LSb16HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl       0
    #define       bHDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl    1
    #define   MSK32HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl       0x00000001

    #define     BA_HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel    0x0024
    #define     B16HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel    0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel       1
    #define   LSb16HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel       1
    #define       bHDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel    1
    #define   MSK32HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel       0x00000002

    #define     BA_HDMIRX_PIPE_CFG4_dlbyedr_datasel            0x0024
    #define     B16HDMIRX_PIPE_CFG4_dlbyedr_datasel            0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_dlbyedr_datasel               2
    #define   LSb16HDMIRX_PIPE_CFG4_dlbyedr_datasel               2
    #define       bHDMIRX_PIPE_CFG4_dlbyedr_datasel            1
    #define   MSK32HDMIRX_PIPE_CFG4_dlbyedr_datasel               0x00000004

    #define     BA_HDMIRX_PIPE_CFG4_dvtest_fifoCLR             0x0024
    #define     B16HDMIRX_PIPE_CFG4_dvtest_fifoCLR             0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_dvtest_fifoCLR                3
    #define   LSb16HDMIRX_PIPE_CFG4_dvtest_fifoCLR                3
    #define       bHDMIRX_PIPE_CFG4_dvtest_fifoCLR             1
    #define   MSK32HDMIRX_PIPE_CFG4_dvtest_fifoCLR                0x00000008

    #define     BA_HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR            0x0024
    #define     B16HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR            0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR               4
    #define   LSb16HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR               4
    #define       bHDMIRX_PIPE_CFG4_dlbyedr_fifoCLR            1
    #define   MSK32HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR               0x00000010

    #define     BA_HDMIRX_PIPE_CFG4_rdmain_initval0            0x0024
    #define     B16HDMIRX_PIPE_CFG4_rdmain_initval0            0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_rdmain_initval0               5
    #define   LSb16HDMIRX_PIPE_CFG4_rdmain_initval0               5
    #define       bHDMIRX_PIPE_CFG4_rdmain_initval0            1
    #define   MSK32HDMIRX_PIPE_CFG4_rdmain_initval0               0x00000020

    #define     BA_HDMIRX_PIPE_CFG4_rdmain_initval1            0x0024
    #define     B16HDMIRX_PIPE_CFG4_rdmain_initval1            0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_rdmain_initval1               6
    #define   LSb16HDMIRX_PIPE_CFG4_rdmain_initval1               6
    #define       bHDMIRX_PIPE_CFG4_rdmain_initval1            1
    #define   MSK32HDMIRX_PIPE_CFG4_rdmain_initval1               0x00000040

    #define     BA_HDMIRX_PIPE_CFG4_dvtest_dither_en           0x0024
    #define     B16HDMIRX_PIPE_CFG4_dvtest_dither_en           0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_dvtest_dither_en              7
    #define   LSb16HDMIRX_PIPE_CFG4_dvtest_dither_en              7
    #define       bHDMIRX_PIPE_CFG4_dvtest_dither_en           1
    #define   MSK32HDMIRX_PIPE_CFG4_dvtest_dither_en              0x00000080

    #define     BA_HDMIRX_PIPE_CFG4_uvrd_en_init0              0x0025
    #define     B16HDMIRX_PIPE_CFG4_uvrd_en_init0              0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_uvrd_en_init0                 8
    #define   LSb16HDMIRX_PIPE_CFG4_uvrd_en_init0                 8
    #define       bHDMIRX_PIPE_CFG4_uvrd_en_init0              1
    #define   MSK32HDMIRX_PIPE_CFG4_uvrd_en_init0                 0x00000100

    #define     BA_HDMIRX_PIPE_CFG4_uvrd_en_init1              0x0025
    #define     B16HDMIRX_PIPE_CFG4_uvrd_en_init1              0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_uvrd_en_init1                 9
    #define   LSb16HDMIRX_PIPE_CFG4_uvrd_en_init1                 9
    #define       bHDMIRX_PIPE_CFG4_uvrd_en_init1              1
    #define   MSK32HDMIRX_PIPE_CFG4_uvrd_en_init1                 0x00000200

    #define     BA_HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl        0x0025
    #define     B16HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl        0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl           10
    #define   LSb16HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl           10
    #define       bHDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl        1
    #define   MSK32HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl           0x00000400

    #define     BA_HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl       0x0025
    #define     B16HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl       0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl          11
    #define   LSb16HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl          11
    #define       bHDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl       1
    #define   MSK32HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl          0x00000800

    #define     BA_HDMIRX_PIPE_CFG4_uvrd_en_mask               0x0025
    #define     B16HDMIRX_PIPE_CFG4_uvrd_en_mask               0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_uvrd_en_mask                  12
    #define   LSb16HDMIRX_PIPE_CFG4_uvrd_en_mask                  12
    #define       bHDMIRX_PIPE_CFG4_uvrd_en_mask               1
    #define   MSK32HDMIRX_PIPE_CFG4_uvrd_en_mask                  0x00001000

    #define     BA_HDMIRX_PIPE_CFG4_uv422_444_sel              0x0025
    #define     B16HDMIRX_PIPE_CFG4_uv422_444_sel              0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_uv422_444_sel                 13
    #define   LSb16HDMIRX_PIPE_CFG4_uv422_444_sel                 13
    #define       bHDMIRX_PIPE_CFG4_uv422_444_sel              1
    #define   MSK32HDMIRX_PIPE_CFG4_uv422_444_sel                 0x00002000

    #define     BA_HDMIRX_PIPE_CFG4_yuv422_444_sel             0x0025
    #define     B16HDMIRX_PIPE_CFG4_yuv422_444_sel             0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_yuv422_444_sel                14
    #define   LSb16HDMIRX_PIPE_CFG4_yuv422_444_sel                14
    #define       bHDMIRX_PIPE_CFG4_yuv422_444_sel             1
    #define   MSK32HDMIRX_PIPE_CFG4_yuv422_444_sel                0x00004000

    #define     BA_HDMIRX_PIPE_CFG4_mode_yc42x                 0x0025
    #define     B16HDMIRX_PIPE_CFG4_mode_yc42x                 0x0024
    #define   LSb32HDMIRX_PIPE_CFG4_mode_yc42x                    15
    #define   LSb16HDMIRX_PIPE_CFG4_mode_yc42x                    15
    #define       bHDMIRX_PIPE_CFG4_mode_yc42x                 1
    #define   MSK32HDMIRX_PIPE_CFG4_mode_yc42x                    0x00008000

    #define     BA_HDMIRX_PIPE_CFG4_UV_swap_regs               0x0026
    #define     B16HDMIRX_PIPE_CFG4_UV_swap_regs               0x0026
    #define   LSb32HDMIRX_PIPE_CFG4_UV_swap_regs                  16
    #define   LSb16HDMIRX_PIPE_CFG4_UV_swap_regs                  0
    #define       bHDMIRX_PIPE_CFG4_UV_swap_regs               1
    #define   MSK32HDMIRX_PIPE_CFG4_UV_swap_regs                  0x00010000

    #define     BA_HDMIRX_PIPE_CFG4_vip_420sp_en               0x0026
    #define     B16HDMIRX_PIPE_CFG4_vip_420sp_en               0x0026
    #define   LSb32HDMIRX_PIPE_CFG4_vip_420sp_en                  17
    #define   LSb16HDMIRX_PIPE_CFG4_vip_420sp_en                  1
    #define       bHDMIRX_PIPE_CFG4_vip_420sp_en               1
    #define   MSK32HDMIRX_PIPE_CFG4_vip_420sp_en                  0x00020000

    #define     BA_HDMIRX_PIPE_CFG4_vip_420_mode_ctrl          0x0026
    #define     B16HDMIRX_PIPE_CFG4_vip_420_mode_ctrl          0x0026
    #define   LSb32HDMIRX_PIPE_CFG4_vip_420_mode_ctrl             18
    #define   LSb16HDMIRX_PIPE_CFG4_vip_420_mode_ctrl             2
    #define       bHDMIRX_PIPE_CFG4_vip_420_mode_ctrl          2
    #define   MSK32HDMIRX_PIPE_CFG4_vip_420_mode_ctrl             0x000C0000

    #define     BA_HDMIRX_PIPE_CFG4_vip_420_width_ctrl         0x0026
    #define     B16HDMIRX_PIPE_CFG4_vip_420_width_ctrl         0x0026
    #define   LSb32HDMIRX_PIPE_CFG4_vip_420_width_ctrl            20
    #define   LSb16HDMIRX_PIPE_CFG4_vip_420_width_ctrl            4
    #define       bHDMIRX_PIPE_CFG4_vip_420_width_ctrl         4
    #define   MSK32HDMIRX_PIPE_CFG4_vip_420_width_ctrl            0x00F00000

    #define     BA_HDMIRX_PIPE_CFG4_dummy_reg                  0x0027
    #define     B16HDMIRX_PIPE_CFG4_dummy_reg                  0x0026
    #define   LSb32HDMIRX_PIPE_CFG4_dummy_reg                     24
    #define   LSb16HDMIRX_PIPE_CFG4_dummy_reg                     8
    #define       bHDMIRX_PIPE_CFG4_dummy_reg                  1
    #define   MSK32HDMIRX_PIPE_CFG4_dummy_reg                     0x01000000

    #define     BA_HDMIRX_PIPE_CFG4_pw_opt_en                  0x0027
    #define     B16HDMIRX_PIPE_CFG4_pw_opt_en                  0x0026
    #define   LSb32HDMIRX_PIPE_CFG4_pw_opt_en                     25
    #define   LSb16HDMIRX_PIPE_CFG4_pw_opt_en                     9
    #define       bHDMIRX_PIPE_CFG4_pw_opt_en                  1
    #define   MSK32HDMIRX_PIPE_CFG4_pw_opt_en                     0x02000000
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_CFG5                            0x0028

    #define     BA_HDMIRX_PIPE_CFG5_start                      0x0028
    #define     B16HDMIRX_PIPE_CFG5_start                      0x0028
    #define   LSb32HDMIRX_PIPE_CFG5_start                         0
    #define   LSb16HDMIRX_PIPE_CFG5_start                         0
    #define       bHDMIRX_PIPE_CFG5_start                      1
    #define   MSK32HDMIRX_PIPE_CFG5_start                         0x00000001

    #define     BA_HDMIRX_PIPE_CFG5_clear                      0x0028
    #define     B16HDMIRX_PIPE_CFG5_clear                      0x0028
    #define   LSb32HDMIRX_PIPE_CFG5_clear                         1
    #define   LSb16HDMIRX_PIPE_CFG5_clear                         1
    #define       bHDMIRX_PIPE_CFG5_clear                      1
    #define   MSK32HDMIRX_PIPE_CFG5_clear                         0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_CTRL                        0x002C

    #define     BA_HDMIRX_PIPE_VIP_CTRL_otg_start              0x002C
    #define     B16HDMIRX_PIPE_VIP_CTRL_otg_start              0x002C
    #define   LSb32HDMIRX_PIPE_VIP_CTRL_otg_start                 0
    #define   LSb16HDMIRX_PIPE_VIP_CTRL_otg_start                 0
    #define       bHDMIRX_PIPE_VIP_CTRL_otg_start              1
    #define   MSK32HDMIRX_PIPE_VIP_CTRL_otg_start                 0x00000001

    #define     BA_HDMIRX_PIPE_VIP_CTRL_otg_clear              0x002C
    #define     B16HDMIRX_PIPE_VIP_CTRL_otg_clear              0x002C
    #define   LSb32HDMIRX_PIPE_VIP_CTRL_otg_clear                 1
    #define   LSb16HDMIRX_PIPE_VIP_CTRL_otg_clear                 1
    #define       bHDMIRX_PIPE_VIP_CTRL_otg_clear              1
    #define   MSK32HDMIRX_PIPE_VIP_CTRL_otg_clear                 0x00000002

    #define     BA_HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear       0x002C
    #define     B16HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear       0x002C
    #define   LSb32HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear          2
    #define   LSb16HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear          2
    #define       bHDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear       1
    #define   MSK32HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear          0x00000004

    #define     BA_HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear      0x002C
    #define     B16HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear      0x002C
    #define   LSb32HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear         3
    #define   LSb16HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear         3
    #define       bHDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear      1
    #define   MSK32HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear         0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_tg_ctrl_420                     0x0030

    #define     BA_HDMIRX_PIPE_tg_ctrl_420_rd_start            0x0030
    #define     B16HDMIRX_PIPE_tg_ctrl_420_rd_start            0x0030
    #define   LSb32HDMIRX_PIPE_tg_ctrl_420_rd_start               0
    #define   LSb16HDMIRX_PIPE_tg_ctrl_420_rd_start               0
    #define       bHDMIRX_PIPE_tg_ctrl_420_rd_start            1
    #define   MSK32HDMIRX_PIPE_tg_ctrl_420_rd_start               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_scl1d_Inpix                     0x0034

    #define     BA_HDMIRX_PIPE_scl1d_Inpix_tot                 0x0034
    #define     B16HDMIRX_PIPE_scl1d_Inpix_tot                 0x0034
    #define   LSb32HDMIRX_PIPE_scl1d_Inpix_tot                    0
    #define   LSb16HDMIRX_PIPE_scl1d_Inpix_tot                    0
    #define       bHDMIRX_PIPE_scl1d_Inpix_tot                 32
    #define   MSK32HDMIRX_PIPE_scl1d_Inpix_tot                    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_sclOFIFO_YInpix                 0x0038

    #define     BA_HDMIRX_PIPE_sclOFIFO_YInpix_tot             0x0038
    #define     B16HDMIRX_PIPE_sclOFIFO_YInpix_tot             0x0038
    #define   LSb32HDMIRX_PIPE_sclOFIFO_YInpix_tot                0
    #define   LSb16HDMIRX_PIPE_sclOFIFO_YInpix_tot                0
    #define       bHDMIRX_PIPE_sclOFIFO_YInpix_tot             32
    #define   MSK32HDMIRX_PIPE_sclOFIFO_YInpix_tot                0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_sclOFIFO_UVInpix                0x003C

    #define     BA_HDMIRX_PIPE_sclOFIFO_UVInpix_tot            0x003C
    #define     B16HDMIRX_PIPE_sclOFIFO_UVInpix_tot            0x003C
    #define   LSb32HDMIRX_PIPE_sclOFIFO_UVInpix_tot               0
    #define   LSb16HDMIRX_PIPE_sclOFIFO_UVInpix_tot               0
    #define       bHDMIRX_PIPE_sclOFIFO_UVInpix_tot            32
    #define   MSK32HDMIRX_PIPE_sclOFIFO_UVInpix_tot               0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_hdmirxpipe_Inpix                0x0040

    #define     BA_HDMIRX_PIPE_hdmirxpipe_Inpix_tot            0x0040
    #define     B16HDMIRX_PIPE_hdmirxpipe_Inpix_tot            0x0040
    #define   LSb32HDMIRX_PIPE_hdmirxpipe_Inpix_tot               0
    #define   LSb16HDMIRX_PIPE_hdmirxpipe_Inpix_tot               0
    #define       bHDMIRX_PIPE_hdmirxpipe_Inpix_tot            32
    #define   MSK32HDMIRX_PIPE_hdmirxpipe_Inpix_tot               0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_STATUS                          0x0044

    #define     BA_HDMIRX_PIPE_STATUS_VIP_Tg                   0x0044
    #define     B16HDMIRX_PIPE_STATUS_VIP_Tg                   0x0044
    #define   LSb32HDMIRX_PIPE_STATUS_VIP_Tg                      0
    #define   LSb16HDMIRX_PIPE_STATUS_VIP_Tg                      0
    #define       bHDMIRX_PIPE_STATUS_VIP_Tg                   16
    #define   MSK32HDMIRX_PIPE_STATUS_VIP_Tg                      0x0000FFFF

    #define     BA_HDMIRX_PIPE_STATUS_SYNC                     0x0046
    #define     B16HDMIRX_PIPE_STATUS_SYNC                     0x0046
    #define   LSb32HDMIRX_PIPE_STATUS_SYNC                        16
    #define   LSb16HDMIRX_PIPE_STATUS_SYNC                        0
    #define       bHDMIRX_PIPE_STATUS_SYNC                     2
    #define   MSK32HDMIRX_PIPE_STATUS_SYNC                        0x00030000

    #define     BA_HDMIRX_PIPE_STATUS_FIELD                    0x0046
    #define     B16HDMIRX_PIPE_STATUS_FIELD                    0x0046
    #define   LSb32HDMIRX_PIPE_STATUS_FIELD                       18
    #define   LSb16HDMIRX_PIPE_STATUS_FIELD                       2
    #define       bHDMIRX_PIPE_STATUS_FIELD                    1
    #define   MSK32HDMIRX_PIPE_STATUS_FIELD                       0x00040000

    #define     BA_HDMIRX_PIPE_STATUS_patgenFifo_UF            0x0046
    #define     B16HDMIRX_PIPE_STATUS_patgenFifo_UF            0x0046
    #define   LSb32HDMIRX_PIPE_STATUS_patgenFifo_UF               19
    #define   LSb16HDMIRX_PIPE_STATUS_patgenFifo_UF               3
    #define       bHDMIRX_PIPE_STATUS_patgenFifo_UF            1
    #define   MSK32HDMIRX_PIPE_STATUS_patgenFifo_UF               0x00080000

    #define     BA_HDMIRX_PIPE_STATUS_patgenFifo_OF            0x0046
    #define     B16HDMIRX_PIPE_STATUS_patgenFifo_OF            0x0046
    #define   LSb32HDMIRX_PIPE_STATUS_patgenFifo_OF               20
    #define   LSb16HDMIRX_PIPE_STATUS_patgenFifo_OF               4
    #define       bHDMIRX_PIPE_STATUS_patgenFifo_OF            1
    #define   MSK32HDMIRX_PIPE_STATUS_patgenFifo_OF               0x00100000

    #define     BA_HDMIRX_PIPE_STATUS_hdrxFifo_UF              0x0046
    #define     B16HDMIRX_PIPE_STATUS_hdrxFifo_UF              0x0046
    #define   LSb32HDMIRX_PIPE_STATUS_hdrxFifo_UF                 21
    #define   LSb16HDMIRX_PIPE_STATUS_hdrxFifo_UF                 5
    #define       bHDMIRX_PIPE_STATUS_hdrxFifo_UF              1
    #define   MSK32HDMIRX_PIPE_STATUS_hdrxFifo_UF                 0x00200000

    #define     BA_HDMIRX_PIPE_STATUS_hdrxFifo_OF              0x0046
    #define     B16HDMIRX_PIPE_STATUS_hdrxFifo_OF              0x0046
    #define   LSb32HDMIRX_PIPE_STATUS_hdrxFifo_OF                 22
    #define   LSb16HDMIRX_PIPE_STATUS_hdrxFifo_OF                 6
    #define       bHDMIRX_PIPE_STATUS_hdrxFifo_OF              1
    #define   MSK32HDMIRX_PIPE_STATUS_hdrxFifo_OF                 0x00400000

    #define     BA_HDMIRX_PIPE_STATUS_PATGEN_FLD               0x0046
    #define     B16HDMIRX_PIPE_STATUS_PATGEN_FLD               0x0046
    #define   LSb32HDMIRX_PIPE_STATUS_PATGEN_FLD                  23
    #define   LSb16HDMIRX_PIPE_STATUS_PATGEN_FLD                  7
    #define       bHDMIRX_PIPE_STATUS_PATGEN_FLD               1
    #define   MSK32HDMIRX_PIPE_STATUS_PATGEN_FLD                  0x00800000
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_INTR_EN                         0x0048

    #define     BA_HDMIRX_PIPE_INTR_EN_EOF                     0x0048
    #define     B16HDMIRX_PIPE_INTR_EN_EOF                     0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_EOF                        0
    #define   LSb16HDMIRX_PIPE_INTR_EN_EOF                        0
    #define       bHDMIRX_PIPE_INTR_EN_EOF                     1
    #define   MSK32HDMIRX_PIPE_INTR_EN_EOF                        0x00000001

    #define     BA_HDMIRX_PIPE_INTR_EN_HDMIRX                  0x0048
    #define     B16HDMIRX_PIPE_INTR_EN_HDMIRX                  0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_HDMIRX                     1
    #define   LSb16HDMIRX_PIPE_INTR_EN_HDMIRX                     1
    #define       bHDMIRX_PIPE_INTR_EN_HDMIRX                  1
    #define   MSK32HDMIRX_PIPE_INTR_EN_HDMIRX                     0x00000002

    #define     BA_HDMIRX_PIPE_INTR_EN_SPDIFRX                 0x0048
    #define     B16HDMIRX_PIPE_INTR_EN_SPDIFRX                 0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_SPDIFRX                    2
    #define   LSb16HDMIRX_PIPE_INTR_EN_SPDIFRX                    2
    #define       bHDMIRX_PIPE_INTR_EN_SPDIFRX                 2
    #define   MSK32HDMIRX_PIPE_INTR_EN_SPDIFRX                    0x0000000C

    #define     BA_HDMIRX_PIPE_INTR_EN_EOF_YTG                 0x0048
    #define     B16HDMIRX_PIPE_INTR_EN_EOF_YTG                 0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_EOF_YTG                    4
    #define   LSb16HDMIRX_PIPE_INTR_EN_EOF_YTG                    4
    #define       bHDMIRX_PIPE_INTR_EN_EOF_YTG                 1
    #define   MSK32HDMIRX_PIPE_INTR_EN_EOF_YTG                    0x00000010

    #define     BA_HDMIRX_PIPE_INTR_EN_EOF_UVTG                0x0048
    #define     B16HDMIRX_PIPE_INTR_EN_EOF_UVTG                0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_EOF_UVTG                   5
    #define   LSb16HDMIRX_PIPE_INTR_EN_EOF_UVTG                   5
    #define       bHDMIRX_PIPE_INTR_EN_EOF_UVTG                1
    #define   MSK32HDMIRX_PIPE_INTR_EN_EOF_UVTG                   0x00000020

    #define     BA_HDMIRX_PIPE_INTR_EN_EOF_INPTG               0x0048
    #define     B16HDMIRX_PIPE_INTR_EN_EOF_INPTG               0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_EOF_INPTG                  6
    #define   LSb16HDMIRX_PIPE_INTR_EN_EOF_INPTG                  6
    #define       bHDMIRX_PIPE_INTR_EN_EOF_INPTG               1
    #define   MSK32HDMIRX_PIPE_INTR_EN_EOF_INPTG                  0x00000040

    #define     BA_HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR       0x0048
    #define     B16HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR       0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR          7
    #define   LSb16HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR          7
    #define       bHDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR       1
    #define   MSK32HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR          0x00000080

    #define     BA_HDMIRX_PIPE_INTR_EN_DSI_INTR                0x0049
    #define     B16HDMIRX_PIPE_INTR_EN_DSI_INTR                0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_DSI_INTR                   8
    #define   LSb16HDMIRX_PIPE_INTR_EN_DSI_INTR                   8
    #define       bHDMIRX_PIPE_INTR_EN_DSI_INTR                1
    #define   MSK32HDMIRX_PIPE_INTR_EN_DSI_INTR                   0x00000100

    #define     BA_HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR      0x0049
    #define     B16HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR      0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR         9
    #define   LSb16HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR         9
    #define       bHDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR      1
    #define   MSK32HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR         0x00000200

    #define     BA_HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR     0x0049
    #define     B16HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR     0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR        10
    #define   LSb16HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR        10
    #define       bHDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR     1
    #define   MSK32HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR        0x00000400

    #define     BA_HDMIRX_PIPE_INTR_EN_EARCRX_INTR             0x0049
    #define     B16HDMIRX_PIPE_INTR_EN_EARCRX_INTR             0x0048
    #define   LSb32HDMIRX_PIPE_INTR_EN_EARCRX_INTR                11
    #define   LSb16HDMIRX_PIPE_INTR_EN_EARCRX_INTR                11
    #define       bHDMIRX_PIPE_INTR_EN_EARCRX_INTR             1
    #define   MSK32HDMIRX_PIPE_INTR_EN_EARCRX_INTR                0x00000800
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_oTg_ctrl                        0x004C

    #define     BA_HDMIRX_PIPE_oTg_ctrl_start                  0x004C
    #define     B16HDMIRX_PIPE_oTg_ctrl_start                  0x004C
    #define   LSb32HDMIRX_PIPE_oTg_ctrl_start                     0
    #define   LSb16HDMIRX_PIPE_oTg_ctrl_start                     0
    #define       bHDMIRX_PIPE_oTg_ctrl_start                  1
    #define   MSK32HDMIRX_PIPE_oTg_ctrl_start                     0x00000001

    #define     BA_HDMIRX_PIPE_oTg_ctrl_clear                  0x004C
    #define     B16HDMIRX_PIPE_oTg_ctrl_clear                  0x004C
    #define   LSb32HDMIRX_PIPE_oTg_ctrl_clear                     1
    #define   LSb16HDMIRX_PIPE_oTg_ctrl_clear                     1
    #define       bHDMIRX_PIPE_oTg_ctrl_clear                  1
    #define   MSK32HDMIRX_PIPE_oTg_ctrl_clear                     0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_scl1d_Outpix                    0x0050

    #define     BA_HDMIRX_PIPE_scl1d_Outpix_tot                0x0050
    #define     B16HDMIRX_PIPE_scl1d_Outpix_tot                0x0050
    #define   LSb32HDMIRX_PIPE_scl1d_Outpix_tot                   0
    #define   LSb16HDMIRX_PIPE_scl1d_Outpix_tot                   0
    #define       bHDMIRX_PIPE_scl1d_Outpix_tot                32
    #define   MSK32HDMIRX_PIPE_scl1d_Outpix_tot                   0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_STATUS1                         0x0054

    #define     BA_HDMIRX_PIPE_STATUS1_HDRX_oTg                0x0054
    #define     B16HDMIRX_PIPE_STATUS1_HDRX_oTg                0x0054
    #define   LSb32HDMIRX_PIPE_STATUS1_HDRX_oTg                   0
    #define   LSb16HDMIRX_PIPE_STATUS1_HDRX_oTg                   0
    #define       bHDMIRX_PIPE_STATUS1_HDRX_oTg                16
    #define   MSK32HDMIRX_PIPE_STATUS1_HDRX_oTg                   0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_STATUS2                         0x0058

    #define     BA_HDMIRX_PIPE_STATUS2_VIP_YTg                 0x0058
    #define     B16HDMIRX_PIPE_STATUS2_VIP_YTg                 0x0058
    #define   LSb32HDMIRX_PIPE_STATUS2_VIP_YTg                    0
    #define   LSb16HDMIRX_PIPE_STATUS2_VIP_YTg                    0
    #define       bHDMIRX_PIPE_STATUS2_VIP_YTg                 16
    #define   MSK32HDMIRX_PIPE_STATUS2_VIP_YTg                    0x0000FFFF

    #define     BA_HDMIRX_PIPE_STATUS2_VIP_UVTg                0x005A
    #define     B16HDMIRX_PIPE_STATUS2_VIP_UVTg                0x005A
    #define   LSb32HDMIRX_PIPE_STATUS2_VIP_UVTg                   16
    #define   LSb16HDMIRX_PIPE_STATUS2_VIP_UVTg                   0
    #define       bHDMIRX_PIPE_STATUS2_VIP_UVTg                16
    #define   MSK32HDMIRX_PIPE_STATUS2_VIP_UVTg                   0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_WR                          0x005C
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_CRCH_WR                     0x006C
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_METADATA_WR                 0x007C
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_TG                          0x008C
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIPSCLTOP                       0x00CC
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_CSC                         0x02A8
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_DITHER                      0x02E4
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_UPS420_HDMI                 0x02E8
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_PATGEN                      0x030C
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIPSTS                          0x0334
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_VIP_OTG                         0x0380
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_UPS420_HDMI             0x03C0
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_Y                       0x03C4
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_UV                      0x03C8
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_Y_HLUT                  0x03CC
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_Y_VLUT                  0x03D0
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_C_HLUT                  0x03D4
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_C_VLUT                  0x03D8
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_SRAMPWR_UFP_FIFO                0x03DC
    ///////////////////////////////////////////////////////////
    #define     RA_HDMIRX_PIPE_EDR_HDMIRX                      0x03E0
    ///////////////////////////////////////////////////////////

    typedef struct SIE_HDMIRX_PIPE {
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL(r32)        _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL(r16)        _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_CTRL_SCL_CLKEN_CTRL(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_CTRL_fifo_sts_ctrl(r32)         _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_CTRL_fifo_sts_ctrl(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_CTRL_fifo_sts_ctrl(r16)         _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_CTRL_fifo_sts_ctrl(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_CTRL_scl1d_in(r32)              _BFGET_(r32, 2, 2)
    #define   SET32HDMIRX_PIPE_CTRL_scl1d_in(r32,v)            _BFSET_(r32, 2, 2,v)
    #define   GET16HDMIRX_PIPE_CTRL_scl1d_in(r16)              _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_CTRL_scl1d_in(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_CTRL_sb_clkg_en(r32)            _BFGET_(r32, 3, 3)
    #define   SET32HDMIRX_PIPE_CTRL_sb_clkg_en(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16HDMIRX_PIPE_CTRL_sb_clkg_en(r16)            _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_CTRL_sb_clkg_en(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32HDMIRX_PIPE_CTRL_cfg_rst(r32)               _BFGET_(r32, 4, 4)
    #define   SET32HDMIRX_PIPE_CTRL_cfg_rst(r32,v)             _BFSET_(r32, 4, 4,v)
    #define   GET16HDMIRX_PIPE_CTRL_cfg_rst(r16)               _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_CTRL_cfg_rst(r16,v)             _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_CTRL_scl1d_sw_rst(r32)          _BFGET_(r32, 5, 5)
    #define   SET32HDMIRX_PIPE_CTRL_scl1d_sw_rst(r32,v)        _BFSET_(r32, 5, 5,v)
    #define   GET16HDMIRX_PIPE_CTRL_scl1d_sw_rst(r16)          _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_CTRL_scl1d_sw_rst(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32HDMIRX_PIPE_CTRL_scl_rst_en0(r32)           _BFGET_(r32, 6, 6)
    #define   SET32HDMIRX_PIPE_CTRL_scl_rst_en0(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16HDMIRX_PIPE_CTRL_scl_rst_en0(r16)           _BFGET_(r16, 6, 6)
    #define   SET16HDMIRX_PIPE_CTRL_scl_rst_en0(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32HDMIRX_PIPE_CTRL_scl_rst_en1(r32)           _BFGET_(r32, 7, 7)
    #define   SET32HDMIRX_PIPE_CTRL_scl_rst_en1(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16HDMIRX_PIPE_CTRL_scl_rst_en1(r16)           _BFGET_(r16, 7, 7)
    #define   SET16HDMIRX_PIPE_CTRL_scl_rst_en1(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32HDMIRX_PIPE_CTRL_read_sel(r32)              _BFGET_(r32, 9, 8)
    #define   SET32HDMIRX_PIPE_CTRL_read_sel(r32,v)            _BFSET_(r32, 9, 8,v)
    #define   GET16HDMIRX_PIPE_CTRL_read_sel(r16)              _BFGET_(r16, 9, 8)
    #define   SET16HDMIRX_PIPE_CTRL_read_sel(r16,v)            _BFSET_(r16, 9, 8,v)

    #define   GET32HDMIRX_PIPE_CTRL_clken_cnt(r32)             _BFGET_(r32,13,10)
    #define   SET32HDMIRX_PIPE_CTRL_clken_cnt(r32,v)           _BFSET_(r32,13,10,v)
    #define   GET16HDMIRX_PIPE_CTRL_clken_cnt(r16)             _BFGET_(r16,13,10)
    #define   SET16HDMIRX_PIPE_CTRL_clken_cnt(r16,v)           _BFSET_(r16,13,10,v)

    #define   GET32HDMIRX_PIPE_CTRL_clken_ctrl(r32)            _BFGET_(r32,14,14)
    #define   SET32HDMIRX_PIPE_CTRL_clken_ctrl(r32,v)          _BFSET_(r32,14,14,v)
    #define   GET16HDMIRX_PIPE_CTRL_clken_ctrl(r16)            _BFGET_(r16,14,14)
    #define   SET16HDMIRX_PIPE_CTRL_clken_ctrl(r16,v)          _BFSET_(r16,14,14,v)

    #define   GET32HDMIRX_PIPE_CTRL_tgEof_en(r32)              _BFGET_(r32,15,15)
    #define   SET32HDMIRX_PIPE_CTRL_tgEof_en(r32,v)            _BFSET_(r32,15,15,v)
    #define   GET16HDMIRX_PIPE_CTRL_tgEof_en(r16)              _BFGET_(r16,15,15)
    #define   SET16HDMIRX_PIPE_CTRL_tgEof_en(r16,v)            _BFSET_(r16,15,15,v)

    #define   GET32HDMIRX_PIPE_CTRL_rdy_sts0_en(r32)           _BFGET_(r32,16,16)
    #define   SET32HDMIRX_PIPE_CTRL_rdy_sts0_en(r32,v)         _BFSET_(r32,16,16,v)
    #define   GET16HDMIRX_PIPE_CTRL_rdy_sts0_en(r16)           _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_CTRL_rdy_sts0_en(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_CTRL_rdy_sts1_en(r32)           _BFGET_(r32,17,17)
    #define   SET32HDMIRX_PIPE_CTRL_rdy_sts1_en(r32,v)         _BFSET_(r32,17,17,v)
    #define   GET16HDMIRX_PIPE_CTRL_rdy_sts1_en(r16)           _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_CTRL_rdy_sts1_en(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_CTRL_hdmi420sp_wrbk(r32)        _BFGET_(r32,18,18)
    #define   SET32HDMIRX_PIPE_CTRL_hdmi420sp_wrbk(r32,v)      _BFSET_(r32,18,18,v)
    #define   GET16HDMIRX_PIPE_CTRL_hdmi420sp_wrbk(r16)        _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_CTRL_hdmi420sp_wrbk(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_CTRL_ofifo_sts_ctrl(r32)        _BFGET_(r32,19,19)
    #define   SET32HDMIRX_PIPE_CTRL_ofifo_sts_ctrl(r32,v)      _BFSET_(r32,19,19,v)
    #define   GET16HDMIRX_PIPE_CTRL_ofifo_sts_ctrl(r16)        _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_CTRL_ofifo_sts_ctrl(r16,v)      _BFSET_(r16, 3, 3,v)

    #define   GET32HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en(r32)     _BFGET_(r32,20,20)
    #define   SET32HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en(r32,v)   _BFSET_(r32,20,20,v)
    #define   GET16HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en(r16)     _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_CTRL_sclOutrdy_sts0_en(r16,v)   _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en(r32)     _BFGET_(r32,21,21)
    #define   SET32HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en(r32,v)   _BFSET_(r32,21,21,v)
    #define   GET16HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en(r16)     _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_CTRL_sclOutrdy_sts1_en(r16,v)   _BFSET_(r16, 5, 5,v)

    #define   GET32HDMIRX_PIPE_CTRL_oclken_ocnt(r32)           _BFGET_(r32,25,22)
    #define   SET32HDMIRX_PIPE_CTRL_oclken_ocnt(r32,v)         _BFSET_(r32,25,22,v)
    #define   GET16HDMIRX_PIPE_CTRL_oclken_ocnt(r16)           _BFGET_(r16, 9, 6)
    #define   SET16HDMIRX_PIPE_CTRL_oclken_ocnt(r16,v)         _BFSET_(r16, 9, 6,v)

    #define   GET32HDMIRX_PIPE_CTRL_oclken_ctrl(r32)           _BFGET_(r32,26,26)
    #define   SET32HDMIRX_PIPE_CTRL_oclken_ctrl(r32,v)         _BFSET_(r32,26,26,v)
    #define   GET16HDMIRX_PIPE_CTRL_oclken_ctrl(r16)           _BFGET_(r16,10,10)
    #define   SET16HDMIRX_PIPE_CTRL_oclken_ctrl(r16,v)         _BFSET_(r16,10,10,v)

    #define   GET32HDMIRX_PIPE_CTRL_swap_regs(r32)             _BFGET_(r32,27,27)
    #define   SET32HDMIRX_PIPE_CTRL_swap_regs(r32,v)           _BFSET_(r32,27,27,v)
    #define   GET16HDMIRX_PIPE_CTRL_swap_regs(r16)             _BFGET_(r16,11,11)
    #define   SET16HDMIRX_PIPE_CTRL_swap_regs(r16,v)           _BFSET_(r16,11,11,v)

    #define   GET32HDMIRX_PIPE_CTRL_uvPack_sftrst(r32)         _BFGET_(r32,28,28)
    #define   SET32HDMIRX_PIPE_CTRL_uvPack_sftrst(r32,v)       _BFSET_(r32,28,28,v)
    #define   GET16HDMIRX_PIPE_CTRL_uvPack_sftrst(r16)         _BFGET_(r16,12,12)
    #define   SET16HDMIRX_PIPE_CTRL_uvPack_sftrst(r16,v)       _BFSET_(r16,12,12,v)

    #define   GET32HDMIRX_PIPE_CTRL_uvPack_sel(r32)            _BFGET_(r32,29,29)
    #define   SET32HDMIRX_PIPE_CTRL_uvPack_sel(r32,v)          _BFSET_(r32,29,29,v)
    #define   GET16HDMIRX_PIPE_CTRL_uvPack_sel(r16)            _BFGET_(r16,13,13)
    #define   SET16HDMIRX_PIPE_CTRL_uvPack_sel(r16,v)          _BFSET_(r16,13,13,v)

    #define   GET32HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl(r32)      _BFGET_(r32,30,30)
    #define   SET32HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl(r32,v)    _BFSET_(r32,30,30,v)
    #define   GET16HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl(r16)      _BFGET_(r16,14,14)
    #define   SET16HDMIRX_PIPE_CTRL_scl_InFifo_Yctrl(r16,v)    _BFSET_(r16,14,14,v)

    #define   GET32HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl(r32)     _BFGET_(r32,31,31)
    #define   SET32HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl(r32,v)   _BFSET_(r32,31,31,v)
    #define   GET16HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl(r16)     _BFGET_(r16,15,15)
    #define   SET16HDMIRX_PIPE_CTRL_scl_InFifo_UVctrl(r16,v)   _BFSET_(r16,15,15,v)

    #define     w32HDMIRX_PIPE_CTRL                            {\
            UNSG32 uCTRL_SCL_CLKEN_CTRL                        :  1;\
            UNSG32 uCTRL_fifo_sts_ctrl                         :  1;\
            UNSG32 uCTRL_scl1d_in                              :  1;\
            UNSG32 uCTRL_sb_clkg_en                            :  1;\
            UNSG32 uCTRL_cfg_rst                               :  1;\
            UNSG32 uCTRL_scl1d_sw_rst                          :  1;\
            UNSG32 uCTRL_scl_rst_en0                           :  1;\
            UNSG32 uCTRL_scl_rst_en1                           :  1;\
            UNSG32 uCTRL_read_sel                              :  2;\
            UNSG32 uCTRL_clken_cnt                             :  4;\
            UNSG32 uCTRL_clken_ctrl                            :  1;\
            UNSG32 uCTRL_tgEof_en                              :  1;\
            UNSG32 uCTRL_rdy_sts0_en                           :  1;\
            UNSG32 uCTRL_rdy_sts1_en                           :  1;\
            UNSG32 uCTRL_hdmi420sp_wrbk                        :  1;\
            UNSG32 uCTRL_ofifo_sts_ctrl                        :  1;\
            UNSG32 uCTRL_sclOutrdy_sts0_en                     :  1;\
            UNSG32 uCTRL_sclOutrdy_sts1_en                     :  1;\
            UNSG32 uCTRL_oclken_ocnt                           :  4;\
            UNSG32 uCTRL_oclken_ctrl                           :  1;\
            UNSG32 uCTRL_swap_regs                             :  1;\
            UNSG32 uCTRL_uvPack_sftrst                         :  1;\
            UNSG32 uCTRL_uvPack_sel                            :  1;\
            UNSG32 uCTRL_scl_InFifo_Yctrl                      :  1;\
            UNSG32 uCTRL_scl_InFifo_UVctrl                     :  1;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CTRL;
            struct w32HDMIRX_PIPE_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl(r32)        _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl(r16)        _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_CTRL0_rdy0_sts_ctrl(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl(r32)        _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl(r16)        _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_CTRL0_rdy1_sts_ctrl(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl(r32)   _BFGET_(r32, 2, 2)
    #define   SET32HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl(r16)   _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_CTRL0_scl_OFifo_fullCtrl(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_CTRL0_edr_hdmirx_sel(r32)       _BFGET_(r32, 3, 3)
    #define   SET32HDMIRX_PIPE_CTRL0_edr_hdmirx_sel(r32,v)     _BFSET_(r32, 3, 3,v)
    #define   GET16HDMIRX_PIPE_CTRL0_edr_hdmirx_sel(r16)       _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_CTRL0_edr_hdmirx_sel(r16,v)     _BFSET_(r16, 3, 3,v)

    #define   GET32HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel(r32) _BFGET_(r32, 4, 4)
    #define   SET32HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel(r16) _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_CTRL0_edr_hdmirx_clken_sel(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk(r32) _BFGET_(r32, 5, 5)
    #define   SET32HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk(r32,v) _BFSET_(r32, 5, 5,v)
    #define   GET16HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk(r16) _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_CTRL0_hdmirx_metadata_wrbk(r16,v) _BFSET_(r16, 5, 5,v)

    #define     w32HDMIRX_PIPE_CTRL0                           {\
            UNSG32 uCTRL0_rdy0_sts_ctrl                        :  1;\
            UNSG32 uCTRL0_rdy1_sts_ctrl                        :  1;\
            UNSG32 uCTRL0_scl_OFifo_fullCtrl                   :  1;\
            UNSG32 uCTRL0_edr_hdmirx_sel                       :  1;\
            UNSG32 uCTRL0_edr_hdmirx_clken_sel                 :  1;\
            UNSG32 uCTRL0_hdmirx_metadata_wrbk                 :  1;\
            UNSG32 RSVDx4_b6                                   : 26;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CTRL0;
            struct w32HDMIRX_PIPE_CTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass(r32)   _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass(r16)   _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_scl1d_bypass(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass(r32)  _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass(r16)  _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_ups420_bypass(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_csc_bypass(r32)     _BFGET_(r32, 2, 2)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_csc_bypass(r32,v)   _BFSET_(r32, 2, 2,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_csc_bypass(r16)     _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_csc_bypass(r16,v)   _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass(r32) _BFGET_(r32, 3, 3)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass(r16) _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_dns444_422_bypass(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_dither_bypass(r32)  _BFGET_(r32, 4, 4)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_dither_bypass(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_dither_bypass(r16)  _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_dither_bypass(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass(r32)  _BFGET_(r32, 5, 5)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass(r32,v) _BFSET_(r32, 5, 5,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass(r16)  _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_vipsts_bypass(r16,v) _BFSET_(r16, 5, 5,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass(r32)  _BFGET_(r32, 6, 6)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass(r32,v) _BFSET_(r32, 6, 6,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass(r16)  _BFGET_(r16, 6, 6)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_patgen_bypass(r16,v) _BFSET_(r16, 6, 6,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass(r32) _BFGET_(r32, 7, 7)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass(r32,v) _BFSET_(r32, 7, 7,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass(r16) _BFGET_(r16, 7, 7)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_hdmiRxFifo_bypass(r16,v) _BFSET_(r16, 7, 7,v)

    #define   GET32HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass(r32) _BFGET_(r32, 8, 8)
    #define   SET32HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass(r32,v) _BFSET_(r32, 8, 8,v)
    #define   GET16HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass(r16) _BFGET_(r16, 8, 8)
    #define   SET16HDMIRX_PIPE_BYPASS_CTRL_edr_hdmirx_bypass(r16,v) _BFSET_(r16, 8, 8,v)

    #define     w32HDMIRX_PIPE_BYPASS_CTRL                     {\
            UNSG32 uBYPASS_CTRL_scl1d_bypass                   :  1;\
            UNSG32 uBYPASS_CTRL_ups420_bypass                  :  1;\
            UNSG32 uBYPASS_CTRL_csc_bypass                     :  1;\
            UNSG32 uBYPASS_CTRL_dns444_422_bypass              :  1;\
            UNSG32 uBYPASS_CTRL_dither_bypass                  :  1;\
            UNSG32 uBYPASS_CTRL_vipsts_bypass                  :  1;\
            UNSG32 uBYPASS_CTRL_patgen_bypass                  :  1;\
            UNSG32 uBYPASS_CTRL_hdmiRxFifo_bypass              :  1;\
            UNSG32 uBYPASS_CTRL_edr_hdmirx_bypass              :  1;\
            UNSG32 RSVDx8_b9                                   : 23;\
          }
    union { UNSG32 u32HDMIRX_PIPE_BYPASS_CTRL;
            struct w32HDMIRX_PIPE_BYPASS_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_tg_ctrl_start(r32)              _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_tg_ctrl_start(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_tg_ctrl_start(r16)              _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_tg_ctrl_start(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_tg_ctrl_clear(r32)              _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_tg_ctrl_clear(r32,v)            _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_tg_ctrl_clear(r16)              _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_tg_ctrl_clear(r16,v)            _BFSET_(r16, 1, 1,v)

    #define     w32HDMIRX_PIPE_tg_ctrl                         {\
            UNSG32 utg_ctrl_start                              :  1;\
            UNSG32 utg_ctrl_clear                              :  1;\
            UNSG32 RSVDxC_b2                                   : 30;\
          }
    union { UNSG32 u32HDMIRX_PIPE_tg_ctrl;
            struct w32HDMIRX_PIPE_tg_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl(r32)      _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl(r16)      _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_CFG0_pat_vopFifo_ctrl(r16,v)    _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_CFG0_patvop_fifoCLR(r32)        _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_CFG0_patvop_fifoCLR(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_CFG0_patvop_fifoCLR(r16)        _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_CFG0_patvop_fifoCLR(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_CFG0_CfgSelAlgn(r32)            _BFGET_(r32, 9, 2)
    #define   SET32HDMIRX_PIPE_CFG0_CfgSelAlgn(r32,v)          _BFSET_(r32, 9, 2,v)
    #define   GET16HDMIRX_PIPE_CFG0_CfgSelAlgn(r16)            _BFGET_(r16, 9, 2)
    #define   SET16HDMIRX_PIPE_CFG0_CfgSelAlgn(r16,v)          _BFSET_(r16, 9, 2,v)

    #define   GET32HDMIRX_PIPE_CFG0_CfgSel_12_10_8(r32)        _BFGET_(r32,13,10)
    #define   SET32HDMIRX_PIPE_CFG0_CfgSel_12_10_8(r32,v)      _BFSET_(r32,13,10,v)
    #define   GET16HDMIRX_PIPE_CFG0_CfgSel_12_10_8(r16)        _BFGET_(r16,13,10)
    #define   SET16HDMIRX_PIPE_CFG0_CfgSel_12_10_8(r16,v)      _BFSET_(r16,13,10,v)

    #define   GET32HDMIRX_PIPE_CFG0_fifo_rd_sel(r32)           _BFGET_(r32,14,14)
    #define   SET32HDMIRX_PIPE_CFG0_fifo_rd_sel(r32,v)         _BFSET_(r32,14,14,v)
    #define   GET16HDMIRX_PIPE_CFG0_fifo_rd_sel(r16)           _BFGET_(r16,14,14)
    #define   SET16HDMIRX_PIPE_CFG0_fifo_rd_sel(r16,v)         _BFSET_(r16,14,14,v)

    #define   GET32HDMIRX_PIPE_CFG0_rd_en_init(r32)            _BFGET_(r32,15,15)
    #define   SET32HDMIRX_PIPE_CFG0_rd_en_init(r32,v)          _BFSET_(r32,15,15,v)
    #define   GET16HDMIRX_PIPE_CFG0_rd_en_init(r16)            _BFGET_(r16,15,15)
    #define   SET16HDMIRX_PIPE_CFG0_rd_en_init(r16,v)          _BFSET_(r16,15,15,v)

    #define   GET32HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b(r32)        _BFGET_(r32,17,16)
    #define   SET32HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b(r32,v)      _BFSET_(r32,17,16,v)
    #define   GET16HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b(r16)        _BFGET_(r16, 1, 0)
    #define   SET16HDMIRX_PIPE_CFG0_hdmi_pk_8b_10b(r16,v)      _BFSET_(r16, 1, 0,v)

    #define   GET32HDMIRX_PIPE_CFG0_rd_init0(r32)              _BFGET_(r32,18,18)
    #define   SET32HDMIRX_PIPE_CFG0_rd_init0(r32,v)            _BFSET_(r32,18,18,v)
    #define   GET16HDMIRX_PIPE_CFG0_rd_init0(r16)              _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_CFG0_rd_init0(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_CFG0_rden_sft_rst(r32)          _BFGET_(r32,19,19)
    #define   SET32HDMIRX_PIPE_CFG0_rden_sft_rst(r32,v)        _BFSET_(r32,19,19,v)
    #define   GET16HDMIRX_PIPE_CFG0_rden_sft_rst(r16)          _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_CFG0_rden_sft_rst(r16,v)        _BFSET_(r16, 3, 3,v)

    #define   GET32HDMIRX_PIPE_CFG0_vsync_cnt_val(r32)         _BFGET_(r32,24,20)
    #define   SET32HDMIRX_PIPE_CFG0_vsync_cnt_val(r32,v)       _BFSET_(r32,24,20,v)
    #define   GET16HDMIRX_PIPE_CFG0_vsync_cnt_val(r16)         _BFGET_(r16, 8, 4)
    #define   SET16HDMIRX_PIPE_CFG0_vsync_cnt_val(r16,v)       _BFSET_(r16, 8, 4,v)

    #define   GET32HDMIRX_PIPE_CFG0_start_mask_reset(r32)      _BFGET_(r32,25,25)
    #define   SET32HDMIRX_PIPE_CFG0_start_mask_reset(r32,v)    _BFSET_(r32,25,25,v)
    #define   GET16HDMIRX_PIPE_CFG0_start_mask_reset(r16)      _BFGET_(r16, 9, 9)
    #define   SET16HDMIRX_PIPE_CFG0_start_mask_reset(r16,v)    _BFSET_(r16, 9, 9,v)

    #define   GET32HDMIRX_PIPE_CFG0_write_sel_8b(r32)          _BFGET_(r32,27,26)
    #define   SET32HDMIRX_PIPE_CFG0_write_sel_8b(r32,v)        _BFSET_(r32,27,26,v)
    #define   GET16HDMIRX_PIPE_CFG0_write_sel_8b(r16)          _BFGET_(r16,11,10)
    #define   SET16HDMIRX_PIPE_CFG0_write_sel_8b(r16,v)        _BFSET_(r16,11,10,v)

    #define   GET32HDMIRX_PIPE_CFG0_hdmipk_420_sel(r32)        _BFGET_(r32,28,28)
    #define   SET32HDMIRX_PIPE_CFG0_hdmipk_420_sel(r32,v)      _BFSET_(r32,28,28,v)
    #define   GET16HDMIRX_PIPE_CFG0_hdmipk_420_sel(r16)        _BFGET_(r16,12,12)
    #define   SET16HDMIRX_PIPE_CFG0_hdmipk_420_sel(r16,v)      _BFSET_(r16,12,12,v)

    #define   GET32HDMIRX_PIPE_CFG0_clock_en_sel(r32)          _BFGET_(r32,29,29)
    #define   SET32HDMIRX_PIPE_CFG0_clock_en_sel(r32,v)        _BFSET_(r32,29,29,v)
    #define   GET16HDMIRX_PIPE_CFG0_clock_en_sel(r16)          _BFGET_(r16,13,13)
    #define   SET16HDMIRX_PIPE_CFG0_clock_en_sel(r16,v)        _BFSET_(r16,13,13,v)

    #define   GET32HDMIRX_PIPE_CFG0_pol_ctrl(r32)              _BFGET_(r32,30,30)
    #define   SET32HDMIRX_PIPE_CFG0_pol_ctrl(r32,v)            _BFSET_(r32,30,30,v)
    #define   GET16HDMIRX_PIPE_CFG0_pol_ctrl(r16)              _BFGET_(r16,14,14)
    #define   SET16HDMIRX_PIPE_CFG0_pol_ctrl(r16,v)            _BFSET_(r16,14,14,v)

    #define     w32HDMIRX_PIPE_CFG0                            {\
            UNSG32 uCFG0_pat_vopFifo_ctrl                      :  1;\
            UNSG32 uCFG0_patvop_fifoCLR                        :  1;\
            UNSG32 uCFG0_CfgSelAlgn                            :  8;\
            UNSG32 uCFG0_CfgSel_12_10_8                        :  4;\
            UNSG32 uCFG0_fifo_rd_sel                           :  1;\
            UNSG32 uCFG0_rd_en_init                            :  1;\
            UNSG32 uCFG0_hdmi_pk_8b_10b                        :  2;\
            UNSG32 uCFG0_rd_init0                              :  1;\
            UNSG32 uCFG0_rden_sft_rst                          :  1;\
            UNSG32 uCFG0_vsync_cnt_val                         :  5;\
            UNSG32 uCFG0_start_mask_reset                      :  1;\
            UNSG32 uCFG0_write_sel_8b                          :  2;\
            UNSG32 uCFG0_hdmipk_420_sel                        :  1;\
            UNSG32 uCFG0_clock_en_sel                          :  1;\
            UNSG32 uCFG0_pol_ctrl                              :  1;\
            UNSG32 RSVDx10_b31                                 :  1;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CFG0;
            struct w32HDMIRX_PIPE_CFG0;
          };
    #define   GET32HDMIRX_PIPE_CFG0_sp_wrbk_8b(r32)            _BFGET_(r32, 1, 0)
    #define   SET32HDMIRX_PIPE_CFG0_sp_wrbk_8b(r32,v)          _BFSET_(r32, 1, 0,v)
    #define   GET16HDMIRX_PIPE_CFG0_sp_wrbk_8b(r16)            _BFGET_(r16, 1, 0)
    #define   SET16HDMIRX_PIPE_CFG0_sp_wrbk_8b(r16,v)          _BFSET_(r16, 1, 0,v)

    #define     w32HDMIRX_PIPE_CFG01                           {\
            UNSG32 uCFG0_sp_wrbk_8b                            :  2;\
            UNSG32 RSVDx14_b2                                  : 30;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CFG01;
            struct w32HDMIRX_PIPE_CFG01;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CFG1_vs_cnt(r32)                _BFGET_(r32,31, 0)
    #define   SET32HDMIRX_PIPE_CFG1_vs_cnt(r32,v)              _BFSET_(r32,31, 0,v)

    #define     w32HDMIRX_PIPE_CFG1                            {\
            UNSG32 uCFG1_vs_cnt                                : 32;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CFG1;
            struct w32HDMIRX_PIPE_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CFG2_hs_cnt(r32)                _BFGET_(r32,15, 0)
    #define   SET32HDMIRX_PIPE_CFG2_hs_cnt(r32,v)              _BFSET_(r32,15, 0,v)
    #define   GET16HDMIRX_PIPE_CFG2_hs_cnt(r16)                _BFGET_(r16,15, 0)
    #define   SET16HDMIRX_PIPE_CFG2_hs_cnt(r16,v)              _BFSET_(r16,15, 0,v)

    #define   GET32HDMIRX_PIPE_CFG2_sync_pol_ctrl(r32)         _BFGET_(r32,17,16)
    #define   SET32HDMIRX_PIPE_CFG2_sync_pol_ctrl(r32,v)       _BFSET_(r32,17,16,v)
    #define   GET16HDMIRX_PIPE_CFG2_sync_pol_ctrl(r16)         _BFGET_(r16, 1, 0)
    #define   SET16HDMIRX_PIPE_CFG2_sync_pol_ctrl(r16,v)       _BFSET_(r16, 1, 0,v)

    #define   GET32HDMIRX_PIPE_CFG2_sync_sts_en(r32)           _BFGET_(r32,19,18)
    #define   SET32HDMIRX_PIPE_CFG2_sync_sts_en(r32,v)         _BFSET_(r32,19,18,v)
    #define   GET16HDMIRX_PIPE_CFG2_sync_sts_en(r16)           _BFGET_(r16, 3, 2)
    #define   SET16HDMIRX_PIPE_CFG2_sync_sts_en(r16,v)         _BFSET_(r16, 3, 2,v)

    #define   GET32HDMIRX_PIPE_CFG2_sts_clr(r32)               _BFGET_(r32,20,20)
    #define   SET32HDMIRX_PIPE_CFG2_sts_clr(r32,v)             _BFSET_(r32,20,20,v)
    #define   GET16HDMIRX_PIPE_CFG2_sts_clr(r16)               _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_CFG2_sts_clr(r16,v)             _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_CFG2_stsflg_clr_en(r32)         _BFGET_(r32,21,21)
    #define   SET32HDMIRX_PIPE_CFG2_stsflg_clr_en(r32,v)       _BFSET_(r32,21,21,v)
    #define   GET16HDMIRX_PIPE_CFG2_stsflg_clr_en(r16)         _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_CFG2_stsflg_clr_en(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32HDMIRX_PIPE_CFG2_interlace_inp_en(r32)      _BFGET_(r32,22,22)
    #define   SET32HDMIRX_PIPE_CFG2_interlace_inp_en(r32,v)    _BFSET_(r32,22,22,v)
    #define   GET16HDMIRX_PIPE_CFG2_interlace_inp_en(r16)      _BFGET_(r16, 6, 6)
    #define   SET16HDMIRX_PIPE_CFG2_interlace_inp_en(r16,v)    _BFSET_(r16, 6, 6,v)

    #define   GET32HDMIRX_PIPE_CFG2_patgenFifo_stsClr(r32)     _BFGET_(r32,23,23)
    #define   SET32HDMIRX_PIPE_CFG2_patgenFifo_stsClr(r32,v)   _BFSET_(r32,23,23,v)
    #define   GET16HDMIRX_PIPE_CFG2_patgenFifo_stsClr(r16)     _BFGET_(r16, 7, 7)
    #define   SET16HDMIRX_PIPE_CFG2_patgenFifo_stsClr(r16,v)   _BFSET_(r16, 7, 7,v)

    #define   GET32HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr(r32)     _BFGET_(r32,24,24)
    #define   SET32HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr(r32,v)   _BFSET_(r32,24,24,v)
    #define   GET16HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr(r16)     _BFGET_(r16, 8, 8)
    #define   SET16HDMIRX_PIPE_CFG2_hdmiRxFifo_stsClr(r16,v)   _BFSET_(r16, 8, 8,v)

    #define     w32HDMIRX_PIPE_CFG2                            {\
            UNSG32 uCFG2_hs_cnt                                : 16;\
            UNSG32 uCFG2_sync_pol_ctrl                         :  2;\
            UNSG32 uCFG2_sync_sts_en                           :  2;\
            UNSG32 uCFG2_sts_clr                               :  1;\
            UNSG32 uCFG2_stsflg_clr_en                         :  1;\
            UNSG32 uCFG2_interlace_inp_en                      :  1;\
            UNSG32 uCFG2_patgenFifo_stsClr                     :  1;\
            UNSG32 uCFG2_hdmiRxFifo_stsClr                     :  1;\
            UNSG32 RSVDx1C_b25                                 :  7;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CFG2;
            struct w32HDMIRX_PIPE_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CFG3_fldsts_l(r32)              _BFGET_(r32,15, 0)
    #define   SET32HDMIRX_PIPE_CFG3_fldsts_l(r32,v)            _BFSET_(r32,15, 0,v)
    #define   GET16HDMIRX_PIPE_CFG3_fldsts_l(r16)              _BFGET_(r16,15, 0)
    #define   SET16HDMIRX_PIPE_CFG3_fldsts_l(r16,v)            _BFSET_(r16,15, 0,v)

    #define   GET32HDMIRX_PIPE_CFG3_fldsts_h(r32)              _BFGET_(r32,31,16)
    #define   SET32HDMIRX_PIPE_CFG3_fldsts_h(r32,v)            _BFSET_(r32,31,16,v)
    #define   GET16HDMIRX_PIPE_CFG3_fldsts_h(r16)              _BFGET_(r16,15, 0)
    #define   SET16HDMIRX_PIPE_CFG3_fldsts_h(r16,v)            _BFSET_(r16,15, 0,v)

    #define     w32HDMIRX_PIPE_CFG3                            {\
            UNSG32 uCFG3_fldsts_l                              : 16;\
            UNSG32 uCFG3_fldsts_h                              : 16;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CFG3;
            struct w32HDMIRX_PIPE_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl(r32) _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl(r16) _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_CFG4_dvtest_offsclr_Fifoctrl(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel(r32) _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel(r16) _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_CFG4_dvtest_ups420sp_datasel(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_CFG4_dlbyedr_datasel(r32)       _BFGET_(r32, 2, 2)
    #define   SET32HDMIRX_PIPE_CFG4_dlbyedr_datasel(r32,v)     _BFSET_(r32, 2, 2,v)
    #define   GET16HDMIRX_PIPE_CFG4_dlbyedr_datasel(r16)       _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_CFG4_dlbyedr_datasel(r16,v)     _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_CFG4_dvtest_fifoCLR(r32)        _BFGET_(r32, 3, 3)
    #define   SET32HDMIRX_PIPE_CFG4_dvtest_fifoCLR(r32,v)      _BFSET_(r32, 3, 3,v)
    #define   GET16HDMIRX_PIPE_CFG4_dvtest_fifoCLR(r16)        _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_CFG4_dvtest_fifoCLR(r16,v)      _BFSET_(r16, 3, 3,v)

    #define   GET32HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR(r32)       _BFGET_(r32, 4, 4)
    #define   SET32HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR(r32,v)     _BFSET_(r32, 4, 4,v)
    #define   GET16HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR(r16)       _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_CFG4_dlbyedr_fifoCLR(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_CFG4_rdmain_initval0(r32)       _BFGET_(r32, 5, 5)
    #define   SET32HDMIRX_PIPE_CFG4_rdmain_initval0(r32,v)     _BFSET_(r32, 5, 5,v)
    #define   GET16HDMIRX_PIPE_CFG4_rdmain_initval0(r16)       _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_CFG4_rdmain_initval0(r16,v)     _BFSET_(r16, 5, 5,v)

    #define   GET32HDMIRX_PIPE_CFG4_rdmain_initval1(r32)       _BFGET_(r32, 6, 6)
    #define   SET32HDMIRX_PIPE_CFG4_rdmain_initval1(r32,v)     _BFSET_(r32, 6, 6,v)
    #define   GET16HDMIRX_PIPE_CFG4_rdmain_initval1(r16)       _BFGET_(r16, 6, 6)
    #define   SET16HDMIRX_PIPE_CFG4_rdmain_initval1(r16,v)     _BFSET_(r16, 6, 6,v)

    #define   GET32HDMIRX_PIPE_CFG4_dvtest_dither_en(r32)      _BFGET_(r32, 7, 7)
    #define   SET32HDMIRX_PIPE_CFG4_dvtest_dither_en(r32,v)    _BFSET_(r32, 7, 7,v)
    #define   GET16HDMIRX_PIPE_CFG4_dvtest_dither_en(r16)      _BFGET_(r16, 7, 7)
    #define   SET16HDMIRX_PIPE_CFG4_dvtest_dither_en(r16,v)    _BFSET_(r16, 7, 7,v)

    #define   GET32HDMIRX_PIPE_CFG4_uvrd_en_init0(r32)         _BFGET_(r32, 8, 8)
    #define   SET32HDMIRX_PIPE_CFG4_uvrd_en_init0(r32,v)       _BFSET_(r32, 8, 8,v)
    #define   GET16HDMIRX_PIPE_CFG4_uvrd_en_init0(r16)         _BFGET_(r16, 8, 8)
    #define   SET16HDMIRX_PIPE_CFG4_uvrd_en_init0(r16,v)       _BFSET_(r16, 8, 8,v)

    #define   GET32HDMIRX_PIPE_CFG4_uvrd_en_init1(r32)         _BFGET_(r32, 9, 9)
    #define   SET32HDMIRX_PIPE_CFG4_uvrd_en_init1(r32,v)       _BFSET_(r32, 9, 9,v)
    #define   GET16HDMIRX_PIPE_CFG4_uvrd_en_init1(r16)         _BFGET_(r16, 9, 9)
    #define   SET16HDMIRX_PIPE_CFG4_uvrd_en_init1(r16,v)       _BFSET_(r16, 9, 9,v)

    #define   GET32HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl(r32)   _BFGET_(r32,10,10)
    #define   SET32HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl(r32,v) _BFSET_(r32,10,10,v)
    #define   GET16HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl(r16)   _BFGET_(r16,10,10)
    #define   SET16HDMIRX_PIPE_CFG4_scl_OFifoY_aEmpCtrl(r16,v) _BFSET_(r16,10,10,v)

    #define   GET32HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl(r32)  _BFGET_(r32,11,11)
    #define   SET32HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl(r32,v) _BFSET_(r32,11,11,v)
    #define   GET16HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl(r16)  _BFGET_(r16,11,11)
    #define   SET16HDMIRX_PIPE_CFG4_scl_OFifoUV_aEmpCtrl(r16,v) _BFSET_(r16,11,11,v)

    #define   GET32HDMIRX_PIPE_CFG4_uvrd_en_mask(r32)          _BFGET_(r32,12,12)
    #define   SET32HDMIRX_PIPE_CFG4_uvrd_en_mask(r32,v)        _BFSET_(r32,12,12,v)
    #define   GET16HDMIRX_PIPE_CFG4_uvrd_en_mask(r16)          _BFGET_(r16,12,12)
    #define   SET16HDMIRX_PIPE_CFG4_uvrd_en_mask(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32HDMIRX_PIPE_CFG4_uv422_444_sel(r32)         _BFGET_(r32,13,13)
    #define   SET32HDMIRX_PIPE_CFG4_uv422_444_sel(r32,v)       _BFSET_(r32,13,13,v)
    #define   GET16HDMIRX_PIPE_CFG4_uv422_444_sel(r16)         _BFGET_(r16,13,13)
    #define   SET16HDMIRX_PIPE_CFG4_uv422_444_sel(r16,v)       _BFSET_(r16,13,13,v)

    #define   GET32HDMIRX_PIPE_CFG4_yuv422_444_sel(r32)        _BFGET_(r32,14,14)
    #define   SET32HDMIRX_PIPE_CFG4_yuv422_444_sel(r32,v)      _BFSET_(r32,14,14,v)
    #define   GET16HDMIRX_PIPE_CFG4_yuv422_444_sel(r16)        _BFGET_(r16,14,14)
    #define   SET16HDMIRX_PIPE_CFG4_yuv422_444_sel(r16,v)      _BFSET_(r16,14,14,v)

    #define   GET32HDMIRX_PIPE_CFG4_mode_yc42x(r32)            _BFGET_(r32,15,15)
    #define   SET32HDMIRX_PIPE_CFG4_mode_yc42x(r32,v)          _BFSET_(r32,15,15,v)
    #define   GET16HDMIRX_PIPE_CFG4_mode_yc42x(r16)            _BFGET_(r16,15,15)
    #define   SET16HDMIRX_PIPE_CFG4_mode_yc42x(r16,v)          _BFSET_(r16,15,15,v)

    #define   GET32HDMIRX_PIPE_CFG4_UV_swap_regs(r32)          _BFGET_(r32,16,16)
    #define   SET32HDMIRX_PIPE_CFG4_UV_swap_regs(r32,v)        _BFSET_(r32,16,16,v)
    #define   GET16HDMIRX_PIPE_CFG4_UV_swap_regs(r16)          _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_CFG4_UV_swap_regs(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_CFG4_vip_420sp_en(r32)          _BFGET_(r32,17,17)
    #define   SET32HDMIRX_PIPE_CFG4_vip_420sp_en(r32,v)        _BFSET_(r32,17,17,v)
    #define   GET16HDMIRX_PIPE_CFG4_vip_420sp_en(r16)          _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_CFG4_vip_420sp_en(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_CFG4_vip_420_mode_ctrl(r32)     _BFGET_(r32,19,18)
    #define   SET32HDMIRX_PIPE_CFG4_vip_420_mode_ctrl(r32,v)   _BFSET_(r32,19,18,v)
    #define   GET16HDMIRX_PIPE_CFG4_vip_420_mode_ctrl(r16)     _BFGET_(r16, 3, 2)
    #define   SET16HDMIRX_PIPE_CFG4_vip_420_mode_ctrl(r16,v)   _BFSET_(r16, 3, 2,v)

    #define   GET32HDMIRX_PIPE_CFG4_vip_420_width_ctrl(r32)    _BFGET_(r32,23,20)
    #define   SET32HDMIRX_PIPE_CFG4_vip_420_width_ctrl(r32,v)  _BFSET_(r32,23,20,v)
    #define   GET16HDMIRX_PIPE_CFG4_vip_420_width_ctrl(r16)    _BFGET_(r16, 7, 4)
    #define   SET16HDMIRX_PIPE_CFG4_vip_420_width_ctrl(r16,v)  _BFSET_(r16, 7, 4,v)

    #define   GET32HDMIRX_PIPE_CFG4_dummy_reg(r32)             _BFGET_(r32,24,24)
    #define   SET32HDMIRX_PIPE_CFG4_dummy_reg(r32,v)           _BFSET_(r32,24,24,v)
    #define   GET16HDMIRX_PIPE_CFG4_dummy_reg(r16)             _BFGET_(r16, 8, 8)
    #define   SET16HDMIRX_PIPE_CFG4_dummy_reg(r16,v)           _BFSET_(r16, 8, 8,v)

    #define   GET32HDMIRX_PIPE_CFG4_pw_opt_en(r32)             _BFGET_(r32,25,25)
    #define   SET32HDMIRX_PIPE_CFG4_pw_opt_en(r32,v)           _BFSET_(r32,25,25,v)
    #define   GET16HDMIRX_PIPE_CFG4_pw_opt_en(r16)             _BFGET_(r16, 9, 9)
    #define   SET16HDMIRX_PIPE_CFG4_pw_opt_en(r16,v)           _BFSET_(r16, 9, 9,v)

    #define     w32HDMIRX_PIPE_CFG4                            {\
            UNSG32 uCFG4_dvtest_offsclr_Fifoctrl               :  1;\
            UNSG32 uCFG4_dvtest_ups420sp_datasel               :  1;\
            UNSG32 uCFG4_dlbyedr_datasel                       :  1;\
            UNSG32 uCFG4_dvtest_fifoCLR                        :  1;\
            UNSG32 uCFG4_dlbyedr_fifoCLR                       :  1;\
            UNSG32 uCFG4_rdmain_initval0                       :  1;\
            UNSG32 uCFG4_rdmain_initval1                       :  1;\
            UNSG32 uCFG4_dvtest_dither_en                      :  1;\
            UNSG32 uCFG4_uvrd_en_init0                         :  1;\
            UNSG32 uCFG4_uvrd_en_init1                         :  1;\
            UNSG32 uCFG4_scl_OFifoY_aEmpCtrl                   :  1;\
            UNSG32 uCFG4_scl_OFifoUV_aEmpCtrl                  :  1;\
            UNSG32 uCFG4_uvrd_en_mask                          :  1;\
            UNSG32 uCFG4_uv422_444_sel                         :  1;\
            UNSG32 uCFG4_yuv422_444_sel                        :  1;\
            UNSG32 uCFG4_mode_yc42x                            :  1;\
            UNSG32 uCFG4_UV_swap_regs                          :  1;\
            UNSG32 uCFG4_vip_420sp_en                          :  1;\
            UNSG32 uCFG4_vip_420_mode_ctrl                     :  2;\
            UNSG32 uCFG4_vip_420_width_ctrl                    :  4;\
            UNSG32 uCFG4_dummy_reg                             :  1;\
            UNSG32 uCFG4_pw_opt_en                             :  1;\
            UNSG32 RSVDx24_b26                                 :  6;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CFG4;
            struct w32HDMIRX_PIPE_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_CFG5_start(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_CFG5_start(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_CFG5_start(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_CFG5_start(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_CFG5_clear(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_CFG5_clear(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_CFG5_clear(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_CFG5_clear(r16,v)               _BFSET_(r16, 1, 1,v)

    #define     w32HDMIRX_PIPE_CFG5                            {\
            UNSG32 uCFG5_start                                 :  1;\
            UNSG32 uCFG5_clear                                 :  1;\
            UNSG32 RSVDx28_b2                                  : 30;\
          }
    union { UNSG32 u32HDMIRX_PIPE_CFG5;
            struct w32HDMIRX_PIPE_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_VIP_CTRL_otg_start(r32)         _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_VIP_CTRL_otg_start(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_VIP_CTRL_otg_start(r16)         _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_VIP_CTRL_otg_start(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_VIP_CTRL_otg_clear(r32)         _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_VIP_CTRL_otg_clear(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_VIP_CTRL_otg_clear(r16)         _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_VIP_CTRL_otg_clear(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear(r32)  _BFGET_(r32, 2, 2)
    #define   SET32HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear(r16)  _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_VIP_CTRL_sclOfifo_Y_clear(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear(r32) _BFGET_(r32, 3, 3)
    #define   SET32HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear(r16) _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_VIP_CTRL_sclOfifo_UV_clear(r16,v) _BFSET_(r16, 3, 3,v)

    #define     w32HDMIRX_PIPE_VIP_CTRL                        {\
            UNSG32 uVIP_CTRL_otg_start                         :  1;\
            UNSG32 uVIP_CTRL_otg_clear                         :  1;\
            UNSG32 uVIP_CTRL_sclOfifo_Y_clear                  :  1;\
            UNSG32 uVIP_CTRL_sclOfifo_UV_clear                 :  1;\
            UNSG32 RSVDx2C_b4                                  : 28;\
          }
    union { UNSG32 u32HDMIRX_PIPE_VIP_CTRL;
            struct w32HDMIRX_PIPE_VIP_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_tg_ctrl_420_rd_start(r32)       _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_tg_ctrl_420_rd_start(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_tg_ctrl_420_rd_start(r16)       _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_tg_ctrl_420_rd_start(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32HDMIRX_PIPE_tg_ctrl_420                     {\
            UNSG32 utg_ctrl_420_rd_start                       :  1;\
            UNSG32 RSVDx30_b1                                  : 31;\
          }
    union { UNSG32 u32HDMIRX_PIPE_tg_ctrl_420;
            struct w32HDMIRX_PIPE_tg_ctrl_420;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_scl1d_Inpix_tot(r32)            _BFGET_(r32,31, 0)
    #define   SET32HDMIRX_PIPE_scl1d_Inpix_tot(r32,v)          _BFSET_(r32,31, 0,v)

    #define     w32HDMIRX_PIPE_scl1d_Inpix                     {\
            UNSG32 uscl1d_Inpix_tot                            : 32;\
          }
    union { UNSG32 u32HDMIRX_PIPE_scl1d_Inpix;
            struct w32HDMIRX_PIPE_scl1d_Inpix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_sclOFIFO_YInpix_tot(r32)        _BFGET_(r32,31, 0)
    #define   SET32HDMIRX_PIPE_sclOFIFO_YInpix_tot(r32,v)      _BFSET_(r32,31, 0,v)

    #define     w32HDMIRX_PIPE_sclOFIFO_YInpix                 {\
            UNSG32 usclOFIFO_YInpix_tot                        : 32;\
          }
    union { UNSG32 u32HDMIRX_PIPE_sclOFIFO_YInpix;
            struct w32HDMIRX_PIPE_sclOFIFO_YInpix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_sclOFIFO_UVInpix_tot(r32)       _BFGET_(r32,31, 0)
    #define   SET32HDMIRX_PIPE_sclOFIFO_UVInpix_tot(r32,v)     _BFSET_(r32,31, 0,v)

    #define     w32HDMIRX_PIPE_sclOFIFO_UVInpix                {\
            UNSG32 usclOFIFO_UVInpix_tot                       : 32;\
          }
    union { UNSG32 u32HDMIRX_PIPE_sclOFIFO_UVInpix;
            struct w32HDMIRX_PIPE_sclOFIFO_UVInpix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_hdmirxpipe_Inpix_tot(r32)       _BFGET_(r32,31, 0)
    #define   SET32HDMIRX_PIPE_hdmirxpipe_Inpix_tot(r32,v)     _BFSET_(r32,31, 0,v)

    #define     w32HDMIRX_PIPE_hdmirxpipe_Inpix                {\
            UNSG32 uhdmirxpipe_Inpix_tot                       : 32;\
          }
    union { UNSG32 u32HDMIRX_PIPE_hdmirxpipe_Inpix;
            struct w32HDMIRX_PIPE_hdmirxpipe_Inpix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_STATUS_VIP_Tg(r32)              _BFGET_(r32,15, 0)
    #define   SET32HDMIRX_PIPE_STATUS_VIP_Tg(r32,v)            _BFSET_(r32,15, 0,v)
    #define   GET16HDMIRX_PIPE_STATUS_VIP_Tg(r16)              _BFGET_(r16,15, 0)
    #define   SET16HDMIRX_PIPE_STATUS_VIP_Tg(r16,v)            _BFSET_(r16,15, 0,v)

    #define   GET32HDMIRX_PIPE_STATUS_SYNC(r32)                _BFGET_(r32,17,16)
    #define   SET32HDMIRX_PIPE_STATUS_SYNC(r32,v)              _BFSET_(r32,17,16,v)
    #define   GET16HDMIRX_PIPE_STATUS_SYNC(r16)                _BFGET_(r16, 1, 0)
    #define   SET16HDMIRX_PIPE_STATUS_SYNC(r16,v)              _BFSET_(r16, 1, 0,v)

    #define   GET32HDMIRX_PIPE_STATUS_FIELD(r32)               _BFGET_(r32,18,18)
    #define   SET32HDMIRX_PIPE_STATUS_FIELD(r32,v)             _BFSET_(r32,18,18,v)
    #define   GET16HDMIRX_PIPE_STATUS_FIELD(r16)               _BFGET_(r16, 2, 2)
    #define   SET16HDMIRX_PIPE_STATUS_FIELD(r16,v)             _BFSET_(r16, 2, 2,v)

    #define   GET32HDMIRX_PIPE_STATUS_patgenFifo_UF(r32)       _BFGET_(r32,19,19)
    #define   SET32HDMIRX_PIPE_STATUS_patgenFifo_UF(r32,v)     _BFSET_(r32,19,19,v)
    #define   GET16HDMIRX_PIPE_STATUS_patgenFifo_UF(r16)       _BFGET_(r16, 3, 3)
    #define   SET16HDMIRX_PIPE_STATUS_patgenFifo_UF(r16,v)     _BFSET_(r16, 3, 3,v)

    #define   GET32HDMIRX_PIPE_STATUS_patgenFifo_OF(r32)       _BFGET_(r32,20,20)
    #define   SET32HDMIRX_PIPE_STATUS_patgenFifo_OF(r32,v)     _BFSET_(r32,20,20,v)
    #define   GET16HDMIRX_PIPE_STATUS_patgenFifo_OF(r16)       _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_STATUS_patgenFifo_OF(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_STATUS_hdrxFifo_UF(r32)         _BFGET_(r32,21,21)
    #define   SET32HDMIRX_PIPE_STATUS_hdrxFifo_UF(r32,v)       _BFSET_(r32,21,21,v)
    #define   GET16HDMIRX_PIPE_STATUS_hdrxFifo_UF(r16)         _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_STATUS_hdrxFifo_UF(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32HDMIRX_PIPE_STATUS_hdrxFifo_OF(r32)         _BFGET_(r32,22,22)
    #define   SET32HDMIRX_PIPE_STATUS_hdrxFifo_OF(r32,v)       _BFSET_(r32,22,22,v)
    #define   GET16HDMIRX_PIPE_STATUS_hdrxFifo_OF(r16)         _BFGET_(r16, 6, 6)
    #define   SET16HDMIRX_PIPE_STATUS_hdrxFifo_OF(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32HDMIRX_PIPE_STATUS_PATGEN_FLD(r32)          _BFGET_(r32,23,23)
    #define   SET32HDMIRX_PIPE_STATUS_PATGEN_FLD(r32,v)        _BFSET_(r32,23,23,v)
    #define   GET16HDMIRX_PIPE_STATUS_PATGEN_FLD(r16)          _BFGET_(r16, 7, 7)
    #define   SET16HDMIRX_PIPE_STATUS_PATGEN_FLD(r16,v)        _BFSET_(r16, 7, 7,v)

    #define     w32HDMIRX_PIPE_STATUS                          {\
            UNSG32 uSTATUS_VIP_Tg                              : 16;\
            UNSG32 uSTATUS_SYNC                                :  2;\
            UNSG32 uSTATUS_FIELD                               :  1;\
            UNSG32 uSTATUS_patgenFifo_UF                       :  1;\
            UNSG32 uSTATUS_patgenFifo_OF                       :  1;\
            UNSG32 uSTATUS_hdrxFifo_UF                         :  1;\
            UNSG32 uSTATUS_hdrxFifo_OF                         :  1;\
            UNSG32 uSTATUS_PATGEN_FLD                          :  1;\
            UNSG32 RSVDx44_b24                                 :  8;\
          }
    union { UNSG32 u32HDMIRX_PIPE_STATUS;
            struct w32HDMIRX_PIPE_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_INTR_EN_EOF(r32)                _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_INTR_EN_EOF(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_EOF(r16)                _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_INTR_EN_EOF(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_HDMIRX(r32)             _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_INTR_EN_HDMIRX(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_HDMIRX(r16)             _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_INTR_EN_HDMIRX(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_SPDIFRX(r32)            _BFGET_(r32, 3, 2)
    #define   SET32HDMIRX_PIPE_INTR_EN_SPDIFRX(r32,v)          _BFSET_(r32, 3, 2,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_SPDIFRX(r16)            _BFGET_(r16, 3, 2)
    #define   SET16HDMIRX_PIPE_INTR_EN_SPDIFRX(r16,v)          _BFSET_(r16, 3, 2,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_EOF_YTG(r32)            _BFGET_(r32, 4, 4)
    #define   SET32HDMIRX_PIPE_INTR_EN_EOF_YTG(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_EOF_YTG(r16)            _BFGET_(r16, 4, 4)
    #define   SET16HDMIRX_PIPE_INTR_EN_EOF_YTG(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_EOF_UVTG(r32)           _BFGET_(r32, 5, 5)
    #define   SET32HDMIRX_PIPE_INTR_EN_EOF_UVTG(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_EOF_UVTG(r16)           _BFGET_(r16, 5, 5)
    #define   SET16HDMIRX_PIPE_INTR_EN_EOF_UVTG(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_EOF_INPTG(r32)          _BFGET_(r32, 6, 6)
    #define   SET32HDMIRX_PIPE_INTR_EN_EOF_INPTG(r32,v)        _BFSET_(r32, 6, 6,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_EOF_INPTG(r16)          _BFGET_(r16, 6, 6)
    #define   SET16HDMIRX_PIPE_INTR_EN_EOF_INPTG(r16,v)        _BFSET_(r16, 6, 6,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR(r32)  _BFGET_(r32, 7, 7)
    #define   SET32HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR(r32,v) _BFSET_(r32, 7, 7,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR(r16)  _BFGET_(r16, 7, 7)
    #define   SET16HDMIRX_PIPE_INTR_EN_SPDIFRX_FPLL_INTR(r16,v) _BFSET_(r16, 7, 7,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_DSI_INTR(r32)           _BFGET_(r32, 8, 8)
    #define   SET32HDMIRX_PIPE_INTR_EN_DSI_INTR(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_DSI_INTR(r16)           _BFGET_(r16, 8, 8)
    #define   SET16HDMIRX_PIPE_INTR_EN_DSI_INTR(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR(r32) _BFGET_(r32, 9, 9)
    #define   SET32HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR(r32,v) _BFSET_(r32, 9, 9,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR(r16) _BFGET_(r16, 9, 9)
    #define   SET16HDMIRX_PIPE_INTR_EN_HDMIRX_EARCTX_INTR(r16,v) _BFSET_(r16, 9, 9,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR(r32) _BFGET_(r32,10,10)
    #define   SET32HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR(r32,v) _BFSET_(r32,10,10,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR(r16) _BFGET_(r16,10,10)
    #define   SET16HDMIRX_PIPE_INTR_EN_HDMIRX_CFG_HPD_INTR(r16,v) _BFSET_(r16,10,10,v)

    #define   GET32HDMIRX_PIPE_INTR_EN_EARCRX_INTR(r32)        _BFGET_(r32,11,11)
    #define   SET32HDMIRX_PIPE_INTR_EN_EARCRX_INTR(r32,v)      _BFSET_(r32,11,11,v)
    #define   GET16HDMIRX_PIPE_INTR_EN_EARCRX_INTR(r16)        _BFGET_(r16,11,11)
    #define   SET16HDMIRX_PIPE_INTR_EN_EARCRX_INTR(r16,v)      _BFSET_(r16,11,11,v)

    #define     w32HDMIRX_PIPE_INTR_EN                         {\
            UNSG32 uINTR_EN_EOF                                :  1;\
            UNSG32 uINTR_EN_HDMIRX                             :  1;\
            UNSG32 uINTR_EN_SPDIFRX                            :  2;\
            UNSG32 uINTR_EN_EOF_YTG                            :  1;\
            UNSG32 uINTR_EN_EOF_UVTG                           :  1;\
            UNSG32 uINTR_EN_EOF_INPTG                          :  1;\
            UNSG32 uINTR_EN_SPDIFRX_FPLL_INTR                  :  1;\
            UNSG32 uINTR_EN_DSI_INTR                           :  1;\
            UNSG32 uINTR_EN_HDMIRX_EARCTX_INTR                 :  1;\
            UNSG32 uINTR_EN_HDMIRX_CFG_HPD_INTR                :  1;\
            UNSG32 uINTR_EN_EARCRX_INTR                        :  1;\
            UNSG32 RSVDx48_b12                                 : 20;\
          }
    union { UNSG32 u32HDMIRX_PIPE_INTR_EN;
            struct w32HDMIRX_PIPE_INTR_EN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_oTg_ctrl_start(r32)             _BFGET_(r32, 0, 0)
    #define   SET32HDMIRX_PIPE_oTg_ctrl_start(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16HDMIRX_PIPE_oTg_ctrl_start(r16)             _BFGET_(r16, 0, 0)
    #define   SET16HDMIRX_PIPE_oTg_ctrl_start(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32HDMIRX_PIPE_oTg_ctrl_clear(r32)             _BFGET_(r32, 1, 1)
    #define   SET32HDMIRX_PIPE_oTg_ctrl_clear(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16HDMIRX_PIPE_oTg_ctrl_clear(r16)             _BFGET_(r16, 1, 1)
    #define   SET16HDMIRX_PIPE_oTg_ctrl_clear(r16,v)           _BFSET_(r16, 1, 1,v)

    #define     w32HDMIRX_PIPE_oTg_ctrl                        {\
            UNSG32 uoTg_ctrl_start                             :  1;\
            UNSG32 uoTg_ctrl_clear                             :  1;\
            UNSG32 RSVDx4C_b2                                  : 30;\
          }
    union { UNSG32 u32HDMIRX_PIPE_oTg_ctrl;
            struct w32HDMIRX_PIPE_oTg_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_scl1d_Outpix_tot(r32)           _BFGET_(r32,31, 0)
    #define   SET32HDMIRX_PIPE_scl1d_Outpix_tot(r32,v)         _BFSET_(r32,31, 0,v)

    #define     w32HDMIRX_PIPE_scl1d_Outpix                    {\
            UNSG32 uscl1d_Outpix_tot                           : 32;\
          }
    union { UNSG32 u32HDMIRX_PIPE_scl1d_Outpix;
            struct w32HDMIRX_PIPE_scl1d_Outpix;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_STATUS1_HDRX_oTg(r32)           _BFGET_(r32,15, 0)
    #define   SET32HDMIRX_PIPE_STATUS1_HDRX_oTg(r32,v)         _BFSET_(r32,15, 0,v)
    #define   GET16HDMIRX_PIPE_STATUS1_HDRX_oTg(r16)           _BFGET_(r16,15, 0)
    #define   SET16HDMIRX_PIPE_STATUS1_HDRX_oTg(r16,v)         _BFSET_(r16,15, 0,v)

    #define     w32HDMIRX_PIPE_STATUS1                         {\
            UNSG32 uSTATUS1_HDRX_oTg                           : 16;\
            UNSG32 RSVDx54_b16                                 : 16;\
          }
    union { UNSG32 u32HDMIRX_PIPE_STATUS1;
            struct w32HDMIRX_PIPE_STATUS1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32HDMIRX_PIPE_STATUS2_VIP_YTg(r32)            _BFGET_(r32,15, 0)
    #define   SET32HDMIRX_PIPE_STATUS2_VIP_YTg(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16HDMIRX_PIPE_STATUS2_VIP_YTg(r16)            _BFGET_(r16,15, 0)
    #define   SET16HDMIRX_PIPE_STATUS2_VIP_YTg(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32HDMIRX_PIPE_STATUS2_VIP_UVTg(r32)           _BFGET_(r32,31,16)
    #define   SET32HDMIRX_PIPE_STATUS2_VIP_UVTg(r32,v)         _BFSET_(r32,31,16,v)
    #define   GET16HDMIRX_PIPE_STATUS2_VIP_UVTg(r16)           _BFGET_(r16,15, 0)
    #define   SET16HDMIRX_PIPE_STATUS2_VIP_UVTg(r16,v)         _BFSET_(r16,15, 0,v)

    #define     w32HDMIRX_PIPE_STATUS2                         {\
            UNSG32 uSTATUS2_VIP_YTg                            : 16;\
            UNSG32 uSTATUS2_VIP_UVTg                           : 16;\
          }
    union { UNSG32 u32HDMIRX_PIPE_STATUS2;
            struct w32HDMIRX_PIPE_STATUS2;
          };
    ///////////////////////////////////////////////////////////
              SIE_VIP_WriteClient                              ie_VIP_WR;
    ///////////////////////////////////////////////////////////
              SIE_VIP_WriteClient                              ie_VIP_CRCH_WR;
    ///////////////////////////////////////////////////////////
              SIE_VIP_WriteClient                              ie_VIP_METADATA_WR;
    ///////////////////////////////////////////////////////////
              SIE_TG                                           ie_VIP_TG;
    ///////////////////////////////////////////////////////////
              SIE_VIPSCLTOP                                    ie_VIPSCLTOP;
    ///////////////////////////////////////////////////////////
              SIE_CSC_C17O24                                   ie_VIP_CSC;
    ///////////////////////////////////////////////////////////
              SIE_DITHER                                       ie_VIP_DITHER;
    ///////////////////////////////////////////////////////////
              SIE_UPS_420_422_HDMI_12b                         ie_VIP_UPS420_HDMI;
    ///////////////////////////////////////////////////////////
              SIE_PATGEN                                       ie_VIP_PATGEN;
    ///////////////////////////////////////////////////////////
              SIE_VIPSTS                                       ie_VIPSTS;
    ///////////////////////////////////////////////////////////
              SIE_TG                                           ie_VIP_OTG;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_UPS420_HDMI;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_Y;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_UV;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_Y_HLUT;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_Y_VLUT;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_C_HLUT;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_C_VLUT;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR_UFP_FIFO;
    ///////////////////////////////////////////////////////////
              SIE_EDR_HDMIRX                                   ie_EDR_HDMIRX;
    ///////////////////////////////////////////////////////////
    } SIE_HDMIRX_PIPE;

    typedef union  T32HDMIRX_PIPE_CTRL
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CTRL;
                 } T32HDMIRX_PIPE_CTRL;
    typedef union  T32HDMIRX_PIPE_CTRL0
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CTRL0;
                 } T32HDMIRX_PIPE_CTRL0;
    typedef union  T32HDMIRX_PIPE_BYPASS_CTRL
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_BYPASS_CTRL;
                 } T32HDMIRX_PIPE_BYPASS_CTRL;
    typedef union  T32HDMIRX_PIPE_tg_ctrl
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_tg_ctrl;
                 } T32HDMIRX_PIPE_tg_ctrl;
    typedef union  T32HDMIRX_PIPE_CFG0
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CFG0;
                 } T32HDMIRX_PIPE_CFG0;
    typedef union  T32HDMIRX_PIPE_CFG01
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CFG01;
                 } T32HDMIRX_PIPE_CFG01;
    typedef union  T32HDMIRX_PIPE_CFG1
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CFG1;
                 } T32HDMIRX_PIPE_CFG1;
    typedef union  T32HDMIRX_PIPE_CFG2
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CFG2;
                 } T32HDMIRX_PIPE_CFG2;
    typedef union  T32HDMIRX_PIPE_CFG3
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CFG3;
                 } T32HDMIRX_PIPE_CFG3;
    typedef union  T32HDMIRX_PIPE_CFG4
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CFG4;
                 } T32HDMIRX_PIPE_CFG4;
    typedef union  T32HDMIRX_PIPE_CFG5
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_CFG5;
                 } T32HDMIRX_PIPE_CFG5;
    typedef union  T32HDMIRX_PIPE_VIP_CTRL
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_VIP_CTRL;
                 } T32HDMIRX_PIPE_VIP_CTRL;
    typedef union  T32HDMIRX_PIPE_tg_ctrl_420
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_tg_ctrl_420;
                 } T32HDMIRX_PIPE_tg_ctrl_420;
    typedef union  T32HDMIRX_PIPE_scl1d_Inpix
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_scl1d_Inpix;
                 } T32HDMIRX_PIPE_scl1d_Inpix;
    typedef union  T32HDMIRX_PIPE_sclOFIFO_YInpix
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_sclOFIFO_YInpix;
                 } T32HDMIRX_PIPE_sclOFIFO_YInpix;
    typedef union  T32HDMIRX_PIPE_sclOFIFO_UVInpix
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_sclOFIFO_UVInpix;
                 } T32HDMIRX_PIPE_sclOFIFO_UVInpix;
    typedef union  T32HDMIRX_PIPE_hdmirxpipe_Inpix
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_hdmirxpipe_Inpix;
                 } T32HDMIRX_PIPE_hdmirxpipe_Inpix;
    typedef union  T32HDMIRX_PIPE_STATUS
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_STATUS;
                 } T32HDMIRX_PIPE_STATUS;
    typedef union  T32HDMIRX_PIPE_INTR_EN
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_INTR_EN;
                 } T32HDMIRX_PIPE_INTR_EN;
    typedef union  T32HDMIRX_PIPE_oTg_ctrl
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_oTg_ctrl;
                 } T32HDMIRX_PIPE_oTg_ctrl;
    typedef union  T32HDMIRX_PIPE_scl1d_Outpix
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_scl1d_Outpix;
                 } T32HDMIRX_PIPE_scl1d_Outpix;
    typedef union  T32HDMIRX_PIPE_STATUS1
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_STATUS1;
                 } T32HDMIRX_PIPE_STATUS1;
    typedef union  T32HDMIRX_PIPE_STATUS2
          { UNSG32 u32;
            struct w32HDMIRX_PIPE_STATUS2;
                 } T32HDMIRX_PIPE_STATUS2;
    ///////////////////////////////////////////////////////////

    typedef union  THDMIRX_PIPE_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_CTRL;
                   };
                 } THDMIRX_PIPE_CTRL;
    typedef union  THDMIRX_PIPE_CTRL0
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_CTRL0;
                   };
                 } THDMIRX_PIPE_CTRL0;
    typedef union  THDMIRX_PIPE_BYPASS_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_BYPASS_CTRL;
                   };
                 } THDMIRX_PIPE_BYPASS_CTRL;
    typedef union  THDMIRX_PIPE_tg_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_tg_ctrl;
                   };
                 } THDMIRX_PIPE_tg_ctrl;
    typedef union  THDMIRX_PIPE_CFG0
          { UNSG32 u32[2];
            struct {
            struct w32HDMIRX_PIPE_CFG0;
            struct w32HDMIRX_PIPE_CFG01;
                   };
                 } THDMIRX_PIPE_CFG0;
    typedef union  THDMIRX_PIPE_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_CFG1;
                   };
                 } THDMIRX_PIPE_CFG1;
    typedef union  THDMIRX_PIPE_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_CFG2;
                   };
                 } THDMIRX_PIPE_CFG2;
    typedef union  THDMIRX_PIPE_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_CFG3;
                   };
                 } THDMIRX_PIPE_CFG3;
    typedef union  THDMIRX_PIPE_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_CFG4;
                   };
                 } THDMIRX_PIPE_CFG4;
    typedef union  THDMIRX_PIPE_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_CFG5;
                   };
                 } THDMIRX_PIPE_CFG5;
    typedef union  THDMIRX_PIPE_VIP_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_VIP_CTRL;
                   };
                 } THDMIRX_PIPE_VIP_CTRL;
    typedef union  THDMIRX_PIPE_tg_ctrl_420
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_tg_ctrl_420;
                   };
                 } THDMIRX_PIPE_tg_ctrl_420;
    typedef union  THDMIRX_PIPE_scl1d_Inpix
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_scl1d_Inpix;
                   };
                 } THDMIRX_PIPE_scl1d_Inpix;
    typedef union  THDMIRX_PIPE_sclOFIFO_YInpix
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_sclOFIFO_YInpix;
                   };
                 } THDMIRX_PIPE_sclOFIFO_YInpix;
    typedef union  THDMIRX_PIPE_sclOFIFO_UVInpix
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_sclOFIFO_UVInpix;
                   };
                 } THDMIRX_PIPE_sclOFIFO_UVInpix;
    typedef union  THDMIRX_PIPE_hdmirxpipe_Inpix
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_hdmirxpipe_Inpix;
                   };
                 } THDMIRX_PIPE_hdmirxpipe_Inpix;
    typedef union  THDMIRX_PIPE_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_STATUS;
                   };
                 } THDMIRX_PIPE_STATUS;
    typedef union  THDMIRX_PIPE_INTR_EN
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_INTR_EN;
                   };
                 } THDMIRX_PIPE_INTR_EN;
    typedef union  THDMIRX_PIPE_oTg_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_oTg_ctrl;
                   };
                 } THDMIRX_PIPE_oTg_ctrl;
    typedef union  THDMIRX_PIPE_scl1d_Outpix
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_scl1d_Outpix;
                   };
                 } THDMIRX_PIPE_scl1d_Outpix;
    typedef union  THDMIRX_PIPE_STATUS1
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_STATUS1;
                   };
                 } THDMIRX_PIPE_STATUS1;
    typedef union  THDMIRX_PIPE_STATUS2
          { UNSG32 u32[1];
            struct {
            struct w32HDMIRX_PIPE_STATUS2;
                   };
                 } THDMIRX_PIPE_STATUS2;

    ///////////////////////////////////////////////////////////
     SIGN32 HDMIRX_PIPE_drvrd(SIE_HDMIRX_PIPE *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 HDMIRX_PIPE_drvwr(SIE_HDMIRX_PIPE *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void HDMIRX_PIPE_reset(SIE_HDMIRX_PIPE *p);
     SIGN32 HDMIRX_PIPE_cmp  (SIE_HDMIRX_PIPE *p, SIE_HDMIRX_PIPE *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define HDMIRX_PIPE_check(p,pie,pfx,hLOG) HDMIRX_PIPE_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define HDMIRX_PIPE_print(p,    pfx,hLOG) HDMIRX_PIPE_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: HDMIRX_PIPE
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: hdmiRxPipe.h
////////////////////////////////////////////////////////////

